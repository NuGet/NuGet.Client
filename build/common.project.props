<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0">
  <!-- Helper properties -->
  <PropertyGroup>
    <IsXPlat>false</IsXPlat>
    <IsXPlat Condition=" $(MSBuildProjectFullPath.StartsWith('/')) == 'true' OR $(MSBuildProjectFullPath.StartsWith('\')) == 'true' ">true</IsXPlat>
  </PropertyGroup>

  <!-- Common -->
  <PropertyGroup>
    <RepositoryRootDirectory>$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), 'README.md'))\</RepositoryRootDirectory>
    <BuildCommonDirectory>$(RepositoryRootDirectory)build\</BuildCommonDirectory>
    <SolutionFile>$(RepositoryRootDirectory)$(RepositoryName).sln</SolutionFile>
    <ArtifactsDirectory>$(RepositoryRootDirectory)artifacts\</ArtifactsDirectory>
    <DotnetExePath>$(RepositoryRootDirectory)cli\dotnet.exe</DotnetExePath>
    <DotnetExePath Condition=" '$(IsXPlat)' == 'true' ">$(RepositoryRootDirectory)cli\dotnet</DotnetExePath>
    <DotnetSharedSDKDirectory>$(RepositoryRootDirectory)cli\shared\Microsoft.NETCore.App\1.0.4\</DotnetSharedSDKDirectory>
    <NuGetExePath>$(RepositoryRootDirectory).nuget\nuget.exe</NuGetExePath>
    <SharedDirectory>$(BuildCommonDirectory)Shared</SharedDirectory>
    <NuGetCoreSrcDirectory>$(RepositoryRootDirectory)src\NuGet.Core\</NuGetCoreSrcDirectory>
    <NuGetClientsSrcDirectory>$(RepositoryRootDirectory)src\NuGet.Clients\</NuGetClientsSrcDirectory>
    <NupkgOutputDirectory Condition=" '$(BuildRTM)' != 'true' ">$(ArtifactsDirectory)nupkgs\</NupkgOutputDirectory>
    <NupkgOutputDirectory Condition=" '$(BuildRTM)' == 'true' ">$(ArtifactsDirectory)ReleaseNupkgs\</NupkgOutputDirectory>
    <SolutionPackagesFolder>$(RepositoryRootDirectory)packages\</SolutionPackagesFolder>
    <XunitConsoleExePath>$(SolutionPackagesFolder)xunit.runner.console.2.2.0\tools\xunit.console.x86.exe</XunitConsoleExePath>
    <ILMergeExePath>$(SolutionPackagesFolder)ILMerge.2.14.1208\tools\ILMerge.exe</ILMergeExePath>
    <EnlistmentRoot>$(RepositoryRootDirectory)</EnlistmentRoot>
    <EnlistmentRootSrc>$(RepositoryRootDirectory)src</EnlistmentRootSrc>
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">$(RepositoryRootDirectory)</SolutionDir>
    <ArtifactRoot>$(ArtifactsDirectory)</ArtifactRoot>
    <TestUtilitiesDirectory>$(RepositoryRootDirectory)test\TestUtilities\</TestUtilitiesDirectory>
    <NuGetBuildLocalizationRepository>$(RepositoryRootDirectory)submodules\NuGet.Build.Localization\</NuGetBuildLocalizationRepository>
    <LocalizationRootDirectory>$(NuGetBuildLocalizationRepository)localize</LocalizationRootDirectory>
  </PropertyGroup>

  <!-- Defaults -->
  <PropertyGroup>
    <TreatWarningsAsErrors Condition=" '$(TreatWarningsAsErrors)' == '' ">true</TreatWarningsAsErrors>
  </PropertyGroup>

  <!-- Default project configuration -->
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <VisualStudioVersion Condition="'$(VisualStudioVersion)' == ''">15.0</VisualStudioVersion>
    <!-- Always use 15.0 since we cannot build on msbuild 14.0 -->
    <NuGetTargets>$(MSBuildExtensionsPath)\Microsoft\NuGet\15.0\Microsoft.NuGet.targets</NuGetTargets>
    <ComVisible>false</ComVisible>
  </PropertyGroup>


  <!-- Common project build settings -->
  <PropertyGroup>
    <PlatformTarget>$(Platform)</PlatformTarget>
    <Prefer32Bit>false</Prefer32Bit>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <NoWarn>$(NoWarn);1762</NoWarn>
    <!-- Code Analysis is OFF by default -->
    <RunCodeAnalysis Condition=" '$(RunCodeAnalysis)' == ''">false</RunCodeAnalysis>
    <!--This property ensures that if you build the exact sources twice, 
    you get exactly the same output, so the .pdb from the second build will match the .dll
     from the first build!-->
    <Deterministic>true</Deterministic>
  </PropertyGroup>

  <!-- DEBUG specific configuration settings -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
  </PropertyGroup>

  <!-- RELEASE specific configuration settings -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <DefineConstants>TRACE</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="'$(VisualStudioVersion)' == '14.0'">
    <MinimumVisualStudioVersion>14.0</MinimumVisualStudioVersion>
    <DefineConstants>$(DefineConstants);VS14</DefineConstants>
    <VSSDKRoot>$(RepositoryRootDirectory)packages\Microsoft.VSSDK.BuildTools.14.3.25420</VSSDKRoot>
    <VSToolsPath Condition="'$(VSToolsPath)' == ''">$(VSSDKRoot)\tools</VSToolsPath>
    <VsixOutputDirName>VS14</VsixOutputDirName>
  </PropertyGroup>

  <PropertyGroup Condition="'$(VisualStudioVersion)' == '15.0'">
    <MinimumVisualStudioVersion>15.0</MinimumVisualStudioVersion>
    <DefineConstants>$(DefineConstants);VS15</DefineConstants>
    <VSSDKRoot>$(RepositoryRootDirectory)packages\Microsoft.VSSDK.BuildTools.15.0.26201</VSSDKRoot>
    <VSToolsPath Condition="'$(VSToolsPath)' == ''">$(VSSDKRoot)\tools</VSToolsPath>
    <VsixOutputDirName>VS15</VsixOutputDirName>
    <CodeAnalysisRuleSet Condition="'$(CodeAnalysisRuleSet)' == ''">$(BuildCommonDirectory)NuGet.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>

  <PropertyGroup>
    <VsixPublishDestination>$(ArtifactRoot)$(VsixOutputDirName)\</VsixPublishDestination>
    <VsixPublishDestination Condition="'$(IsInsertable)' == 'true'">$(ArtifactRoot)$(VsixOutputDirName)\Insertable\</VsixPublishDestination>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(BuildRTM)' == 'true' ">
    <VsixOutputDirName>$(VsixOutputDirName)-RTM</VsixOutputDirName>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(PreReleaseVersion)' == '' ">
    <PreReleaseVersion>0</PreReleaseVersion>
  </PropertyGroup>

  <!--Setting the Pre-release/Build meta-data from CI if Version is set-->
  <PropertyGroup Condition="'$(BuildNumber)' != ''">
    <PreReleaseVersion>$(BuildNumber)</PreReleaseVersion>
  </PropertyGroup>

  <!--Setting the product information for Beta builds-->
  <Choose>
    <!-- If we aren't excluding the build number, use the release label and the build number. -->
    <When Condition="'$(BuildRTM)' != 'true' AND '$(PreReleaseVersion)' != '' AND '$(PreReleaseVersion)' != '0' ">
      <PropertyGroup>
        <PreReleaseInformationVersion>-$(ReleaseLabel)-$(PreReleaseVersion)</PreReleaseInformationVersion>
      </PropertyGroup>
    </When>
    <!-- If we are excluding the build number, show the release label unless we are RTM. -->
    <When Condition="'$(ReleaseLabel)' != 'rtm'">
      <PropertyGroup>
        <PreReleaseInformationVersion>-$(ReleaseLabel)</PreReleaseInformationVersion>
      </PropertyGroup>
    </When>
  </Choose>

  <PropertyGroup Condition=" '$(Version)' == '' ">
    <Version>$(SemanticVersion)$(PreReleaseInformationVersion)</Version>
  </PropertyGroup>

  <!-- Set the output location for all non-test projects -->
  <!-- Test projects currently fail when the output dir is moved -->
  <PropertyGroup Condition=" '$(TestProject)' != 'true' ">
    <!-- Create different folders for 14.0, 15.0, 15.0-RTM -->
    <BuildVariationFolder>$(VisualStudioVersion)</BuildVariationFolder>
    <BuildVariationFolder Condition=" '$(BuildRTM)' == 'true' ">$(BuildVariationFolder)-RTM</BuildVariationFolder>

    <!-- output paths -->
    <BaseIntermediateOutputPath>$(ArtifactsDirectory)$(MSBuildProjectName)\$(BuildVariationFolder)\obj\</BaseIntermediateOutputPath>
    <IntermediateOutputPath>$(BaseIntermediateOutputPath)$(Configuration)\</IntermediateOutputPath>
    <BaseOutputPath>$(ArtifactsDirectory)$(MSBuildProjectName)\$(BuildVariationFolder)\bin\</BaseOutputPath>
    <OutputPath>$(BaseOutputPath)$(Configuration)\</OutputPath>
    <AppxPackageDir>$(OutputPath)</AppxPackageDir>
  </PropertyGroup>

  <!-- Generate AssemblyFileVersion and AssemblyVersion attributes. -->
  <PropertyGroup Condition=" '$(IsNetCoreProject)' != 'true' ">
    <!-- Turn on dynamic assembly attribute generation -->
    <AssemblyAttributesPath>$(IntermediateOutputPath)AssemblyInfo.g.cs</AssemblyAttributesPath>
    <GenerateAdditionalSources>true</GenerateAdditionalSources>
  </PropertyGroup>

  <!-- Assembly attributes for non net core projects-->
  <ItemGroup Condition=" '$(SkipAssemblyAttributes)' != 'true' AND '$(IsNetCoreProject)' != 'true' ">
    <!--
      AssemblyVersion and AssemblyFileVersion attributes are generated automatically for every build.
      NuGet package version is derived from AssemblyFileVersion.
    -->
    <AssemblyAttributes Include="AssemblyVersion">
      <_Parameter1>$(SemanticVersion).$(PreReleaseVersion)</_Parameter1>
    </AssemblyAttributes>
    <AssemblyAttributes Include="AssemblyFileVersion">
      <_Parameter1>$(SemanticVersion).$(PreReleaseVersion)</_Parameter1>
    </AssemblyAttributes>
    <AssemblyAttributes Include="AssemblyInformationalVersion">
      <_Parameter1>$(SemanticVersion)$(PreReleaseInformationVersion)</_Parameter1>
    </AssemblyAttributes>
    <AssemblyAttributes Include="AssemblyCompany">
      <_Parameter1>Microsoft Corporation</_Parameter1>
    </AssemblyAttributes>
    <AssemblyAttributes Include="AssemblyProduct">
      <_Parameter1>NuGet</_Parameter1>
    </AssemblyAttributes>
    <AssemblyAttributes Include="AssemblyCopyright">
      <_Parameter1>Microsoft Corporation. All rights reserved.</_Parameter1>
    </AssemblyAttributes>
    <AssemblyAttributes Include="System.Resources.NeutralResourcesLanguage">
      <_Parameter1>en-US</_Parameter1>
    </AssemblyAttributes>
  </ItemGroup>

  <PropertyGroup Condition=" '$(IsNetCoreProject)' == 'true' ">
    <!-- Assembly attributes for net core projects -->
    <AssemblyVersion>$(SemanticVersion).$(NetCoreAssemblyBuildNumber)</AssemblyVersion>
    <FileVersion>$(SemanticVersion).$(PreReleaseVersion)</FileVersion>
    <InformationalVersion>$(SemanticVersion)$(PreReleaseInformationVersion)</InformationalVersion>
    <Company>Microsoft Corporation</Company>
    <Product>NuGet</Product>
    <Copyright>Microsoft Corporation. All rights reserved.</Copyright>
    <NeutralLanguage>en-US</NeutralLanguage>

    <SchemaVersion>2.0</SchemaVersion>
    <TypeScriptCompileBlocked>True</TypeScriptCompileBlocked>
    <ProduceOutputsOnBuild>True</ProduceOutputsOnBuild>
  </PropertyGroup>

  <!-- Add symbols to the dll for test dlls -->
  <PropertyGroup Condition=" '$(TestProject)' == 'true' ">
    <DebugType>full</DebugType>
    <CodeAnalysisRuleSet>$(BuildCommonDirectory)NuGet.Tests.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>

  <!-- The project that builds the VSIX -->
  <PropertyGroup>
    <VSIXProject>$(RepositoryRootDirectory)src\NuGet.Clients\NuGet.VisualStudio.Client\NuGet.VisualStudio.Client.csproj</VSIXProject>
  </PropertyGroup>

  <!-- Find all test projects  -->
  <ItemGroup Condition=" '$(IsXPlat)' != 'true' ">
    <CoreUnitTestProjects Include="$(RepositoryRootDirectory)test\NuGet.Core.Tests\*\*.csproj"
                          Exclude="$(RepositoryRootDirectory)test\NuGet.Core.Tests\NuGet.PackageManagement.Test\*.csproj"/>
    <VSUnitTestProjects Include="$(RepositoryRootDirectory)test\NuGet.Clients.Tests\*\*.csproj"
                        Exclude="$(RepositoryRootDirectory)test\NuGet.Clients.Tests\NuGet.CommandLine.Test\*.csproj" />
    <CoreFuncTestProjects Include="$(RepositoryRootDirectory)test\NuGet.Core.FuncTests\*\*.csproj;
                                   $(RepositoryRootDirectory)test\NuGet.Clients.Tests\NuGet.CommandLine.Test\*.csproj;
                                   $(RepositoryRootDirectory)test\NuGet.Core.Tests\NuGet.PackageManagement.Test\*.csproj;
                                   $(RepositoryRootDirectory)test\NuGet.Clients.FuncTests\*\*.csproj" />
  </ItemGroup>

  <!-- start with only nuget.versioning for xplat -->
  <ItemGroup Condition=" '$(IsXPlat)' == 'true' ">
    <CoreUnitTestProjects Include="$(RepositoryRootDirectory)test\NuGet.Core.Tests\*\*.csproj"
                          Exclude="$(RepositoryRootDirectory)test\NuGet.Core.Tests\*PackageManagement*\*.csproj;
                                   $(RepositoryRootDirectory)test\NuGet.Core.Tests\*ProjectManagement*\*.csproj;
                                   $(RepositoryRootDirectory)test\NuGet.Core.Tests\*VisualStudio*\*.csproj;
                                   $(RepositoryRootDirectory)test\NuGet.Core.Tests\*.Utility\*.csproj;
                                   $(RepositoryRootDirectory)test\NuGet.Core.Tests\NuGet.Indexing.Test\*.csproj" />
    <CoreFuncTestProjects Include="$(RepositoryRootDirectory)test\NuGet.Core.FuncTests\*\*.csproj" />
  </ItemGroup>

  <!-- All projects in the repository -->
  <ItemGroup Condition=" '$(IsXPlat)' != 'true' ">
    <SolutionProjects Include="$(RepositoryRootDirectory)test\*\*\*.csproj"
                      Exclude="$(RepositoryRootDirectory)test\EndToEnd\*\*.csproj"
                      Condition=" '$(ExcludeTestProjects)' != 'true' " />

    <SolutionProjects Include="$(RepositoryRootDirectory)src\*\*\*.csproj" />
    <SolutionProjectsWithoutVSIX Include="@(SolutionProjects)"
                                Exclude="$(VSIXProject)" />
  </ItemGroup>

  <!-- All projects in the repository that support cross platform builds -->
  <ItemGroup Condition=" '$(IsXPlat)' == 'true' ">
    <SolutionProjects Include="@(CoreUnitTestProjects)" />
    <SolutionProjects Include="@(CoreFuncTestProjects)" />
  </ItemGroup>

</Project>
