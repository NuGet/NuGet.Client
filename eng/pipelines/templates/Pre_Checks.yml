steps:
- task: CredScan@2
  inputs:
    toolMajorVersion: "V2"

- task: SdtReport@1
  displayName: "Generate Analysis Report"
  inputs:
    CredScan: true
    ToolLogsNotFoundAction: "Standard"

- task: DownloadPipelineArtifact@2
  displayName: "Download CredScan artifact"
  inputs:
    artifact: "CodeAnalysisLogs"
    path: $(Pipeline.Workspace)\CodeAnalysisLogs

- task: PowerShell@2
  displayName: "Analyze CredScan artifact"
  inputs:
    targetType: 'inline'
    script: |
      try {
        $credentialScannerMatches = Join-Path $(Pipeline.Workspace)\CodeAnalysisLogs CredentialScanner 
        $credentialScannerMatches = Join-Path $credentialScannerMatches CredentialScanner-matches.xml
        $credScannerXml = [xml](Get-Content $credentialScannerMatches)

        if($credScannerXml.DEFECTS -eq $null)
        {
          Write-Host "Unable to verify CodeAnalysisLogs artifact content, please manually verify it." 
          exit 1          
        }

        if ($credScannerXml.DEFECTS.DEFECT -ne $null) {
          Write-Host "CredentialScanner found following credential in this PR, please remove them from PR and use git squash/drop to remove commits with credential from git history then do force push:" 
          $credScannerXml.DEFECTS.DEFECT
          exit 1
        }
      } 
      catch 
      {
        Write-Host "##vso[task.LogIssue type=error;]$Error[0]"
        exit 1
      }
