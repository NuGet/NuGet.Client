steps:
- task: PowerShell@2
  displayName: "Print Environment Variables"
  inputs:
    targetType: "inline"
    script: |
      Write-Host "##vso[build.updatebuildnumber]$env:FullVstsBuildNumber"
      Get-ChildItem Env: | Sort-Object Name | Format-Table -Wrap -AutoSize

- task: PowerShell@1
  displayName: "Run Configure.ps1"
  inputs:
    scriptName: "$(Build.Repository.LocalPath)\\configure.ps1"
    arguments: "-Force -CleanCache"

- task: MSBuild@1
  displayName: "Restore for VS2019"
  inputs:
    solution: "build\\build.proj"
    configuration: "$(BuildConfiguration)"
    msbuildArguments: "/t:RestoreVS /p:BuildNumber=$(BuildNumber) /p:BuildRTM=false /v:m"

- task: MSBuild@1
  displayName: "BuildNoVSIX"
  continueOnError: "true"
  inputs:
    solution: "build\\build.proj"
    configuration: "$(BuildConfiguration)"
    msbuildArguments: "/t:BuildNoVSIX /p:BuildRTM=false /p:BuildNumber=$(BuildNumber) /p:TestResultOutputFormat=xml"
    maximumCpuCount: true

- task: PowerShell@1
  displayName: "Run Cross Verify Tests (continue on error)"
  continueOnError: "true"
  inputs:
    scriptType: "inlineScript"
    inlineScript: |
      dotnet test --no-build --configuration Release `
      $(Build.Repository.LocalPath)\test\NuGet.Core.FuncTests\NuGet.Signing.CrossFramework.Test\NuGet.Signing.CrossFramework.Test.csproj `
      --test-adapter-path:$(Build.Repository.LocalPath)\packages\xunitxml.testlogger\2.0.0\build\_common `
      --logger:"xunit;LogFileName=CrossVerifyTests-vsts.xml" `
      --logger:"console;verbosity=detailed" `
      --settings:$(Build.Repository.LocalPath)\build\xunit.runsettings
  condition: "and(succeeded(), eq(variables['IsOfficialBuild'], 'true'))"

- task: PowerShell@1
  displayName: "Run Cross Verify Tests (stop on error)"
  continueOnError: "false"
  inputs:
    scriptType: "inlineScript"
    inlineScript: |
      dotnet test --no-build --configuration Release `
      $(Build.Repository.LocalPath)\test\NuGet.Core.FuncTests\NuGet.Signing.CrossFramework.Test\NuGet.Signing.CrossFramework.Test.csproj `
      --test-adapter-path:$(Build.Repository.LocalPath)\packages\xunitxml.testlogger\2.0.0\build\_common `
      --logger:"xunit;LogFileName=CrossVerifyTests-vsts.xml" `
      --logger:"console;verbosity=detailed" `
      --settings:$(Build.Repository.LocalPath)\build\xunit.runsettings
  condition: "and(succeeded(), not(eq(variables['IsOfficialBuild'], 'true')))"

- task: PublishTestResults@2
  displayName: "Publish Test Results"
  continueOnError: "true"
  inputs:
    testRunner: "XUnit"
    testResultsFiles: "*.xml"
    searchFolder: "$(Build.Repository.LocalPath)\\build\\TestResults"
    mergeTestResults: "true"
    testRunTitle: "NuGet.Client Cross Verify Tests On Windows"
  condition: "succeededOrFailed()"

- task: PublishBuildArtifacts@1
  displayName: "Publish Test Freeze Dump"
  inputs:
    PathtoPublish: "$(Build.Repository.LocalPath)/build/TestResults"
    ArtifactName: "$(Agent.JobName)"
    ArtifactType: "Container"
  condition: "or(failed(), canceled())"

- task: PowerShell@1
  displayName: "Initialize Git Commit Status on GitHub"
  inputs:
    scriptType: "inlineScript"
    inlineScript: |
      . $(Build.Repository.LocalPath)\\scripts\\utils\\PostGitCommitStatus.ps1
      SetCommitStatusForTestResult -PersonalAccessToken $(NuGetLurkerPersonalAccessToken) -CommitSha $(Build.SourceVersion) -VstsPersonalAccessToken $(System.AccessToken) -TestName "$env:AGENT_JOBNAME"
  condition: "not(eq(variables['ManualGitHubChecks'], 'false'))"
