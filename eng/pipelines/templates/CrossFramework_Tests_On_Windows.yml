steps:
- task: PowerShell@2
  displayName: "Print Environment Variables"
  inputs:
    targetType: "inline"
    script: |
      Write-Host "##vso[build.updatebuildnumber]$env:FullVstsBuildNumber"
      Get-ChildItem Env: | Sort-Object Name | Format-Table -Wrap -AutoSize

- task: PowerShell@1
  displayName: "Disable strong name verification"
  inputs:
    scriptName: "$(Build.Repository.LocalPath)\\scripts\\utils\\DisableStrongNameVerification.ps1"

- task: PowerShell@1
  displayName: "Run Configure.ps1"
  inputs:
    scriptName: "$(Build.Repository.LocalPath)\\configure.ps1"
    arguments: "-Force -CleanCache"

- task: MSBuild@1
  displayName: "Restore"
  inputs:
    solution: '$(Build.Repository.LocalPath)\\test\\NuGet.Core.FuncTests\\NuGet.Signing.CrossFramework.Test\\NuGet.Signing.CrossFramework.Test.csproj'
    configuration: "$(BuildConfiguration)"
    msbuildArguments: "/target:Restore /property:BuildNumber=$(BuildNumber) /binarylogger:$(Build.StagingDirectory)\\binlog\\01.Restore.binlog"

- task: MSBuild@1
  displayName: "Build"
  inputs:
    solution: '$(Build.Repository.LocalPath)\\test\\NuGet.Core.FuncTests\\NuGet.Signing.CrossFramework.Test\\NuGet.Signing.CrossFramework.Test.csproj'
    configuration: "$(BuildConfiguration)"
    msbuildArguments: "/restore:false /property:BuildNumber=$(BuildNumber) /binarylogger:$(Build.StagingDirectory)\\binlog\\02.Build.binlog"

- task: DotNetCoreCLI@2
  displayName: "Run Cross Verify Tests (.NET Framework)"
  continueOnError: ${{ eq(variables['IsOfficialBuild'], 'true') }}
  inputs:
    command: 'test'
    projects: '$(Build.Repository.LocalPath)\test\NuGet.Core.FuncTests\NuGet.Signing.CrossFramework.Test\NuGet.Signing.CrossFramework.Test.csproj'
    arguments: '--no-restore --no-build --framework net472 --settings:$(Build.Repository.LocalPath)\build\xunit.runsettings /noautorsp /property:Configuration=$(BuildConfiguration) "/binarylogger:$(Build.StagingDirectory)\\binlog\\03.Test-net472.binlog"'
    testRunTitle: 'NuGet.Client Cross Verify Tests On Windows (.NET Framework)'

- task: DotNetCoreCLI@2
  displayName: "Run Cross Verify Tests (.NET 8.0)"
  continueOnError: ${{ eq(variables['IsOfficialBuild'], 'true') }}
  inputs:
    command: 'test'
    projects: '$(Build.Repository.LocalPath)\test\NuGet.Core.FuncTests\NuGet.Signing.CrossFramework.Test\NuGet.Signing.CrossFramework.Test.csproj'
    arguments: '--no-restore --no-build --framework net8.0 --settings:$(Build.Repository.LocalPath)\build\xunit.runsettings /noautorsp /property:Configuration=$(BuildConfiguration) "/binarylogger:$(Build.StagingDirectory)\\binlog\\03.Test-net8.0.binlog"'
    testRunTitle: 'NuGet.Client Cross Verify Tests On Windows (.NET 8.0)'
    condition: "succeededOrFailed()"

- task: PowerShell@1
  displayName: "Initialize Git Commit Status on GitHub"
  inputs:
    scriptType: "inlineScript"
    inlineScript: |
      . $(Build.Repository.LocalPath)\\scripts\\utils\\PostGitCommitStatus.ps1
      SetCommitStatusForTestResult -PersonalAccessToken $(NuGetLurkerPersonalAccessToken) -CommitSha $(Build.SourceVersion) -VstsPersonalAccessToken $(System.AccessToken) -TestName "$env:AGENT_JOBNAME"
  condition: "not(eq(variables['ManualGitHubChecks'], 'false'))"
