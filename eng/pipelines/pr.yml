parameters:
- name: RunUnitTestsOnWindows
  displayName: Run unit tests on Windows
  type: boolean
  default: true
- name: RunFunctionalTestsOnWindows
  displayName: Run functional tests on Windows
  type: boolean
  default: true
- name: RunUnitTestsOnLinux
  displayName: Run unit tests on Linux
  type: boolean
  default: true
- name: RunFunctionalTestsOnLinux
  displayName: Run functional tests on Linux
  type: boolean
  default: true
- name: RunUnitTestsOnMacOS
  displayName: Run unit tests on MacOS
  type: boolean
  default: true
- name: RunFunctionalTestsOnMacOS
  displayName: Run functional tests on MacOS
  type: boolean
  default: true
- name: RunSourceBuild
  displayName: Run a SourceBuild build
  type: boolean
  default: true
- name: RunStaticAnalysis
  displayName: Run a static analysis
  type: boolean
  default: true
variables:
  DOTNET_NOLOGO: 1
  NUGET_EXPERIMENTAL_CHAIN_BUILD_RETRY_POLICY: 3,1000
  SkipSigning: true
  CI: true
  Codeql.Enabled: false

trigger:
  branches:
    include:
    - dev

pr:
  branches:
    include:
    - '*'

stages:
- ${{ if eq(parameters.RunUnitTestsOnWindows, true) }}:
  - stage:
    displayName: Unit Tests on Windows (.NET Framework 4.7.2)
    dependsOn: []
    jobs:
    - template: pr.job.yml
      parameters:
        displayName: Unit Tests on Windows (.NET Framework 4.7.2)
        osName: Windows
        ${{ if eq(variables['System.TeamProject'], 'public') }}:
          agentPool: NetCore-Public
          agentDemands: ImageOverride -equals Windows.VS2022Preview.Amd64.Open
        ${{ else }}:
          agentPool: VSEngSS-MicroBuild2022-1ES
        testType: Unit
        testTargetFramework: net472

- ${{ if eq(parameters.RunUnitTestsOnWindows, true) }}:
  - stage:
    displayName: Unit Tests on Windows (.NET 9.0)
    dependsOn: []
    jobs:
    - template: pr.job.yml
      parameters:
        displayName: Unit Tests on Windows (.NET 9.0)
        osName: Windows
        ${{ if eq(variables['System.TeamProject'], 'public') }}:
          agentPool: NetCore-Public
          agentDemands: ImageOverride -equals Windows.VS2022Preview.Amd64.Open
        ${{ else }}:
          agentPool: VSEngSS-MicroBuild2022-1ES
        testType: Unit
        testTargetFramework: net9.0

- ${{ if eq(parameters.RunUnitTestsOnWindows, true) }}:
  - stage:
    displayName: Unit Tests on Windows (.NET Core 3.1)
    dependsOn: []
    jobs:
    - template: pr.job.yml
      parameters:
        displayName: Unit Tests on Windows (.NET Core 3.1)
        osName: Windows
        ${{ if eq(variables['System.TeamProject'], 'public') }}:
          agentPool: NetCore-Public
          agentDemands: ImageOverride -equals Windows.VS2022Preview.Amd64.Open
        ${{ else }}:
          agentPool: VSEngSS-MicroBuild2022-1ES
        testType: Unit
        testTargetFramework: netcoreapp3.1

- ${{ if eq(parameters.RunFunctionalTestsOnWindows, true) }}:
  - stage:
    displayName: Functional Tests on Windows (.NET Framework 4.7.2)
    dependsOn: []
    jobs:
    - template: pr.job.yml
      parameters:
        displayName: Functional Tests on Windows (.NET Framework 4.7.2)
        osName: Windows
        ${{ if eq(variables['System.TeamProject'], 'public') }}:
          agentPool: NetCore-Public
          agentDemands: ImageOverride -equals Windows.VS2022Preview.Amd64.Open
        ${{ else }}:
          agentPool: VSEngSS-MicroBuild2022-1ES
        testType: Functional
        testTargetFramework: net472
        timeoutInMinutes: 60

- ${{ if eq(parameters.RunFunctionalTestsOnWindows, true) }}:
  - stage:
    displayName: Functional Tests on Windows (.NET 9.0)
    dependsOn: []
    jobs:
    - template: pr.job.yml
      parameters:
        displayName: Functional Tests on Windows (.NET 9.0)
        osName: Windows
        ${{ if eq(variables['System.TeamProject'], 'public') }}:
          agentPool: NetCore-Public
          agentDemands: ImageOverride -equals Windows.VS2022Preview.Amd64.Open
        ${{ else }}:
          agentPool: VSEngSS-MicroBuild2022-1ES
        testType: Functional
        testTargetFramework: net9.0
        timeoutInMinutes: 60

- ${{ if eq(parameters.RunFunctionalTestsOnWindows, true) }}:
  - stage:
    displayName: Functional Tests on Windows (.NET Core 3.1)
    dependsOn: []
    jobs:
    - template: pr.job.yml
      parameters:
        displayName: Functional Tests on Windows (.NET Core 3.1)
        osName: Windows
        ${{ if eq(variables['System.TeamProject'], 'public') }}:
          agentPool: NetCore-Public
          agentDemands: ImageOverride -equals Windows.VS2022Preview.Amd64.Open
        ${{ else }}:
          agentPool: VSEngSS-MicroBuild2022-1ES
        testType: Functional
        testTargetFramework: netcoreapp3.1
        timeoutInMinutes: 60

- ${{ if eq(parameters.RunUnitTestsOnLinux, true) }}:
  - stage:
    displayName: Unit Tests on Linux (.NET 9.0)
    dependsOn: []
    jobs:
    - template: pr.job.yml
      parameters:
        displayName: Unit Tests on Linux (.NET 9.0)
        osName: Linux
        vmImage: ubuntu-latest
        testType: Unit
        testTargetFramework: net9.0

- ${{ if eq(parameters.RunUnitTestsOnLinux, true) }}:
  - stage:
    displayName: Unit Tests on Linux (.NET Core 3.1)
    dependsOn: []
    jobs:
    - template: pr.job.yml
      parameters:
        displayName: Unit Tests on Linux (.NET Core 3.1)
        osName: Linux
        vmImage: ubuntu-latest
        testType: Unit
        testTargetFramework: netcoreapp3.1

- ${{ if eq(parameters.RunFunctionalTestsOnLinux, true) }}:
  - stage:
    displayName: Functional Tests on Linux (.NET 9.0)
    dependsOn: []
    jobs:
    - template: pr.job.yml
      parameters:
        displayName: Functional Tests on Linux (.NET 9.0)
        osName: Linux
        vmImage: ubuntu-latest
        testType: Functional
        testTargetFramework: net9.0
        timeoutInMinutes: 60

- ${{ if eq(parameters.RunFunctionalTestsOnLinux, true) }}:
  - stage:
    displayName: Functional Tests on Linux (.NET Core 3.1)
    dependsOn: []
    jobs:
    - template: pr.job.yml
      parameters:
        displayName: Functional Tests on Linux (.NET Core 3.1)
        osName: Linux
        vmImage: ubuntu-latest
        testType: Functional
        testTargetFramework: netcoreapp3.1

- ${{ if eq(parameters.RunUnitTestsOnMacOS, true) }}:
  - stage:
    displayName: Unit Tests on MacOS (.NET 9.0)
    dependsOn: []
    jobs:
    - template: pr.job.yml
      parameters:
        displayName: Unit Tests on MacOS (.NET 9.0)
        osName: MacOS
        vmImage: macos-latest
        testType: Unit
        testTargetFramework: net9.0

- ${{ if eq(parameters.RunUnitTestsOnMacOS, true) }}:
  - stage:
    displayName: Unit Tests on MacOS (.NET Core 3.1)
    dependsOn: []
    jobs:
    - template: pr.job.yml
      parameters:
        displayName: Unit Tests on MacOS (.NET Core 3.1)
        osName: MacOS
        vmImage: macos-latest
        testType: Unit
        testTargetFramework: netcoreapp3.1

- ${{ if eq(parameters.RunFunctionalTestsOnMacOS, true) }}:
  - stage:
    displayName: Functional Tests on MacOS (.NET 9.0)
    dependsOn: []
    jobs:
    - template: pr.job.yml
      parameters:
        displayName: Functional Tests on MacOS (.NET 9.0)
        osName: MacOS
        vmImage: macos-latest
        testType: Functional
        testTargetFramework: net9.0
        timeoutInMinutes: 60

- ${{ if eq(parameters.RunFunctionalTestsOnMacOS, true) }}:
  - stage:
    displayName: Functional Tests on MacOS (.NET Core 3.1)
    dependsOn: []
    jobs:
    - template: pr.job.yml
      parameters:
        displayName: Functional Tests on MacOS (.NET Core 3.1)
        osName: MacOS
        vmImage: macos-latest
        testType: Functional
        testTargetFramework: netcoreapp3.1

- ${{ if or(eq(parameters.RunSourceBuild, true), eq(parameters.RunStaticAnalysis, true)) }}:
  - stage:
    displayName: Source Build and Static Analysis
    dependsOn: []
    jobs:
    - ${{ if eq(parameters.RunSourceBuild, true) }}:
      - job:
        displayName: Source Build
        timeoutInMinutes: 15
        variables:
          DOTNET_NUGET_SIGNATURE_VERIFICATION: true
        pool:
          vmImage: ubuntu-latest
        steps:
        - task: PowerShell@2
          displayName: "Run source-build script"
          inputs:
            targetType: "inline"
            script: |
              ./eng/dotnet-build/build.sh --source-build
    - ${{ if eq(parameters.RunStaticAnalysis, true) }}:
      - job:
        displayName: Run Static Analysis
        timeoutInMinutes: 15
        pool:
          vmImage: windows-latest
        steps:
        - task: PowerShell@2
          displayName: Run configure.ps1
          inputs:
            filePath: configure.ps1
        - script: SET | SORT
          displayName: Log Environment Variables
        - script: dotnet format whitespace --verify-no-changes NuGet.sln
          displayName: Run dotnet format whitespace
