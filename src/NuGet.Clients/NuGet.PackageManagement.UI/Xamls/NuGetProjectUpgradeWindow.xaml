<nuget:VsDialogWindow
  x:Class="NuGet.PackageManagement.UI.NuGetProjectUpgradeWindow"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:nuget="clr-namespace:NuGet.PackageManagement.UI"
  xmlns:imaging="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.Imaging"
  mc:Ignorable="d"
  x:Name="_self"
  Background="{DynamicResource {x:Static nuget:Brushes.BackgroundBrushKey}}"
  Foreground="{DynamicResource {x:Static nuget:Brushes.UIText}}"
  ShowInTaskbar="False"
  WindowStartupLocation="CenterOwner"
  Title="{Binding Title}"
  Height="600"
  MinHeight="480"
  MinWidth="640"
  Width="640"
  d:DataContext="{d:DesignInstance Type=nuget:NuGetProjectUpgradeWindowModel, IsDesignTimeCreatable=True}" ResizeMode="CanResizeWithGrip">

  <Window.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <nuget:SharedResources />
      </ResourceDictionary.MergedDictionaries>
      <ControlTemplate
        x:Key="StandardItemsControlTemplate"
        TargetType="{x:Type ItemsControl}">
        <Border
          BorderThickness="1"
          BorderBrush="{DynamicResource {x:Static nuget:Brushes.BorderBrush}}">
          <ScrollViewer
            Padding="3"
            Background="{DynamicResource {x:Static nuget:Brushes.ContentBrushKey}}"
            CanContentScroll="False"
            VerticalScrollBarVisibility="Auto"
            HorizontalScrollBarVisibility="Disabled">
            <ItemsPresenter />
          </ScrollViewer>
        </Border>
      </ControlTemplate>
      <ControlTemplate x:Key="ExpanderHeaderTemplate" TargetType="{x:Type ToggleButton}">
        <Grid Background="Transparent">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="16" />
            <ColumnDefinition />
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
          </Grid.RowDefinitions>
          <Border Grid.Column="0" Grid.Row="0" Width="13" Height="13" Padding="2">
            <Path
              Stroke="{TemplateBinding Foreground}"
              x:Name="_checkboxIconPath"
              Data="M0.5,0.5 8.5,0.5 8.5,8.5 0.5,8.5 z M2,4.5 7,4.5 M4.5,2 4.5,7" />
          </Border>
          <StackPanel Orientation="Horizontal" Grid.Column="1" Grid.Row="0">
            <Image
              Source="{TemplateBinding Tag}"
              Height="16"
              Width="16"
              Margin="2,1,1,1"
              Visibility="{TemplateBinding Tag, Converter={StaticResource NullToVisibilityConverter}}"/>
            <ContentPresenter Margin="2,0" ContentSource="Content" />
          </StackPanel>
        </Grid>
        <ControlTemplate.Triggers>
          <Trigger Property="IsChecked" Value="True">
            <Setter
              TargetName="_checkboxIconPath"
              Property="Data"
              Value="M0.5,0.5 8.5,0.5 8.5,8.5 0.5,8.5 z M2,4.5 7,4.5" />
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>
      <ControlTemplate x:Key="SimpleExpander" TargetType="{x:Type Expander}">
        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
          </Grid.RowDefinitions>

          <ToggleButton
            x:Name="_expanderHeader"
            Grid.Row="0"
            Margin="0,0,0,1"
            FontWeight="Bold"
            ClickMode="Press"
            DockPanel.Dock="Top"
            Template="{StaticResource ExpanderHeaderTemplate}"
            Content="{TemplateBinding Header}"
            IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
            OverridesDefaultStyle="True"
            Tag="{TemplateBinding Tag}" />
          <ContentPresenter
            x:Name="_expanderContent"
            Margin="18,0,0,0"
            Grid.Row="1"
            Visibility="Collapsed"
            DockPanel.Dock="Bottom" />
        </Grid>
        <ControlTemplate.Triggers>
          <Trigger Property="IsExpanded" Value="True">
            <Setter TargetName="_expanderContent" Property="Visibility" Value="Visible" />
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>
      <Style TargetType="DataGridCell" x:Key="UpgraderDataGridCellStyle">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static nuget:Brushes.UIText}}" />
        <Setter Property="Focusable" Value="True"/>
        <Style.Triggers>
          <Trigger Property="IsSelected" Value="True">
            <Setter Property="Background" Value="{x:Null}" />
            <Setter Property="BorderBrush" Value="{x:Null}" />
          </Trigger>
        </Style.Triggers>
      </Style>
      <Style x:Key="Migrator_DataGridColumnHeaderStyle" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="{DynamicResource {x:Static nuget:Brushes.ContentBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static nuget:Brushes.BorderBrush}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static nuget:Brushes.UIText}}" />
        <Setter Property="BorderThickness" Value="1,0,0,1"/>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="Padding" Value="3,2,2,4"/>
        <Style.Triggers>
          <Trigger Property="IsMouseOver" Value="True">
            <Setter Property="Background" Value="{DynamicResource {x:Static nuget:Brushes.ButtonHoverStyleBrushKey}}" />
          </Trigger>
          <Trigger Property="IsPressed" Value="True">
            <Setter Property="Background" Value="{DynamicResource {x:Static nuget:Brushes.ButtonPressedStyleBrushKey}}" />
          </Trigger>
        </Style.Triggers>
      </Style>
    </ResourceDictionary>
  </Window.Resources>

  <Window.CommandBindings>
    <CommandBinding
      Command="{x:Static nuget:PackageManagerControlCommands.OpenExternalLink}"
      Executed="ExecuteOpenExternalLink" />
  </Window.CommandBindings>

  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="*" />
      <RowDefinition Height="*" />
      <RowDefinition Height="1.5*" />
      <RowDefinition Height="Auto" />
    </Grid.RowDefinitions>
    <Grid x:Name="TopLevelDependenciesGrid" Grid.Row="0" Margin="12,8,12,4">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition />
      </Grid.RowDefinitions>
      <TextBlock
        x:Name="_directDependenciesLabel"
        Focusable="True"
        AutomationProperties.Name="{Binding Text}"
        Grid.Row="0"
        Margin="0,0,0,4"
        Text="{x:Static nuget:Resources.Text_DirectDependencies}" />
      <DataGrid Grid.Row="1" ItemsSource="{Binding DirectDependencies}" AutoGenerateColumns="False" RowHeaderWidth="0" GridLinesVisibility="None" Background="Transparent" RowBackground="Transparent" BorderBrush="{DynamicResource {x:Static nuget:Brushes.BorderBrush}}"
                ColumnHeaderStyle="{StaticResource Migrator_DataGridColumnHeaderStyle}" Focusable="True" Margin="0,2,0,0">
        <DataGrid.Columns>
          <DataGridTextColumn x:Name="directDependency_id" Binding="{Binding Id}" Header="{x:Static nuget:Resources.Migrator_PackageIdColumnHeader}" MinWidth="20" Width="4*" IsReadOnly="True" CellStyle="{StaticResource UpgraderDataGridCellStyle}"/>
          <DataGridTextColumn x:Name="directDependency_version" Binding="{Binding Version}" Header="{x:Static nuget:Resources.Migrator_VersionColumnHeader}" Width="*" IsReadOnly="True" CellStyle="{StaticResource UpgraderDataGridCellStyle}"/>
        </DataGrid.Columns>
      </DataGrid>
    </Grid>

    <Grid x:Name="TransitiveDependenciesGrid" Grid.Row="1" Margin="12,8,12,4">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>
      <TextBlock
        x:Name="_transitiveDependenciesLabel"
        AutomationProperties.Name="{Binding Text}"
        Focusable="True"
        Grid.Row="0"
        Margin="0,0,0,4"
        Text="{x:Static nuget:Resources.Text_TransitiveDependencies}" />
      <DataGrid Grid.Row="1" ItemsSource="{Binding TransitiveDependencies}" AutoGenerateColumns="False" RowHeaderWidth="0" GridLinesVisibility="None" Background="Transparent" RowBackground="Transparent"
                Margin="0,2,0,0"
                Focusable="True"
                BorderBrush="{DynamicResource {x:Static nuget:Brushes.BorderBrush}}"
                ColumnHeaderStyle="{StaticResource Migrator_DataGridColumnHeaderStyle}">
        <DataGrid.Columns>
          <DataGridTextColumn x:Name="transitiveDependency_id" Binding="{Binding Id}" Header="{x:Static nuget:Resources.Migrator_PackageIdColumnHeader}" MinWidth="20" Width="4*" IsReadOnly="True" CellStyle="{StaticResource UpgraderDataGridCellStyle}"/>
          <DataGridTextColumn x:Name="transitiveDependency_version" Binding="{Binding Version}" Header="{x:Static nuget:Resources.Migrator_VersionColumnHeader}" Width="*" IsReadOnly="True" CellStyle="{StaticResource UpgraderDataGridCellStyle}"/>
          <DataGridTemplateColumn CellStyle="{StaticResource UpgraderDataGridCellStyle}" Width="*" IsReadOnly="True">
            <DataGridTemplateColumn.Header>
              <StackPanel Orientation="Horizontal">
                <CheckBox IsChecked="False" Checked="PromoteAllToTopLevel_Checked" Unchecked="PromoteAllToTopLevel_Checked"/>
                <TextBlock Text="{x:Static nuget:Resources.Migrator_TopLevelColumnHeader}" Margin="4,0,0,0"/>
              </StackPanel>
            </DataGridTemplateColumn.Header>
            <DataGridTemplateColumn.HeaderStyle>
              <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource Migrator_DataGridColumnHeaderStyle}">
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
              </Style>
            </DataGridTemplateColumn.HeaderStyle>
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <CheckBox HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding Mode=TwoWay, Path=InstallAsTopLevel, UpdateSourceTrigger=PropertyChanged}"/>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>
        </DataGrid.Columns>
      </DataGrid>
    </Grid>

    <Grid x:Name="PackageIssuesGrid" Grid.Row="2" Margin="12,8,12,4">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition Height="*" />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>

      <TextBlock x:Name="_packageCompatibilityIssuesLabel" Focusable="True" AutomationProperties.Name="{Binding Text}" Margin="0,0,4,8" Grid.Row="0" Text="{x:Static nuget:Resources.Text_NuGetUpgradeIssues}" />

      <Border
        Grid.Row="1"
        Visibility="{Binding HasIssues, Mode=OneTime, Converter={StaticResource InvertedBooleanToVisibilityConverter}}"
        BorderThickness="1"
        Padding="3"
        BorderBrush="{DynamicResource {x:Static nuget:Brushes.BorderBrush}}"
        Background="{DynamicResource {x:Static nuget:Brushes.ContentBrushKey}}">
        <TextBlock
          Focusable="True"
          Text="{x:Static nuget:Resources.Text_NuGetUpgradeNoIssuesFound}" />
      </Border>

      <ItemsControl
        Grid.Row="1"
        IsTabStop="True"
        ItemsSource="{Binding UpgradeDependencyItems}"
        Visibility="{Binding HasIssues, Mode=OneTime, Converter={StaticResource BooleanToVisibilityConverter}}"
        x:Name="_packageIssuesItemControl"
        AutomationProperties.AutomationId="{Binding Name}"
        Template="{StaticResource StandardItemsControlTemplate}">
        <ItemsControl.ItemTemplate>
          <DataTemplate>
            <Expander
              x:Name="_packageIssuesExpander"
              Margin="4,4,8,0"
              Template="{StaticResource SimpleExpander}"
              Header="{Binding Path=Id}"
              Visibility="{Binding Path=Issues, Converter={StaticResource EnumerableToVisibilityConverter}}"
              Foreground="{DynamicResource {x:Static nuget:Brushes.UIText}}"
              AutomationProperties.AutomationId="_packageIssuesItemControlExpander"
              IsExpanded="True">
              <ItemsControl
                Margin="8,4,16,4"
                Foreground="{DynamicResource {x:Static nuget:Brushes.UIText}}"
                ItemsSource="{Binding Path=Issues}"
                x:Name="_packageIssuesExpanderItemControl"
                AutomationProperties.AutomationId="{Binding Name}"
                Focusable="True"
                IsTabStop="True">
                <ItemsControl.ItemTemplate>
                  <DataTemplate>
                    <StackPanel x:Name="_packageIssuesStackPanel" Orientation="Vertical">
                      <TextBlock x:Name="_packageIssueDescriptionText" Focusable="True" AutomationProperties.Name="{Binding Text}" AutomationProperties.AutomationId="{Binding Name}" Text="{Binding Path=Message}" Margin="0,2,0,2" TextWrapping="Wrap"/>
                    </StackPanel>
                  </DataTemplate>
                </ItemsControl.ItemTemplate>
              </ItemsControl>
            </Expander>
          </DataTemplate>
        </ItemsControl.ItemTemplate>
      </ItemsControl>
    </Grid>

    <Grid x:Name="PackageUpgraderFooterGrid" Grid.Row="3">
      <Grid.ColumnDefinitions>
        <ColumnDefinition />
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>

      <StackPanel Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Bottom" Margin="12,12">
        <imaging:CrispImage
          Margin="0,0,2,0"
          Width="16"
          Height="16"
          Moniker="{x:Static nuget:PackageIconMonikers.MigratorHelpIcon}" />
        <TextBlock Margin="4,0,0,0">
          <Hyperlink
            NavigateUri="https://aka.ms/nuget-pc2pr-migrator"
            Style="{StaticResource HyperlinkStyle}"
            Command="{x:Static nuget:PackageManagerControlCommands.OpenExternalLink}">
            <Run Text="{x:Static nuget:Resources.Text_HelpMeMigrate}" />
          </Hyperlink>
        </TextBlock>
      </StackPanel>

      <Button
        Grid.Column="1"
        MinWidth="86"
        MinHeight="24"
        Margin="0,12"
        Content="{x:Static nuget:Resources.Button_OK}"
        AutomationProperties.AutomationId="OkButton"
        IsDefault="True"
        IsEnabled="{Binding HasNotFoundPackages, Converter={StaticResource InverseBooleanConverter}}"
        Click="OkButtonClicked" />
      <Button
        Grid.Column="2"
        MinWidth="86"
        MinHeight="24"
        Margin="6,12,12,12"
        Content="{x:Static nuget:Resources.Button_Cancel}"
        AutomationProperties.AutomationId="CancelButton"
        IsCancel="True"
        Click="CancelButtonClicked" />

    </Grid>
  </Grid>
</nuget:VsDialogWindow>