<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Cmdlet_CommandObsolete" xml:space="preserve">
    <value>This Command/Parameter combination has been deprecated and will be removed in the next release. Please consider using the new command that replaces it: '{0}'.</value>
  </data>
  <data name="Cmdlet_CommandRemoved" xml:space="preserve">
    <value>The {0} Command has been deprecated and will be removed in the next release. Please modify your PowerShell scripts accordingly. </value>
  </data>
  <data name="Cmdlet_DisplayMorePackagesNoHelp" xml:space="preserve">
    <value>Stop to display more packages</value>
  </data>
  <data name="Cmdlet_DisplayMorePackagesYesHelp" xml:space="preserve">
    <value>Continue to display more packages</value>
  </data>
  <data name="Cmdlet_FailToParsePackages" xml:space="preserve">
    <value>Failed to parse package identities from file {0} with exception: {1}</value>
  </data>
  <data name="Cmdlet_FailToParseVersion" xml:space="preserve">
    <value>Failed to parse the input of Version parameter: {0} to a valid Semantic version. </value>
  </data>
  <data name="Cmdlet_FileConflictNoAllHelp" xml:space="preserve">
    <value>Skip this file and all subsequent files</value>
  </data>
  <data name="Cmdlet_FileConflictNoHelp" xml:space="preserve">
    <value>Skip this file</value>
  </data>
  <data name="Cmdlet_FileConflictYesAllHelp" xml:space="preserve">
    <value>Overwrite this file and all subsequent files</value>
  </data>
  <data name="Cmdlet_FileConflictYesHelp" xml:space="preserve">
    <value>Overwrite this file</value>
  </data>
  <data name="Cmdlet_GetPackageNoPackageFound" xml:space="preserve">
    <value>No packages found in the current package source.</value>
  </data>
  <data name="Cmdlet_InstallSuccessDisclaimerText" xml:space="preserve">
    <value>You are downloading {0} from {1}, the license agreement to which is available at {2}. Check the package for additional dependencies, which may come with their own license agreement(s). Your use of the package and dependencies constitutes your acceptance of their license agreements. If you do not accept the license agreement(s), then delete the relevant components from your device.</value>
  </data>
  <data name="Cmdlet_InvalidPathSyntax" xml:space="preserve">
    <value>The path '{0}' is invalid.</value>
  </data>
  <data name="Cmdlet_InvalidProvider" xml:space="preserve">
    <value>Only paths residing on a FileSystemProvider are supported.</value>
  </data>
  <data name="Cmdlet_InvalidPSDrive" xml:space="preserve">
    <value>The PSDrive '{0}' was not found.</value>
  </data>
  <data name="Cmdlet_No" xml:space="preserve">
    <value>&amp;No</value>
  </data>
  <data name="Cmdlet_NoActivePackageSource" xml:space="preserve">
    <value>Unable to retrieve package list because no source was specified.</value>
  </data>
  <data name="Cmdlet_NoAll" xml:space="preserve">
    <value>No to Al&amp;l</value>
  </data>
  <data name="Cmdlet_NoCompatibleProjects" xml:space="preserve">
    <value>No compatible project(s) found in the active solution.</value>
  </data>
  <data name="Cmdlet_NoPackagesInstalled" xml:space="preserve">
    <value>No packages installed.</value>
  </data>
  <data name="Cmdlet_NoPackageUpdates" xml:space="preserve">
    <value>No package updates are available from the current package source for project '{0}'.</value>
  </data>
  <data name="Cmdlet_NoSolution" xml:space="preserve">
    <value>The current environment doesn't have a solution open.</value>
  </data>
  <data name="Cmdlet_OpenPackagePageAction" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="Cmdlet_PackageIdAndVersionNotFound" xml:space="preserve">
    <value>Package with the Id '{0}' and version '{1}' is not found in the specified source.</value>
  </data>
  <data name="Cmdlet_PackageIdNotFound" xml:space="preserve">
    <value>Package with the Id '{0}' is not found in the specified source.</value>
  </data>
  <data name="Cmdlet_PackageNotInstalled" xml:space="preserve">
    <value>Package with the Id '{0}' is not installed to project '{1}'.</value>
  </data>
  <data name="Cmdlet_PackageOperation" xml:space="preserve">
    <value>{0} {1}</value>
  </data>
  <data name="Cmdlet_PackageSourceNotFound" xml:space="preserve">
    <value>Package source '{0}' is not matching any of the enabled package sources.</value>
  </data>
  <data name="Cmdlet_ProjectNotFound" xml:space="preserve">
    <value>Project '{0}' is not found.</value>
  </data>
  <data name="Cmdlet_PrompToDisplayMorePackages" xml:space="preserve">
    <value>There may be more packages to display. Do you want to continue?</value>
  </data>
  <data name="Cmdlet_UrlMissing" xml:space="preserve">
    <value>The package '{0}' does not provide the requested URL.</value>
  </data>
  <data name="Cmdlet_Yes" xml:space="preserve">
    <value>&amp;Yes</value>
  </data>
  <data name="Cmdlet_YesAll" xml:space="preserve">
    <value>Yes to &amp;All</value>
  </data>
  <data name="Cmdlet_Log_NoActionsWhatIf" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="Cmdlet_Log_OperationWhatIf" xml:space="preserve">
    <value>WhatIf: {0}</value>
  </data>
  <data name="Cmdlet_FileConflictTitle" xml:space="preserve">
    <value>File Conflict</value>
  </data>
  <data name="Cmdlet_PackageNotInstalledInAnyProject" xml:space="preserve">
    <value>'{0}' was not installed in any project. Update failed.</value>
  </data>
  <data name="Cmdlet_UnknownPackage" xml:space="preserve">
    <value>Unable to find package '{0}'.</value>
  </data>
  <data name="Cmdlet_UnknownPackageSpecificVersion" xml:space="preserve">
    <value>Unable to find version '{1}' of package '{0}'.</value>
  </data>
  <data name="Cmdlet_ExecutingScript" xml:space="preserve">
    <value>Executing script file '{0}'</value>
  </data>
  <data name="Cmdlet_NoPackageActions" xml:space="preserve">
    <value>No package actions available to be executed.</value>
  </data>
  <data name="Cmdlet_NoProjectsToSyncPackage" xml:space="preserve">
    <value>There are no other projects to sync the package '{0}'.</value>
  </data>
  <data name="Cmdlet_MissingPackages" xml:space="preserve">
    <value>Some NuGet packages are missing from the solution. The packages need to be restored in order to build the dependency graph. Restore the packages before performing any operations.</value>
  </data>
  <data name="Cmdlet_RequestRestartToCompleteUninstall" xml:space="preserve">
    <value>One or more packages could not be completely uninstalled: '{0}'. Restart Visual Studio to finish uninstall.</value>
  </data>
  <data name="Cmdlet_TotalTime" xml:space="preserve">
    <value>Time Elapsed: {0}</value>
  </data>
  <data name="Cmdlet_FailedToSearchSource" xml:space="preserve">
    <value>The following source failed to search for packages: '{0}'{1}{2}</value>
    <comment>{0} is the source that failed.
{1} is a line separator.
{2} is the exception message.</comment>
  </data>
</root>