<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DTE_ProjectUnsupported" xml:space="preserve">
    <value>The project '{0}' is unsupported</value>
  </data>
  <data name="FailedToAddReference" xml:space="preserve">
    <value>Failed to add reference to '{0}'.</value>
  </data>
  <data name="FailedToAddGacReference" xml:space="preserve">
    <value>Failed to add reference. The package '{0}' tried to add a framework reference to '{1}' which was not found in the GAC. This is possibly a bug in the package. Please contact the package owners for assistance.</value>
  </data>
  <data name="Debug_AddGacReference" xml:space="preserve">
    <value>Added reference '{0}' in the Global Assembly Cache to project '{1}'</value>
  </data>
  <data name="Warning_FileAlreadyExists" xml:space="preserve">
    <value>'{0}' already exists. Skipping...</value>
  </data>
  <data name="Debug_AddedFileToProject" xml:space="preserve">
    <value>Added file '{0}' to project '{1}'.</value>
  </data>
  <data name="PathToExistingFileNotPresent" xml:space="preserve">
    <value>Path '{0}' to existing file is not found on disk. Cannot add to project '{1}'</value>
  </data>
  <data name="Argument_Must_Be_GreaterThanOrEqualTo" xml:space="preserve">
    <value>Value must be greater than or equal to {0}.</value>
  </data>
  <data name="Debug_RemovedFile" xml:space="preserve">
    <value>Removed file '{0}'</value>
  </data>
  <data name="Debug_RemovedFileFromFolder" xml:space="preserve">
    <value>Removed file '{0}' from folder '{1}'</value>
  </data>
  <data name="Debug_RemoveReference" xml:space="preserve">
    <value>Removed reference '{0}' from project '{1}'</value>
  </data>
  <data name="Error_FailedToCreateParentFolder" xml:space="preserve">
    <value>Failed to create parent folder for file '{0}' in project {1}.</value>
  </data>
  <data name="FailedToRemoveReference" xml:space="preserve">
    <value>Case insensitive search for reference '{0}', to be removed, returned more than 1 match. Request could not be performed.</value>
  </data>
  <data name="Warning_FailedToFindMatchForRemoveReference" xml:space="preserve">
    <value>Failed to find match for removing reference '{0}'.</value>
  </data>
  <data name="Warning_NoExactMatchForReference" xml:space="preserve">
    <value>No exact match found for removing reference '{0}'. Trying No No exact match found for removing reference '{0}'. Trying case-insensitive search...-</value>
  </data>
  <data name="InstallingPackage" xml:space="preserve">
    <value>Installing NuGet package {0}.</value>
  </data>
  <data name="UninstallingPackage" xml:space="preserve">
    <value>Uninstalling NuGet package {0}.</value>
  </data>
  <data name="Warning_FailedToDeleteMarkedPackageDirectory" xml:space="preserve">
    <value>Failed to remove package directory '{0}' that was marked for deletion on Visual Studio restart.</value>
  </data>
  <data name="Warning_FailedToDeleteMarkedPackageDirectories" xml:space="preserve">
    <value>Failed to remove package directories that were marked for deletion on Visual Studio restart: {0}</value>
  </data>
  <data name="Warning_FailedToMarkPackageDirectoryForDeletion" xml:space="preserve">
    <value>Failed to mark package directory '{0}' for deletion on Visual Studio restart: {1}</value>
  </data>
  <data name="UnresolvedItemDuringProjectClosureWalk" xml:space="preserve">
    <value>Failed to resolve all items referenced by '{0}'. This message can typically be ignored. The issue may be resolved by fully restoring and building the solution. If the unresolved item is a project reference this can lead to an incomplete NuGet restore result and missing package references. To ensure that restore is able to find all projects verify that all projects are referenced correctly and exist on disk.</value>
  </data>
  <data name="SolutionIsNotSaved" xml:space="preserve">
    <value>Solution is not saved. Please save your solution before managing NuGet packages.</value>
  </data>
  <data name="Error_WhileLoadingConfigForBindingRedirects" xml:space="preserve">
    <value>Failed to load '{0}', while updating binding redirects. {1}</value>
  </data>
  <data name="FailedToUpdateBindingRedirects" xml:space="preserve">
    <value>Failed to update binding redirects for {0} : {1}</value>
  </data>
  <data name="ConfigErrorDialogBoxTitle" xml:space="preserve">
    <value>NuGet operation failed</value>
  </data>
  <data name="FailedToAddFacadeReference" xml:space="preserve">
    <value>Failed to add reference to '{0}'. The package '{1}' tried to add a framework reference to '{0}'. This reference is not required to be explicitly added by a package.</value>
    <comment>{0} is the framework facade reference name
{1} is the package name</comment>
  </data>
  <data name="ProjectNotLoaded_RestoreFailed" xml:space="preserve">
    <value>The operation failed as details for project {0} could not be loaded.</value>
  </data>
  <data name="BaseIntermediateOutputPathNotFound" xml:space="preserve">
    <value>The BaseIntermediateOutputPath MSBuild property could not be found for project '{0}'.</value>
    <comment>{0} is the full path to the project.</comment>
  </data>
  <data name="ProjectCouldNotBeCastedToBuildPropertyStorage" xml:space="preserve">
    <value>The project '{0}' could not be casted to a build property storage interace, which is required to get MSBuild properties inside Visual Studio.</value>
    <comment>{0} is the full path to the project.</comment>
  </data>
  <data name="UnableToGetCPSPackageInstallationService" xml:space="preserve">
    <value>Unable to get the project's package installation service for project '{0}'.</value>
    <comment>{0} is the full path to the project.</comment>
  </data>
</root>