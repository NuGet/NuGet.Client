//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NuGet.VisualStudio.Implementation.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class VsResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal VsResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("NuGet.VisualStudio.Implementation.Resources.VsResources", typeof(VsResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The framework name &apos;{0}&apos; cannot be converted to a short framework name..
        /// </summary>
        internal static string CouldNotGetShortFrameworkName {
            get {
                return ResourceManager.GetString("CouldNotGetShortFrameworkName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Diagnostic.
        /// </summary>
        internal static string DiagnosticBrowseObjectClassName {
            get {
                return ResourceManager.GetString("DiagnosticBrowseObjectClassName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The diagnostic&apos;s identifying code..
        /// </summary>
        internal static string DiagnosticCodeDescription {
            get {
                return ResourceManager.GetString("DiagnosticCodeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Code.
        /// </summary>
        internal static string DiagnosticCodeDisplayName {
            get {
                return ResourceManager.GetString("DiagnosticCodeDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The diagnostic&apos;s level..
        /// </summary>
        internal static string DiagnosticLevelDescription {
            get {
                return ResourceManager.GetString("DiagnosticLevelDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Level.
        /// </summary>
        internal static string DiagnosticLevelDisplayName {
            get {
                return ResourceManager.GetString("DiagnosticLevelDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the package or project this diagnostic applies to..
        /// </summary>
        internal static string DiagnosticLibraryNameDescription {
            get {
                return ResourceManager.GetString("DiagnosticLibraryNameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Library.
        /// </summary>
        internal static string DiagnosticLibraryNameDisplayName {
            get {
                return ResourceManager.GetString("DiagnosticLibraryNameDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The diagnostic&apos;s descriptive message..
        /// </summary>
        internal static string DiagnosticMessageDescription {
            get {
                return ResourceManager.GetString("DiagnosticMessageDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Message.
        /// </summary>
        internal static string DiagnosticMessageDisplayName {
            get {
                return ResourceManager.GetString("DiagnosticMessageDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The diagnostic&apos;s warning level. Only applies to warnings..
        /// </summary>
        internal static string DiagnosticWarningLevelDescription {
            get {
                return ResourceManager.GetString("DiagnosticWarningLevelDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning Level.
        /// </summary>
        internal static string DiagnosticWarningLevelDisplayName {
            get {
                return ResourceManager.GetString("DiagnosticWarningLevelDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The project file &apos;{0}&apos; does not exist on disk..
        /// </summary>
        internal static string Error_FileNotExists {
            get {
                return ResourceManager.GetString("Error_FileNotExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The project &apos;{0}&apos; does not support PackageReference..
        /// </summary>
        internal static string Error_InvalidPackageRefProjectCast {
            get {
                return ResourceManager.GetString("Error_InvalidPackageRefProjectCast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Project {0} does not exist in the project system cache..
        /// </summary>
        internal static string Error_ProjectNotInCache {
            get {
                return ResourceManager.GetString("Error_ProjectNotInCache", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified framework name &apos;{0}&apos; must be .NETStandard..
        /// </summary>
        internal static string InvalidNetStandardFramework {
            get {
                return ResourceManager.GetString("InvalidNetStandardFramework", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided version string is not a valid nuget version..
        /// </summary>
        internal static string InvalidNuGetVersionString {
            get {
                return ResourceManager.GetString("InvalidNuGetVersionString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package list contains invalid or duplicate entries..
        /// </summary>
        internal static string InvalidPackageList {
            get {
                return ResourceManager.GetString("InvalidPackageList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified source &apos;{0}&apos; is invalid. Please provide a valid source..
        /// </summary>
        internal static string InvalidSource {
            get {
                return ResourceManager.GetString("InvalidSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assembly.
        /// </summary>
        internal static string PackageAssemblyBrowseObjectClassName {
            get {
                return ResourceManager.GetString("PackageAssemblyBrowseObjectClassName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The assembly&apos;s name..
        /// </summary>
        internal static string PackageAssemblyNameDescription {
            get {
                return ResourceManager.GetString("PackageAssemblyNameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name.
        /// </summary>
        internal static string PackageAssemblyNameDisplayName {
            get {
                return ResourceManager.GetString("PackageAssemblyNameDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The assembly&apos;s path..
        /// </summary>
        internal static string PackageAssemblyPathDescription {
            get {
                return ResourceManager.GetString("PackageAssemblyPathDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path.
        /// </summary>
        internal static string PackageAssemblyPathDisplayName {
            get {
                return ResourceManager.GetString("PackageAssemblyPathDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compile Time Assemblies.
        /// </summary>
        internal static string PackageCompileTimeAssemblyGroupName {
            get {
                return ResourceManager.GetString("PackageCompileTimeAssemblyGroupName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Content File.
        /// </summary>
        internal static string PackageContentFileBrowseObjectClassName {
            get {
                return ResourceManager.GetString("PackageContentFileBrowseObjectClassName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The content file&apos;s build action..
        /// </summary>
        internal static string PackageContentFileBuildActionDescription {
            get {
                return ResourceManager.GetString("PackageContentFileBuildActionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Build Action.
        /// </summary>
        internal static string PackageContentFileBuildActionDisplayName {
            get {
                return ResourceManager.GetString("PackageContentFileBuildActionDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controls whether this file should be included in the referencing project based on that project&apos;s language..
        /// </summary>
        internal static string PackageContentFileCodeLanguageDescription {
            get {
                return ResourceManager.GetString("PackageContentFileCodeLanguageDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Code Language.
        /// </summary>
        internal static string PackageContentFileCodeLanguageDisplayName {
            get {
                return ResourceManager.GetString("PackageContentFileCodeLanguageDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whether the content file is copied to the output directory during build..
        /// </summary>
        internal static string PackageContentFileCopyToOutputDescription {
            get {
                return ResourceManager.GetString("PackageContentFileCopyToOutputDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy to Output.
        /// </summary>
        internal static string PackageContentFileCopyToOutputDisplayName {
            get {
                return ResourceManager.GetString("PackageContentFileCopyToOutputDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The content file&apos;s output path..
        /// </summary>
        internal static string PackageContentFileOutputPathDescription {
            get {
                return ResourceManager.GetString("PackageContentFileOutputPathDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output Path.
        /// </summary>
        internal static string PackageContentFileOutputPathDisplayName {
            get {
                return ResourceManager.GetString("PackageContentFileOutputPathDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The content file&apos;s path..
        /// </summary>
        internal static string PackageContentFilePathDescription {
            get {
                return ResourceManager.GetString("PackageContentFilePathDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path.
        /// </summary>
        internal static string PackageContentFilePathDisplayName {
            get {
                return ResourceManager.GetString("PackageContentFilePathDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The content file&apos;s preprocessed output path..
        /// </summary>
        internal static string PackageContentFilePPOutputPathDescription {
            get {
                return ResourceManager.GetString("PackageContentFilePPOutputPathDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preprocessed Output Path.
        /// </summary>
        internal static string PackageContentFilePPOutputPathDisplayName {
            get {
                return ResourceManager.GetString("PackageContentFilePPOutputPathDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Content Files.
        /// </summary>
        internal static string PackageContentFilesGroupName {
            get {
                return ResourceManager.GetString("PackageContentFilesGroupName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Framework Assemblies.
        /// </summary>
        internal static string PackageFrameworkAssemblyGroupName {
            get {
                return ResourceManager.GetString("PackageFrameworkAssemblyGroupName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package Reference.
        /// </summary>
        internal static string PackageReferenceBrowseObjectClassName {
            get {
                return ResourceManager.GetString("PackageReferenceBrowseObjectClassName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package&apos;s name..
        /// </summary>
        internal static string PackageReferenceNameDescription {
            get {
                return ResourceManager.GetString("PackageReferenceNameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name.
        /// </summary>
        internal static string PackageReferenceNameDisplayName {
            get {
                return ResourceManager.GetString("PackageReferenceNameDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package&apos;s resolved full path..
        /// </summary>
        internal static string PackageReferencePathDescription {
            get {
                return ResourceManager.GetString("PackageReferencePathDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path.
        /// </summary>
        internal static string PackageReferencePathDisplayName {
            get {
                return ResourceManager.GetString("PackageReferencePathDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package&apos;s version..
        /// </summary>
        internal static string PackageReferenceVersionDescription {
            get {
                return ResourceManager.GetString("PackageReferenceVersionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version.
        /// </summary>
        internal static string PackageReferenceVersionDisplayName {
            get {
                return ResourceManager.GetString("PackageReferenceVersionDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed creating a path context for &quot;{0}&quot;. Reason: {1}.
        /// </summary>
        internal static string PathContext_CreateContextError {
            get {
                return ResourceManager.GetString("PathContext_CreateContextError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The lock file doesn&apos;t exist or it&apos;s an older format that doesn&apos;t have the package folders property persisted..
        /// </summary>
        internal static string PathContext_LockFileError {
            get {
                return ResourceManager.GetString("PathContext_LockFileError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package directory for &quot;{0}&quot; is not found..
        /// </summary>
        internal static string PathContext_PackageDirectoryNotFound {
            get {
                return ResourceManager.GetString("PathContext_PackageDirectoryNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error accessing Extension Manager..
        /// </summary>
        internal static string PreinstalledPackages_ExtensionManagerError {
            get {
                return ResourceManager.GetString("PreinstalledPackages_ExtensionManagerError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not add all required packages to the project. The following packages failed to install from &apos;{0}&apos;:.
        /// </summary>
        internal static string PreinstalledPackages_FailedToInstallPackage {
            get {
                return ResourceManager.GetString("PreinstalledPackages_FailedToInstallPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The preinstalled packages have a reference to a missing Extension. Could not find an Extension with ID &apos;{0}&apos;..
        /// </summary>
        internal static string PreinstalledPackages_InvalidExtensionId {
            get {
                return ResourceManager.GetString("PreinstalledPackages_InvalidExtensionId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The preinstalled packages have a reference to a missing Registry value. Could not find a Registry key with name &apos;{0}&apos; under &apos;{1}&apos;..
        /// </summary>
        internal static string PreinstalledPackages_InvalidRegistryValue {
            get {
                return ResourceManager.GetString("PreinstalledPackages_InvalidRegistryValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adding {0}.{1} to project....
        /// </summary>
        internal static string PreinstalledPackages_PackageInstallStatus {
            get {
                return ResourceManager.GetString("PreinstalledPackages_PackageInstallStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The preinstalled packages are configured to use a Registry-provided package repository but there was an error accessing Registry key &apos;{0}&apos;..
        /// </summary>
        internal static string PreinstalledPackages_RegistryKeyError {
            get {
                return ResourceManager.GetString("PreinstalledPackages_RegistryKeyError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to install version &apos;{1}&apos; of &apos;{0}&apos; but the project already includes a different version. Skipping....
        /// </summary>
        internal static string PreinstalledPackages_VersionConflict {
            get {
                return ResourceManager.GetString("PreinstalledPackages_VersionConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Project Reference.
        /// </summary>
        internal static string ProjectReferenceBrowseObjectClassName {
            get {
                return ResourceManager.GetString("ProjectReferenceBrowseObjectClassName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The project&apos;s name..
        /// </summary>
        internal static string ProjectReferenceNameDescription {
            get {
                return ResourceManager.GetString("ProjectReferenceNameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name.
        /// </summary>
        internal static string ProjectReferenceNameDisplayName {
            get {
                return ResourceManager.GetString("ProjectReferenceNameDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package Installation Error.
        /// </summary>
        internal static string TemplateWizard_ErrorDialogTitle {
            get {
                return ResourceManager.GetString("TemplateWizard_ErrorDialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The project template lists one or more packages with missing, empty, or invalid values for the &quot;id&quot; or &quot;version&quot; attributes. Both attributes are required and must have valid values..
        /// </summary>
        internal static string TemplateWizard_InvalidPackageElementAttributes {
            get {
                return ResourceManager.GetString("TemplateWizard_InvalidPackageElementAttributes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &quot;repository&quot; attribute of the package element has an invalid value: &apos;{0}&apos;. Valid values are: &apos;template&apos; or &apos;extension&apos;..
        /// </summary>
        internal static string TemplateWizard_InvalidRepositoryAttribute {
            get {
                return ResourceManager.GetString("TemplateWizard_InvalidRepositoryAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This template wizard can only be applied to single-project or project-item templates..
        /// </summary>
        internal static string TemplateWizard_InvalidWizardRunKind {
            get {
                return ResourceManager.GetString("TemplateWizard_InvalidWizardRunKind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The project template is configured to use an Extension-specific package repository but the Extension ID has not been specified. Use the &quot;repositoryId&quot; attribute to specify the Extension ID..
        /// </summary>
        internal static string TemplateWizard_MissingExtensionId {
            get {
                return ResourceManager.GetString("TemplateWizard_MissingExtensionId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The project template is configured to use a Registry-provided package repository but the Registry value name has not been specified. Use the &quot;keyName&quot; attribute to specify the Registry value..
        /// </summary>
        internal static string TemplateWizard_MissingRegistryKeyName {
            get {
                return ResourceManager.GetString("TemplateWizard_MissingRegistryKeyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find package &apos;{0}&apos;..
        /// </summary>
        internal static string UnknownPackage {
            get {
                return ResourceManager.GetString("UnknownPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Project dependency {0} does not contain an inclusive lower bound. Include a lower bound in the dependency version to ensure consistent restore results..
        /// </summary>
        internal static string Warning_ProjectDependencyMissingLowerBound {
            get {
                return ResourceManager.GetString("Warning_ProjectDependencyMissingLowerBound", resourceCulture);
            }
        }
    }
}
