//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NuGet.CommandLine {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class NuGetResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal NuGetResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("NuGet.CommandLine.NuGetResources", typeof(NuGetResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package &apos;{0}&apos; already exists at feed &apos;{1}&apos; and is invalid..
        /// </summary>
        public static string AddCommand_ExistingPackageInvalid {
            get {
                return ResourceManager.GetString("AddCommand_ExistingPackageInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package &apos;{0}&apos; already exists at feed &apos;{1}&apos;..
        /// </summary>
        public static string AddCommand_PackageAlreadyExists {
            get {
                return ResourceManager.GetString("AddCommand_PackageAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;-Source&apos; switch is not provided. nupkg gets added to the &apos;Source&apos; and is mandatory..
        /// </summary>
        public static string AddCommand_SourceNotProvided {
            get {
                return ResourceManager.GetString("AddCommand_SourceNotProvided", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add file &apos;{0}&apos; to package as &apos;{1}&apos;.
        /// </summary>
        public static string AddFileToPackage {
            get {
                return ResourceManager.GetString("AddFileToPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ambiguous command &apos;{0}&apos;. Possible values: {1}..
        /// </summary>
        public static string AmbiguousCommand {
            get {
                return ResourceManager.GetString("AmbiguousCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ambiguous option &apos;{0}&apos;. Possible values: {1}..
        /// </summary>
        public static string AmbiguousOption {
            get {
                return ResourceManager.GetString("AmbiguousOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument cannot be null or empty..
        /// </summary>
        public static string ArgumentNullOrEmpty {
            get {
                return ResourceManager.GetString("ArgumentNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Building project &apos;{0}&apos; for target framework &apos;{1}&apos;..
        /// </summary>
        public static string BuildingProjectTargetingFramework {
            get {
                return ResourceManager.GetString("BuildingProjectTargetingFramework", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WARNING: {0}.
        /// </summary>
        public static string CommandLine_Warning {
            get {
                return ResourceManager.GetString("CommandLine_Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key &apos;{0}&apos; not found..
        /// </summary>
        public static string ConfigCommandKeyNotFound {
            get {
                return ResourceManager.GetString("ConfigCommandKeyNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} (y/N) .
        /// </summary>
        public static string ConsoleConfirmMessage {
            get {
                return ResourceManager.GetString("ConsoleConfirmMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to y.
        /// </summary>
        public static string ConsoleConfirmMessageAccept {
            get {
                return ResourceManager.GetString("ConsoleConfirmMessageAccept", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please provide password for: {0}.
        /// </summary>
        public static string ConsolePasswordProvider_DisplayFile {
            get {
                return ResourceManager.GetString("ConsolePasswordProvider_DisplayFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password: .
        /// </summary>
        public static string ConsolePasswordProvider_PromptForPassword {
            get {
                return ResourceManager.GetString("ConsolePasswordProvider_PromptForPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The remote server indicated that the previous request was forbidden. Please provide credentials for: {0}.
        /// </summary>
        public static string Credentials_ForbiddenCredentials {
            get {
                return ResourceManager.GetString("Credentials_ForbiddenCredentials", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password: .
        /// </summary>
        public static string Credentials_Password {
            get {
                return ResourceManager.GetString("Credentials_Password", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please provide proxy credentials:.
        /// </summary>
        public static string Credentials_ProxyCredentials {
            get {
                return ResourceManager.GetString("Credentials_ProxyCredentials", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please provide credentials for: {0}.
        /// </summary>
        public static string Credentials_RequestCredentials {
            get {
                return ResourceManager.GetString("Credentials_RequestCredentials", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UserName: .
        /// </summary>
        public static string Credentials_UserName {
            get {
                return ResourceManager.GetString("Credentials_UserName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No description was provided for this command..
        /// </summary>
        public static string DefaultCommandDescription {
            get {
                return ResourceManager.GetString("DefaultCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to the symbol server.
        /// </summary>
        public static string DefaultSymbolServer {
            get {
                return ResourceManager.GetString("DefaultSymbolServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        public static string Error {
            get {
                return ResourceManager.GetString("Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument &apos;{0}&apos; is not expected..
        /// </summary>
        public static string Error_ArgumentNotExpected {
            get {
                return ResourceManager.GetString("Error_ArgumentNotExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The `pack` command for SDK-style projects is not supported, use `dotnet pack` or `msbuild -t:pack` to pack this project instead. You can override this behavior by setting the &apos;{0}&apos; environment variable to &apos;true&apos;..
        /// </summary>
        public static string Error_AttemptingToPackSDKproject {
            get {
                return ResourceManager.GetString("Error_AttemptingToPackSDKproject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot find the specified version of msbuild: &apos;{0}&apos;.
        /// </summary>
        public static string Error_CannotFindMsbuild {
            get {
                return ResourceManager.GetString("Error_CannotFindMsbuild", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The resolved MSBuild directory is `{0}` which is an architecture-specific directory. Could not find MSBuild in its parent directory (non-architecture specific)..
        /// </summary>
        public static string Error_CannotFindNonArchitectureSpecificMsbuild {
            get {
                return ResourceManager.GetString("Error_CannotFindNonArchitectureSpecificMsbuild", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot get the GetAllProjectFileNamesMethod from type  Mono.XBuild.CommandLine.SolutionParser..
        /// </summary>
        public static string Error_CannotGetGetAllProjectFileNamesMethod {
            get {
                return ResourceManager.GetString("Error_CannotGetGetAllProjectFileNamesMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot get type Mono.XBuild.CommandLine.SolutionParser..
        /// </summary>
        public static string Error_CannotGetXBuildSolutionParser {
            get {
                return ResourceManager.GetString("Error_CannotGetXBuildSolutionParser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MsBuild timeout out while trying to get project to project references, and NuGet.exe failed to kill the process..
        /// </summary>
        public static string Error_CannotKillMsBuild {
            get {
                return ResourceManager.GetString("Error_CannotKillMsBuild", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot load type Microsoft.Build.Construction.ProjectInSolution from Microsoft.Build.dll.
        /// </summary>
        public static string Error_CannotLoadTypeProjectInSolution {
            get {
                return ResourceManager.GetString("Error_CannotLoadTypeProjectInSolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot load type Microsoft.Build.Construction.SolutionParser from Microsoft.Build.dll.
        /// </summary>
        public static string Error_CannotLoadTypeSolutionParser {
            get {
                return ResourceManager.GetString("Error_CannotLoadTypeSolutionParser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot locate a solution file..
        /// </summary>
        public static string Error_CannotLocateSolutionFile {
            get {
                return ResourceManager.GetString("Error_CannotLocateSolutionFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot prompt for input in non-interactive mode..
        /// </summary>
        public static string Error_CannotPromptForInput {
            get {
                return ResourceManager.GetString("Error_CannotPromptForInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to create a temporary file while trying to get project to project references..
        /// </summary>
        public static string Error_FailedToCreateRandomFileForP2P {
            get {
                return ResourceManager.GetString("Error_FailedToCreateRandomFileForP2P", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid characters in one of the following path segments: &apos;{0}&apos;.
        /// </summary>
        public static string Error_InvalidCharactersInPathSegment {
            get {
                return ResourceManager.GetString("Error_InvalidCharactersInPathSegment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid culture identifier in {0} environment variable. Value read is &apos;{1}&apos;.
        /// </summary>
        public static string Error_InvalidCultureInfo {
            get {
                return ResourceManager.GetString("Error_InvalidCultureInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid MSBuild version specified: &apos;{0}&apos;.
        /// </summary>
        public static string Error_InvalidMsbuildVersion {
            get {
                return ResourceManager.GetString("Error_InvalidMsbuildVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid solution directory: &apos;{0}&apos;.
        /// </summary>
        public static string Error_InvalidSolutionDirectory {
            get {
                return ResourceManager.GetString("Error_InvalidSolutionDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source parameter was not specified..
        /// </summary>
        public static string Error_MissingSourceParameter {
            get {
                return ResourceManager.GetString("Error_MissingSourceParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBuild is not installed..
        /// </summary>
        public static string Error_MSBuildNotInstalled {
            get {
                return ResourceManager.GetString("Error_MSBuildNotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MsBuild timeout out while trying to get project to project references..
        /// </summary>
        public static string Error_MsBuildTimedOut {
            get {
                return ResourceManager.GetString("Error_MsBuildTimedOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This folder contains more than one solution file..
        /// </summary>
        public static string Error_MultipleSolutions {
            get {
                return ResourceManager.GetString("Error_MultipleSolutions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to project.json cannot contain multiple Target Frameworks..
        /// </summary>
        public static string Error_MultipleTargetFrameworks {
            get {
                return ResourceManager.GetString("Error_MultipleTargetFrameworks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NuGet.exe file on path {0} needs to be unblocked after downloading..
        /// </summary>
        public static string Error_NuGetExeNeedsToBeUnblockedAfterDownloading {
            get {
                return ResourceManager.GetString("Error_NuGetExeNeedsToBeUnblockedAfterDownloading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error parsing packages.config file at {0}: {1}.
        /// </summary>
        public static string Error_PackagesConfigParseError {
            get {
                return ResourceManager.GetString("Error_PackagesConfigParseError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error occurred when processing file &apos;{0}&apos;: {1}.
        /// </summary>
        public static string Error_ProcessingNuspecFile {
            get {
                return ResourceManager.GetString("Error_ProcessingNuspecFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to `project.json` pack is disabled in the current NuGet version, and will be permanently removed in a future version.
        ///Please consider migrating &apos;{0}&apos; to `PackageReference` and using the pack targets.
        ///You can set the &apos;{1}&apos; environment variable to &apos;true&apos; to temporarily reenable this functionality..
        /// </summary>
        public static string Error_ProjectJson_Deprecated_And_Removed {
            get {
                return ResourceManager.GetString("Error_ProjectJson_Deprecated_And_Removed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid input &apos;{0}&apos;. Provide the path of an msbuild solution file instead. Support for XProj and standalone project.json files has been removed, to continue working with legacy projects use NuGet 3.5.x from https://nuget.org/downloads.
        /// </summary>
        public static string Error_ProjectJsonNotAllowed {
            get {
                return ResourceManager.GetString("Error_ProjectJsonNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Response file &apos;{0}&apos; does not exist.
        /// </summary>
        public static string Error_ResponseFileDoesNotExist {
            get {
                return ResourceManager.GetString("Error_ResponseFileDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid response file, &apos;@&apos; does not exist.
        /// </summary>
        public static string Error_ResponseFileInvalid {
            get {
                return ResourceManager.GetString("Error_ResponseFileInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No more than {0} nested response files are allowed.
        /// </summary>
        public static string Error_ResponseFileMaxRecursionDepth {
            get {
                return ResourceManager.GetString("Error_ResponseFileMaxRecursionDepth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Response file &apos;{0}&apos; cannot be empty.
        /// </summary>
        public static string Error_ResponseFileNullOrEmpty {
            get {
                return ResourceManager.GetString("Error_ResponseFileNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Response file &apos;{0}&apos; cannot be larger than {1}mb.
        /// </summary>
        public static string Error_ResponseFileTooLarge {
            get {
                return ResourceManager.GetString("Error_ResponseFileTooLarge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property Settings is null..
        /// </summary>
        public static string Error_SettingsIsNull {
            get {
                return ResourceManager.GetString("Error_SettingsIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error parsing solution file at {0}: {1}.
        /// </summary>
        public static string Error_SolutionFileParseError {
            get {
                return ResourceManager.GetString("Error_SolutionFileParseError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property SourceProvider is null..
        /// </summary>
        public static string Error_SourceProviderIsNull {
            get {
                return ResourceManager.GetString("Error_SourceProviderIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The folder &apos;{0}&apos; does not contain an msbuild solution or packages.config file to restore..
        /// </summary>
        public static string Error_UnableToLocateRestoreTarget {
            get {
                return ResourceManager.GetString("Error_UnableToLocateRestoreTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to find an msbuild solution, packages.config, or project.json file in the folder &apos;{0}&apos;..
        /// </summary>
        public static string Error_UnableToLocateRestoreTarget_Because {
            get {
                return ResourceManager.GetString("Error_UnableToLocateRestoreTarget_Because", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The action &apos;{0}&apos; is not recognized..
        /// </summary>
        public static string Error_UnknownAction {
            get {
                return ResourceManager.GetString("Error_UnknownAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid value given for &apos;DependencyVersion&apos;: &quot;{0}&quot;..
        /// </summary>
        public static string Error_UnknownDependencyVersion {
            get {
                return ResourceManager.GetString("Error_UnknownDependencyVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This version of msbuild is not supported: &apos;{0}&apos;.
        /// </summary>
        public static string Error_UnsupportedMsbuild {
            get {
                return ResourceManager.GetString("Error_UnsupportedMsbuild", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This version of MSBuild not support Solution filter: &apos;{0}&apos;. Please use a MSBuild version greater or equal to 16.7 to use this feature..
        /// </summary>
        public static string Error_UnsupportedMsBuildForSolutionFilter {
            get {
                return ResourceManager.GetString("Error_UnsupportedMsBuildForSolutionFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The `update -self` command only accepts one source as an argument. If the source option is not specified, the default NuGet source will be used..
        /// </summary>
        public static string Error_UpdateSelf_Source {
            get {
                return ResourceManager.GetString("Error_UpdateSelf_Source", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to build &apos;{0}&apos;..
        /// </summary>
        public static string FailedToBuildProject {
            get {
                return ResourceManager.GetString("FailedToBuildProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to load {0}, if this extension was downloaded from the internet please make sure it got unblocked (right click, properties, unblock)..
        /// </summary>
        public static string FailedToLoadExtension {
            get {
                return ResourceManager.GetString("FailedToLoadExtension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to load {0}{1}.
        /// </summary>
        public static string FailedToLoadExtensionDuringMefComposition {
            get {
                return ResourceManager.GetString("FailedToLoadExtensionDuringMefComposition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Y] Yes  [A] Yes to All  [N] No  [L] No to All ?.
        /// </summary>
        public static string FileConflictChoiceText {
            get {
                return ResourceManager.GetString("FileConflictChoiceText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File &apos;{0}&apos; is not added because the package already contains file &apos;{1}&apos;.
        /// </summary>
        public static string FileNotAddedToPackage {
            get {
                return ResourceManager.GetString("FileNotAddedToPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Found 1 project with a packages.config file. ({0}).
        /// </summary>
        public static string FoundProject {
            get {
                return ResourceManager.GetString("FoundProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Found {0} projects with a packages.config file. ({1}).
        /// </summary>
        public static string FoundProjects {
            get {
                return ResourceManager.GetString("FoundProjects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For more information, visit {0}.
        /// </summary>
        public static string HelpCommandForMoreInfo {
            get {
                return ResourceManager.GetString("HelpCommandForMoreInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Feed &apos;{0}&apos; contains no packages..
        /// </summary>
        public static string InitCommand_FeedContainsNoPackages {
            get {
                return ResourceManager.GetString("InitCommand_FeedContainsNoPackages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provided feed folder &apos;{0}&apos; is not found..
        /// </summary>
        public static string InitCommand_FeedIsNotFound {
            get {
                return ResourceManager.GetString("InitCommand_FeedIsNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; contains invalid package references. .
        /// </summary>
        public static string InstallCommandInvalidPackageReference {
            get {
                return ResourceManager.GetString("InstallCommandInvalidPackageReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All packages listed in {0} are already installed..
        /// </summary>
        public static string InstallCommandNothingToInstall {
            get {
                return ResourceManager.GetString("InstallCommandNothingToInstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package &quot;{0}&quot; is already installed..
        /// </summary>
        public static string InstallCommandPackageAlreadyExists {
            get {
                return ResourceManager.GetString("InstallCommandPackageAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version string specified for package reference &apos;{0}&apos; is invalid..
        /// </summary>
        public static string InstallCommandPackageReferenceInvalidVersion {
            get {
                return ResourceManager.GetString("InstallCommandPackageReferenceInvalidVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package restore is disabled. To enable it, open the Visual Studio Options dialog, click on Package Manager node and check &apos;{0}&apos;. You can also enable package restore by setting the environment variable &apos;EnableNuGetPackageRestore&apos; to &apos;true&apos;..
        /// </summary>
        public static string InstallCommandPackageRestoreConsentNotFound {
            get {
                return ResourceManager.GetString("InstallCommandPackageRestoreConsentNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find package &apos;{0}&apos;.
        /// </summary>
        public static string InstallCommandUnableToFindPackage {
            get {
                return ResourceManager.GetString("InstallCommandUnableToFindPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing package &apos;{0}&apos; to &apos;{1}&apos;..
        /// </summary>
        public static string InstallPackageMessage {
            get {
                return ResourceManager.GetString("InstallPackageMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: invalid arguments..
        /// </summary>
        public static string InvalidArguments {
            get {
                return ResourceManager.GetString("InvalidArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid AssemblyInformationalVersion &apos;{0}&apos; on assembly &apos;{1}&apos;; falling back to AssemblyVersion &apos;{2}&apos;..
        /// </summary>
        public static string InvalidAssemblyInformationalVersion {
            get {
                return ResourceManager.GetString("InvalidAssemblyInformationalVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No packages.config, project or solution file specified. Use the -self switch to update NuGet.exe..
        /// </summary>
        public static string InvalidFile {
            get {
                return ResourceManager.GetString("InvalidFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid option value: &apos;{0} {1}&apos;.
        /// </summary>
        public static string InvalidOptionValueError {
            get {
                return ResourceManager.GetString("InvalidOptionValueError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified source &apos;{0}&apos; is invalid. Please provide a valid source..
        /// </summary>
        public static string InvalidSource {
            get {
                return ResourceManager.GetString("InvalidSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to License url: {0}.
        /// </summary>
        public static string ListCommand_LicenseUrl {
            get {
                return ResourceManager.GetString("ListCommand_LicenseUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This version of nuget.exe does not support listing packages from package source &apos;{0}&apos;..
        /// </summary>
        public static string ListCommand_ListNotSupported {
            get {
                return ResourceManager.GetString("ListCommand_ListNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No packages found..
        /// </summary>
        public static string ListCommandNoPackages {
            get {
                return ResourceManager.GetString("ListCommandNoPackages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to the NuGet gallery.
        /// </summary>
        public static string LiveFeed {
            get {
                return ResourceManager.GetString("LiveFeed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local resources cleared..
        /// </summary>
        public static string LocalsCommand_ClearedSuccessful {
            get {
                return ResourceManager.GetString("LocalsCommand_ClearedSuccessful", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clearing local resources failed: one or more errors occured..
        /// </summary>
        public static string LocalsCommand_ClearFailed {
            get {
                return ResourceManager.GetString("LocalsCommand_ClearFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clearing NuGet cache: {0}.
        /// </summary>
        public static string LocalsCommand_ClearingNuGetCache {
            get {
                return ResourceManager.GetString("LocalsCommand_ClearingNuGetCache", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clearing NuGet global packages cache: {0}.
        /// </summary>
        public static string LocalsCommand_ClearingNuGetGlobalPackagesCache {
            get {
                return ResourceManager.GetString("LocalsCommand_ClearingNuGetGlobalPackagesCache", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clearing NuGet HTTP cache: {0}.
        /// </summary>
        public static string LocalsCommand_ClearingNuGetHttpCache {
            get {
                return ResourceManager.GetString("LocalsCommand_ClearingNuGetHttpCache", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to delete &apos;{0}&apos;..
        /// </summary>
        public static string LocalsCommand_FailedToDeletePath {
            get {
                return ResourceManager.GetString("LocalsCommand_FailedToDeletePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An invalid local resource name was provided. Please provide one of the following values: http-cache, packages-cache, global-packages, all..
        /// </summary>
        public static string LocalsCommand_InvalidLocalResourceName {
            get {
                return ResourceManager.GetString("LocalsCommand_InvalidLocalResourceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The location of local resource &apos;{0}&apos; is undefined..
        /// </summary>
        public static string LocalsCommand_LocalResourcePathNotSet {
            get {
                return ResourceManager.GetString("LocalsCommand_LocalResourcePathNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local resources partially cleared..
        /// </summary>
        public static string LocalsCommand_LocalsPartiallyCleared {
            get {
                return ResourceManager.GetString("LocalsCommand_LocalsPartiallyCleared", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Looking for installed packages in &apos;{0}&apos;..
        /// </summary>
        public static string LookingForInstalledPackages {
            get {
                return ResourceManager.GetString("LookingForInstalledPackages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing option value for: &apos;{0}&apos;.
        /// </summary>
        public static string MissingOptionValueError {
            get {
                return ResourceManager.GetString("MissingOptionValueError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBuild auto-detection: using msbuild version &apos;{0}&apos; from &apos;{1}&apos;..
        /// </summary>
        public static string MSBuildAutoDetection {
            get {
                return ResourceManager.GetString("MSBuildAutoDetection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBuild auto-detection: using msbuild version &apos;{0}&apos; from &apos;{1}&apos;. Use option -MSBuildVersion to force nuget to use a specific version of MSBuild..
        /// </summary>
        public static string MSBuildAutoDetection_Verbose {
            get {
                return ResourceManager.GetString("MSBuildAutoDetection_Verbose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MsBuild.exe does not exist at &apos;{0}&apos;..
        /// </summary>
        public static string MsBuildDoesNotExistAtPath {
            get {
                return ResourceManager.GetString("MsBuildDoesNotExistAtPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Using Msbuild from &apos;{0}&apos;..
        /// </summary>
        public static string MSbuildFromPath {
            get {
                return ResourceManager.GetString("MSbuildFromPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to load msbuild Toolset.
        /// </summary>
        public static string MsbuildLoadToolSetError {
            get {
                return ResourceManager.GetString("MsbuildLoadToolSetError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBuildPath : {0} does not exist..
        /// </summary>
        public static string MsbuildPathNotExist {
            get {
                return ResourceManager.GetString("MsbuildPathNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Found multiple project files for &apos;{0}&apos;..
        /// </summary>
        public static string MultipleProjectFilesFound {
            get {
                return ResourceManager.GetString("MultipleProjectFilesFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to update. The project does not contain a packages.config file..
        /// </summary>
        public static string NoPackagesConfig {
            get {
                return ResourceManager.GetString("NoPackagesConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No projects found with packages.config..
        /// </summary>
        public static string NoProjectsFound {
            get {
                return ResourceManager.GetString("NoProjectsFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not a valid nupkg file..
        /// </summary>
        public static string NupkgPath_InvalidNupkg {
            get {
                return ResourceManager.GetString("NupkgPath_InvalidNupkg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provided Nupkg file &apos;{0}&apos; is not found..
        /// </summary>
        public static string NupkgPath_NotFound {
            get {
                return ResourceManager.GetString("NupkgPath_NotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NuGet official package source.
        /// </summary>
        public static string OfficialPackageSourceName {
            get {
                return ResourceManager.GetString("OfficialPackageSourceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Option &apos;Verbose&apos; has been deprecated. Use &apos;Verbosity&apos; instead..
        /// </summary>
        public static string Option_VerboseDeprecated {
            get {
                return ResourceManager.GetString("Option_VerboseDeprecated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [option] on &apos;{0}&apos; is invalid without a setter..
        /// </summary>
        public static string OptionInvalidWithoutSetter {
            get {
                return ResourceManager.GetString("OptionInvalidWithoutSetter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} Version: {1}.
        /// </summary>
        public static string OutputNuGetVersion {
            get {
                return ResourceManager.GetString("OutputNuGetVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added file &apos;{0}&apos;..
        /// </summary>
        public static string PackageCommandAddedFile {
            get {
                return ResourceManager.GetString("PackageCommandAddedFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to build package from &apos;{0}&apos;..
        /// </summary>
        public static string PackageCommandAttemptingToBuildPackage {
            get {
                return ResourceManager.GetString("PackageCommandAttemptingToBuildPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to build symbols package for &apos;{0}&apos;..
        /// </summary>
        public static string PackageCommandAttemptingToBuildSymbolsPackage {
            get {
                return ResourceManager.GetString("PackageCommandAttemptingToBuildSymbolsPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File from dependency is changed. Adding file &apos;{0}&apos;..
        /// </summary>
        public static string PackageCommandFileFromDependencyIsChanged {
            get {
                return ResourceManager.GetString("PackageCommandFileFromDependencyIsChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File from dependency is not changed. File &apos;{0}&apos; is not added..
        /// </summary>
        public static string PackageCommandFileFromDependencyIsNotChanged {
            get {
                return ResourceManager.GetString("PackageCommandFileFromDependencyIsNotChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value of MinClientVersion argument is not a valid version..
        /// </summary>
        public static string PackageCommandInvalidMinClientVersion {
            get {
                return ResourceManager.GetString("PackageCommandInvalidMinClientVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Description: {0}.
        /// </summary>
        public static string PackageCommandIssueDescription {
            get {
                return ResourceManager.GetString("PackageCommandIssueDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Solution: {0}.
        /// </summary>
        public static string PackageCommandIssueSolution {
            get {
                return ResourceManager.GetString("PackageCommandIssueSolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Issue: {0}.
        /// </summary>
        public static string PackageCommandIssueTitle {
            get {
                return ResourceManager.GetString("PackageCommandIssueTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to build package. Ensure &apos;{0}&apos; includes assembly files. For help on building symbols package, visit {1}..
        /// </summary>
        public static string PackageCommandNoFilesForLibPackage {
            get {
                return ResourceManager.GetString("PackageCommandNoFilesForLibPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to build package. Ensure &apos;{0}&apos; includes source and symbol files. For help on building symbols package, visit {1}..
        /// </summary>
        public static string PackageCommandNoFilesForSymbolsPackage {
            get {
                return ResourceManager.GetString("PackageCommandNoFilesForSymbolsPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} issue(s) found with package &apos;{1}&apos;..
        /// </summary>
        public static string PackageCommandPackageIssueSummary {
            get {
                return ResourceManager.GetString("PackageCommandPackageIssueSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please specify a nuspec or project file to use..
        /// </summary>
        public static string PackageCommandSpecifyInputFileError {
            get {
                return ResourceManager.GetString("PackageCommandSpecifyInputFileError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully created package &apos;{0}&apos;..
        /// </summary>
        public static string PackageCommandSuccess {
            get {
                return ResourceManager.GetString("PackageCommandSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to locate &apos;{0} {1}&apos;. Make sure all packages exist in the packages folder before running update..
        /// </summary>
        public static string PackageDoesNotExist {
            get {
                return ResourceManager.GetString("PackageDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;Allow NuGet to download missing packages.
        /// </summary>
        public static string PackageRestoreConsentCheckBoxText {
            get {
                return ResourceManager.GetString("PackageRestoreConsentCheckBoxText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Packing files from &apos;{0}&apos;..
        /// </summary>
        public static string PackagingFilesFromOutputPath {
            get {
                return ResourceManager.GetString("PackagingFilesFromOutputPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not a valid path..
        /// </summary>
        public static string Path_Invalid {
            get {
                return ResourceManager.GetString("Path_Invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; should be a local path or a UNC share path..
        /// </summary>
        public static string Path_Invalid_NotFileNotUnc {
            get {
                return ResourceManager.GetString("Path_Invalid_NotFileNotUnc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to `project.json` pack is deprecated. Please consider migrating &apos;{0}&apos; to `PackageReference` and using the pack targets..
        /// </summary>
        public static string ProjectJsonPack_Deprecated {
            get {
                return ResourceManager.GetString("ProjectJsonPack_Deprecated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nothing to do. This project does not specify any packages for NuGet to restore..
        /// </summary>
        public static string ProjectRestoreCommandNoPackagesConfigOrProjectJson {
            get {
                return ResourceManager.GetString("ProjectRestoreCommandNoPackagesConfigOrProjectJson", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no default source, please specify a source..
        /// </summary>
        public static string PushCommandNoSourceError {
            get {
                return ResourceManager.GetString("PushCommandNoSourceError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pushing took too long. You can change the default timeout of 300 seconds by using the -Timeout &lt;seconds&gt; option with the push command..
        /// </summary>
        public static string PushCommandTimeoutError {
            get {
                return ResourceManager.GetString("PushCommandTimeoutError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The property &apos;{0}&apos; on resource type &apos;{1}&apos; is not a type of ResourceManager..
        /// </summary>
        public static string ResourcePropertyIncorrectType {
            get {
                return ResourceManager.GetString("ResourcePropertyIncorrectType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The resource type &apos;{0}&apos; does not have an accessible static property named &apos;{1}&apos;..
        /// </summary>
        public static string ResourceTypeDoesNotHaveProperty {
            get {
                return ResourceManager.GetString("ResourceTypeDoesNotHaveProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;globalPackagesFolder&apos; setting is a relative path. To determine full path, please specify either -SolutionDirectory or a solution file as a parameter. To ignore &apos;globalPackagesFolder&apos; setting, specify -PackagesDirectory..
        /// </summary>
        public static string RestoreCommandCannotDetermineGlobalPackagesFolder {
            get {
                return ResourceManager.GetString("RestoreCommandCannotDetermineGlobalPackagesFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot determine the packages folder to restore NuGet packages. Please specify either -PackagesDirectory or -SolutionDirectory..
        /// </summary>
        public static string RestoreCommandCannotDeterminePackagesFolder {
            get {
                return ResourceManager.GetString("RestoreCommandCannotDeterminePackagesFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input file does not exist: {0}..
        /// </summary>
        public static string RestoreCommandFileNotFound {
            get {
                return ResourceManager.GetString("RestoreCommandFileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Option -SolutionDirectory is not valid when restoring packages for a solution..
        /// </summary>
        public static string RestoreCommandOptionSolutionDirectoryIsInvalid {
            get {
                return ResourceManager.GetString("RestoreCommandOptionSolutionDirectoryIsInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restoring NuGet packages...
        ///To prevent NuGet from downloading packages during build, open the Visual Studio Options dialog, click on the NuGet Package Manager node and uncheck &apos;{0}&apos;..
        /// </summary>
        public static string RestoreCommandPackageRestoreOptOutMessage {
            get {
                return ResourceManager.GetString("RestoreCommandPackageRestoreOptOutMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Project file {0} cannot be found..
        /// </summary>
        public static string RestoreCommandProjectNotFound {
            get {
                return ResourceManager.GetString("RestoreCommandProjectNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restoring NuGet packages for solution {0}..
        /// </summary>
        public static string RestoreCommandRestoringPackagesForSolution {
            get {
                return ResourceManager.GetString("RestoreCommandRestoringPackagesForSolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restoring NuGet packages listed in packages.config file..
        /// </summary>
        public static string RestoreCommandRestoringPackagesFromPackagesConfigFile {
            get {
                return ResourceManager.GetString("RestoreCommandRestoringPackagesFromPackagesConfigFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restoring NuGet packages listed in file {0}..
        /// </summary>
        public static string RestoreCommandRestoringPackagesListedInFile {
            get {
                return ResourceManager.GetString("RestoreCommandRestoringPackagesListedInFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scanning for projects....
        /// </summary>
        public static string ScanningForProjects {
            get {
                return ResourceManager.GetString("ScanningForProjects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The API Key &apos;{0}&apos; was saved for {1}..
        /// </summary>
        public static string SetApiKeyCommandApiKeySaved {
            get {
                return ResourceManager.GetString("SetApiKeyCommandApiKeySaved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The API Key &apos;{0}&apos; was saved for {1} and {2}..
        /// </summary>
        public static string SetApiKeyCommandDefaultApiKeysSaved {
            get {
                return ResourceManager.GetString("SetApiKeyCommandDefaultApiKeysSaved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Using credentials from config. UserName: {0}.
        /// </summary>
        public static string SettingsCredentials_UsingSavedCredentials {
            get {
                return ResourceManager.GetString("SettingsCredentials_UsingSavedCredentials", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nothing to do. None of the projects in this solution specify any packages for NuGet to restore..
        /// </summary>
        public static string SolutionRestoreCommandNoPackagesConfigOrProjectJson {
            get {
                return ResourceManager.GetString("SolutionRestoreCommandNoPackagesConfigOrProjectJson", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source &apos;{0}&apos; is not found..
        /// </summary>
        public static string Source_NotFound {
            get {
                return ResourceManager.GetString("Source_NotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Created &apos;{0}&apos; successfully..
        /// </summary>
        public static string SpecCommandCreatedNuSpec {
            get {
                return ResourceManager.GetString("SpecCommandCreatedNuSpec", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; already exists, use -Force to overwrite it..
        /// </summary>
        public static string SpecCommandFileExists {
            get {
                return ResourceManager.GetString("SpecCommandFileExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to change from type &apos;{0}&apos; to &apos;{1}&apos;..
        /// </summary>
        public static string UnableToConvertTypeError {
            get {
                return ResourceManager.GetString("UnableToConvertTypeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to extract metadata from &apos;{0}&apos;..
        /// </summary>
        public static string UnableToExtractAssemblyMetadata {
            get {
                return ResourceManager.GetString("UnableToExtractAssemblyMetadata", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find &apos;{0}&apos;. Make sure the project has been built..
        /// </summary>
        public static string UnableToFindBuildOutput {
            get {
                return ResourceManager.GetString("UnableToFindBuildOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find &apos;{0}&apos;. Make sure they are specified in packages.config..
        /// </summary>
        public static string UnableToFindPackages {
            get {
                return ResourceManager.GetString("UnableToFindPackages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find project &apos;{0}&apos;..
        /// </summary>
        public static string UnableToFindProject {
            get {
                return ResourceManager.GetString("UnableToFindProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find solution &apos;{0}&apos;..
        /// </summary>
        public static string UnableToFindSolution {
            get {
                return ResourceManager.GetString("UnableToFindSolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to locate the packages folder. Verify all the packages are restored before running &apos;nuget.exe update&apos;..
        /// </summary>
        public static string UnableToLocatePackagesFolder {
            get {
                return ResourceManager.GetString("UnableToLocatePackagesFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to locate project file for &apos;{0}&apos;..
        /// </summary>
        public static string UnableToLocateProjectFile {
            get {
                return ResourceManager.GetString("UnableToLocateProjectFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown command: &apos;{0}&apos;.
        /// </summary>
        public static string UnknowCommandError {
            get {
                return ResourceManager.GetString("UnknowCommandError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown option: &apos;{0}&apos;.
        /// </summary>
        public static string UnknownOptionError {
            get {
                return ResourceManager.GetString("UnknownOptionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not a valid target framework..
        /// </summary>
        public static string UnsupportedFramework {
            get {
                return ResourceManager.GetString("UnsupportedFramework", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking for updates from {0}..
        /// </summary>
        public static string UpdateCommandCheckingForUpdates {
            get {
                return ResourceManager.GetString("UpdateCommandCheckingForUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Currently running NuGet.exe {0}..
        /// </summary>
        public static string UpdateCommandCurrentlyRunningNuGetExe {
            get {
                return ResourceManager.GetString("UpdateCommandCurrentlyRunningNuGetExe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NuGet.exe is up to date..
        /// </summary>
        public static string UpdateCommandNuGetUpToDate {
            get {
                return ResourceManager.GetString("UpdateCommandNuGetUpToDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find &apos;{0}&apos; package..
        /// </summary>
        public static string UpdateCommandUnableToFindPackage {
            get {
                return ResourceManager.GetString("UpdateCommandUnableToFindPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid NuGet.CommandLine package. Unable to locate NuGet.exe within the package..
        /// </summary>
        public static string UpdateCommandUnableToLocateNuGetExe {
            get {
                return ResourceManager.GetString("UpdateCommandUnableToLocateNuGetExe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update successful..
        /// </summary>
        public static string UpdateCommandUpdateSuccessful {
            get {
                return ResourceManager.GetString("UpdateCommandUpdateSuccessful", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating NuGet.exe to {0}..
        /// </summary>
        public static string UpdateCommandUpdatingNuGet {
            get {
                return ResourceManager.GetString("UpdateCommandUpdatingNuGet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating &apos;{0}&apos;....
        /// </summary>
        public static string UpdatingProject {
            get {
                return ResourceManager.GetString("UpdatingProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Using &apos;{0}&apos; for metadata..
        /// </summary>
        public static string UsingNuspecForMetadata {
            get {
                return ResourceManager.GetString("UsingNuspecForMetadata", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Found packages.config. Using packages listed as dependencies.
        /// </summary>
        public static string UsingPackagesConfigForDependencies {
            get {
                return ResourceManager.GetString("UsingPackagesConfigForDependencies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value &quot;{0}&quot; for {1} is a sample value and should be removed..
        /// </summary>
        public static string Warning_DefaultSpecValue {
            get {
                return ResourceManager.GetString("Warning_DefaultSpecValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replace with an appropriate value or remove and it and rebuild your package..
        /// </summary>
        public static string Warning_DefaultSpecValueSolution {
            get {
                return ResourceManager.GetString("Warning_DefaultSpecValueSolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove sample nuspec values..
        /// </summary>
        public static string Warning_DefaultSpecValueTitle {
            get {
                return ResourceManager.GetString("Warning_DefaultSpecValueTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; key already exists in Properties collection. Overriding value..
        /// </summary>
        public static string Warning_DuplicatePropertyKey {
            get {
                return ResourceManager.GetString("Warning_DuplicatePropertyKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; was included in the project but doesn&apos;t exist. Skipping....
        /// </summary>
        public static string Warning_FileDoesNotExist {
            get {
                return ResourceManager.GetString("Warning_FileDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are running the &apos;{0}&apos; operation with an &apos;HTTP&apos; source, &apos;{1}&apos;. Non-HTTPS access will be removed in a future version. Consider migrating to an &apos;HTTPS&apos; source..
        /// </summary>
        public static string Warning_HttpServerUsage {
            get {
                return ResourceManager.GetString("Warning_HttpServerUsage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are running the &apos;{0}&apos; operation with &apos;HTTP&apos; sources: {1}
        ///Non-HTTPS access will be removed in a future version. Consider migrating to &apos;HTTPS&apos; sources..
        /// </summary>
        public static string Warning_HttpSources_Multiple {
            get {
                return ResourceManager.GetString("Warning_HttpSources_Multiple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid PackageSaveMode value &apos;{0}&apos;..
        /// </summary>
        public static string Warning_InvalidPackageSaveMode {
            get {
                return ResourceManager.GetString("Warning_InvalidPackageSaveMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enbale long file path support in local group policy. Fore more details, please refer to https://aka.ms/nuget-long-path..
        /// </summary>
        public static string Warning_LongPath_DisabledPolicy {
            get {
                return ResourceManager.GetString("Warning_LongPath_DisabledPolicy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please install .NET Framework 4.6.2 or above that supports long file paths. Fore more details, please refer to https://aka.ms/nuget-long-path..
        /// </summary>
        public static string Warning_LongPath_UnsupportedNetFramework {
            get {
                return ResourceManager.GetString("Warning_LongPath_UnsupportedNetFramework", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Long file path is currently only supported on Windows 10. Fore more details, please refer to https://aka.ms/nuget-long-path..
        /// </summary>
        public static string Warning_LongPath_UnsupportedOS {
            get {
                return ResourceManager.GetString("Warning_LongPath_UnsupportedOS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MsbuildPath : {0} is using, ignore MsBuildVersion: {1}. .
        /// </summary>
        public static string Warning_MsbuildPath {
            get {
                return ResourceManager.GetString("Warning_MsbuildPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Option &apos;NoPrompt&apos; has been deprecated. Use &apos;NonInteractive&apos; instead..
        /// </summary>
        public static string Warning_NoPromptDeprecated {
            get {
                return ResourceManager.GetString("Warning_NoPromptDeprecated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error reading msbuild project information, ensure that your input solution or project file is valid. NETCore and UAP projects will be skipped, only packages.config files will be restored..
        /// </summary>
        public static string Warning_ReadingProjectsFailed {
            get {
                return ResourceManager.GetString("Warning_ReadingProjectsFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version &quot;{0}&quot; does not follow semantic versioning guidelines..
        /// </summary>
        public static string Warning_SemanticVersion {
            get {
                return ResourceManager.GetString("Warning_SemanticVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update your nuspec file or use the AssemblyInformationalVersion assembly attribute to specify a semantic version as described at http://semver.org. .
        /// </summary>
        public static string Warning_SemanticVersionSolution {
            get {
                return ResourceManager.GetString("Warning_SemanticVersionSolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use semantic versioning.
        /// </summary>
        public static string Warning_SemanticVersionTitle {
            get {
                return ResourceManager.GetString("Warning_SemanticVersionTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; was included in the project but the path could not be resolved. Skipping....
        /// </summary>
        public static string Warning_UnresolvedFilePath {
            get {
                return ResourceManager.GetString("Warning_UnresolvedFilePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The version of dependency &apos;{0}&apos; is not specified..
        /// </summary>
        public static string Warning_UnspecifiedDependencyVersion {
            get {
                return ResourceManager.GetString("Warning_UnspecifiedDependencyVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the version of dependency and rebuild your package..
        /// </summary>
        public static string Warning_UnspecifiedDependencyVersionSolution {
            get {
                return ResourceManager.GetString("Warning_UnspecifiedDependencyVersionSolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify version of dependencies..
        /// </summary>
        public static string Warning_UnspecifiedDependencyVersionTitle {
            get {
                return ResourceManager.GetString("Warning_UnspecifiedDependencyVersionTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} was not specified. Using &apos;{1}&apos;..
        /// </summary>
        public static string Warning_UnspecifiedField {
            get {
                return ResourceManager.GetString("Warning_UnspecifiedField", resourceCulture);
            }
        }
    }
}
