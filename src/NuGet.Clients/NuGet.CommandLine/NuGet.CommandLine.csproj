<Project>

  <PropertyGroup>
    <IsCommandLinePackage>true</IsCommandLinePackage>
  </PropertyGroup>

  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), 'README.md'))\build\common.props" />
  <Import Project="Sdk.props" Sdk="Microsoft.NET.Sdk" />
  <Import Project="ilmerge.props" />

  <PropertyGroup>
    <RootNamespace>NuGet.CommandLine</RootNamespace>
    <AssemblyName>NuGet</AssemblyName>
    <AssemblyTitle>NuGet Command Line</AssemblyTitle>
    <PackageId>NuGet.CommandLine</PackageId>
    <TargetFramework>$(NETFXTargetFramework)</TargetFramework>
    <GenerateDocumentationFile>false</GenerateDocumentationFile>
    <Description>NuGet Command Line Tool.</Description>
    <ApplicationManifest>app.manifest</ApplicationManifest>
    <Shipping>true</Shipping>
    <OutputType>Exe</OutputType>
    <ComVisible>false</ComVisible>
    <!-- Pack properties-->
    <PackProject>true</PackProject>
    <IncludeBuildOutput>false</IncludeBuildOutput>
    <TargetsForTfmSpecificContentInPackage>$(TargetsForTfmSpecificContentInPackage);CreateCommandlineNupkg</TargetsForTfmSpecificContentInPackage>
    <SuppressDependenciesWhenPacking>true</SuppressDependenciesWhenPacking>
    <DevelopmentDependency>true</DevelopmentDependency>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
  </PropertyGroup>

  <Target Name="CreateCommandlineNupkg">
    <ItemGroup>
      <TfmSpecificPackageFile Include="$(ArtifactsDirectory)$(VsixOutputDirName)\NuGet.exe">
        <PackagePath>tools/</PackagePath>
      </TfmSpecificPackageFile>
      <TfmSpecificPackageFile Include="$(ArtifactsDirectory)$(VsixOutputDirName)\NuGet.pdb">
        <PackagePath>tools/</PackagePath>
      </TfmSpecificPackageFile>
    </ItemGroup>
  </Target>

  <ItemGroup Condition="$(DefineConstants.Contains(SIGNED_BUILD))">
    <AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleTo">
      <_Parameter1>NuGet.CommandLine.FuncTest, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293</_Parameter1>
    </AssemblyAttribute>
  </ItemGroup>

  <ItemGroup Condition="!$(DefineConstants.Contains(SIGNED_BUILD))">
    <AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleTo">
      <_Parameter1>NuGet.CommandLine.FuncTest</_Parameter1>
    </AssemblyAttribute>
  </ItemGroup>

  <ItemGroup>
    <Reference Include="Microsoft.Build.Utilities.v4.0" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System" />
    <Reference Include="System.ComponentModel.Composition" />
    <Reference Include="System.ComponentModel.Composition.Registration" />
    <Reference Include="System.ComponentModel.DataAnnotations" />
    <Reference Include="System.IO.Compression" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Xml" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="Microsoft.VisualStudio.Setup.Configuration.Interop">
      <HintPath>$(SolutionPackagesFolder)Microsoft.VisualStudio.Setup.Configuration.Interop.1.1.142-preview4-29265\lib\net35\Microsoft.VisualStudio.Setup.Configuration.Interop.dll</HintPath>
      <EmbedInteropTypes>True</EmbedInteropTypes>
    </Reference>
    <Reference Include="NuGet.Core">
      <HintPath>$(SolutionPackagesFolder)NuGet.Core.2.14.0-rtm-832\lib\net40-Client\NuGet.Core.dll</HintPath>
      <Aliases>CoreV2</Aliases>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="$(NuGetCoreSrcDirectory)NuGet.PackageManagement\NuGet.PackageManagement.csproj" />
    <ProjectReference Include="$(NuGetCoreSrcDirectory)NuGet.Build.Tasks\NuGet.Build.Tasks.csproj" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Update="NuGetCommand.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>NuGetCommand.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Update="NuGetCommand.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>NuGetCommand.resx</DependentUpon>
    </Compile>
    <EmbeddedResource Update="NuGetResources.resx">
      <!-- Strings are shared by other projects, use public strings. -->
      <Generator>PublicResXFileCodeGenerator</Generator>
      <LastGenOutput>NuGetResources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Update="NuGetResources.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>NuGetResources.resx</DependentUpon>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Include="$(NuGetCoreSrcDirectory)NuGet.Build.Tasks\NuGet.targets">
      <Link>NuGet.targets</Link>
      <SubType>Designer</SubType>
    </EmbeddedResource>
  </ItemGroup>

  <Target Name="ILMergeNuGetExe" AfterTargets="Build" Condition="'$(BuildingInsideVisualStudio)' != 'true'">
    <ItemGroup>
      <BuildArtifacts Include="$(OutputPath)\*.dll" Exclude="@(MergeExclude)" />
    </ItemGroup>
    <Error Text="Build dependencies are inconsistent with mergeinclude specified in ilmerge.props" Condition="'@(BuildArtifacts-&gt;Count())' != '@(MergeInclude-&gt;Count())'" />
    <PropertyGroup>
      <PathToBuiltNuGetExe>$(OutputPath)NuGet.exe</PathToBuiltNuGetExe>
      <IlmergeCommand>$(ILMergeExePath) /lib:$(OutputPath) /out:$(ArtifactsDirectory)$(VsixOutputDirName)\NuGet.exe @(MergeAllowDup -> '/allowdup:%(Identity)', ' ') /log:$(OutputPath)IlMergeLog.txt</IlmergeCommand>
      <IlmergeCommand Condition="Exists($(MS_PFX_PATH))">$(IlmergeCommand) /delaysign /keyfile:$(MS_PFX_PATH)</IlmergeCommand>
      <IlmergeCommand>$(IlmergeCommand) $(PathToBuiltNuGetExe) @(BuildArtifacts->'%(filename)%(extension)', ' ')</IlmergeCommand>
    </PropertyGroup>
    <MakeDir Directories="$(ArtifactsDirectory)$(VsixOutputDirName)" />
    <Exec Command="$(IlmergeCommand)" ContinueOnError="false" />
  </Target>

  <Import Project="$(BuildCommonDirectory)common.targets" />

  <!-- Do nothing. This basically strips away the framework assemblies from the resulting nuspec.-->
  <Target Name ="_GetFrameworkAssemblyReferences" DependsOnTargets="ResolveReferences"/>

  <Target Name="GetSigningInputs" Returns="@(DllsToSign)">
    <ItemGroup>
      <DllsToSign Include="$(ArtifactsDirectory)$(VsixOutputDirName)\NuGet.exe">
        <StrongName>MsSharedLib72</StrongName>
        <Authenticode>Microsoft</Authenticode>
      </DllsToSign>
    </ItemGroup>
  </Target>

  <Target Name="GetSymbolsToIndex" Returns="@(SymbolsToIndex)">
    <ItemGroup>
      <SymbolsToIndex Include="$(ArtifactsDirectory)$(VsixOutputDirName)\NuGet.exe" />
      <SymbolsToIndex Include="$(ArtifactsDirectory)$(VsixOutputDirName)\NuGet.pdb" />
    </ItemGroup>
  </Target>
  
  <Import Project="Sdk.targets" Sdk="Microsoft.NET.Sdk" />
</Project>
