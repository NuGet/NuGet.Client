<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="InvalidOptionValueError" xml:space="preserve">
    <value>Invalid option value: '{0} {1}'</value>
  </data>
  <data name="ListCommandNoPackages" xml:space="preserve">
    <value>No packages found.</value>
  </data>
  <data name="MissingOptionValueError" xml:space="preserve">
    <value>Missing option value for: '{0}'</value>
  </data>
  <data name="OptionInvalidWithoutSetter" xml:space="preserve">
    <value>[option] on '{0}' is invalid without a setter.</value>
  </data>
  <data name="PackageCommandSpecifyInputFileError" xml:space="preserve">
    <value>Please specify a nuspec or project file to use.</value>
  </data>
  <data name="PackageCommandSuccess" xml:space="preserve">
    <value>Successfully created package '{0}'.</value>
  </data>
  <data name="PushCommandNoSourceError" xml:space="preserve">
    <value>There is no default source, please specify a source.</value>
  </data>
  <data name="ResourcePropertyIncorrectType" xml:space="preserve">
    <value>The property '{0}' on resource type '{1}' is not a type of ResourceManager.</value>
  </data>
  <data name="ResourceTypeDoesNotHaveProperty" xml:space="preserve">
    <value>The resource type '{0}' does not have an accessible static property named '{1}'.</value>
  </data>
  <data name="UnableToConvertTypeError" xml:space="preserve">
    <value>Unable to change from type '{0}' to '{1}'.</value>
  </data>
  <data name="UnknowCommandError" xml:space="preserve">
    <value>Unknown command: '{0}'</value>
  </data>
  <data name="UnknownOptionError" xml:space="preserve">
    <value>Unknown option: '{0}'</value>
  </data>
  <data name="UpdateCommandCheckingForUpdates" xml:space="preserve">
    <value>Checking for updates from {0}.</value>
  </data>
  <data name="UpdateCommandCurrentlyRunningNuGetExe" xml:space="preserve">
    <value>Currently running NuGet.exe {0}.</value>
  </data>
  <data name="UpdateCommandNuGetUpToDate" xml:space="preserve">
    <value>NuGet.exe is up to date.</value>
  </data>
  <data name="UpdateCommandUnableToFindPackage" xml:space="preserve">
    <value>Unable to find '{0}' package.</value>
  </data>
  <data name="UpdateCommandUnableToLocateNuGetExe" xml:space="preserve">
    <value>Invalid NuGet.CommandLine package. Unable to locate NuGet.exe within the package.</value>
  </data>
  <data name="UpdateCommandUpdateSuccessful" xml:space="preserve">
    <value>Update successful.</value>
  </data>
  <data name="UpdateCommandUpdatingNuGet" xml:space="preserve">
    <value>Updating NuGet.exe to {0}.</value>
  </data>
  <data name="InvalidArguments" xml:space="preserve">
    <value>{0}: invalid arguments.</value>
  </data>
  <data name="PackageCommandAddedFile" xml:space="preserve">
    <value>Added file '{0}'.</value>
  </data>
  <data name="PackageCommandAttemptingToBuildPackage" xml:space="preserve">
    <value>Attempting to build package from '{0}'.</value>
  </data>
  <data name="DefaultCommandDescription" xml:space="preserve">
    <value>No description was provided for this command.</value>
  </data>
  <data name="ConsoleConfirmMessage" xml:space="preserve">
    <value>{0} (y/N) </value>
  </data>
  <data name="ConsoleConfirmMessageAccept" xml:space="preserve">
    <value>y</value>
  </data>
  <data name="AmbiguousCommand" xml:space="preserve">
    <value>Ambiguous command '{0}'. Possible values: {1}.</value>
  </data>
  <data name="AmbiguousOption" xml:space="preserve">
    <value>Ambiguous option '{0}'. Possible values: {1}.</value>
  </data>
  <data name="InstallCommandNothingToInstall" xml:space="preserve">
    <value>All packages listed in {0} are already installed.</value>
  </data>
  <data name="SetApiKeyCommandApiKeySaved" xml:space="preserve">
    <value>The API Key '{0}' was saved for {1}.</value>
  </data>
  <data name="BuildingProjectTargetingFramework" xml:space="preserve">
    <value>Building project '{0}' for target framework '{1}'.</value>
  </data>
  <data name="FailedToBuildProject" xml:space="preserve">
    <value>Failed to build '{0}'.</value>
  </data>
  <data name="PackagingFilesFromOutputPath" xml:space="preserve">
    <value>Packing files from '{0}'.</value>
  </data>
  <data name="UnableToExtractAssemblyMetadata" xml:space="preserve">
    <value>Unable to extract metadata from '{0}'.</value>
  </data>
  <data name="UsingPackagesConfigForDependencies" xml:space="preserve">
    <value>Found packages.config. Using packages listed as dependencies</value>
  </data>
  <data name="Warning_FileDoesNotExist" xml:space="preserve">
    <value>'{0}' was included in the project but doesn't exist. Skipping...</value>
  </data>
  <data name="Warning_UnresolvedFilePath" xml:space="preserve">
    <value>'{0}' was included in the project but the path could not be resolved. Skipping...</value>
  </data>
  <data name="Warning_UnspecifiedField" xml:space="preserve">
    <value>{0} was not specified. Using '{1}'.</value>
  </data>
  <data name="DefaultSymbolServer" xml:space="preserve">
    <value>the symbol server</value>
  </data>
  <data name="LiveFeed" xml:space="preserve">
    <value>the NuGet gallery</value>
  </data>
  <data name="PackageCommandAttemptingToBuildSymbolsPackage" xml:space="preserve">
    <value>Attempting to build symbols package for '{0}'.</value>
  </data>
  <data name="UsingNuspecForMetadata" xml:space="preserve">
    <value>Using '{0}' for metadata.</value>
  </data>
  <data name="InvalidSource" xml:space="preserve">
    <value>The specified source '{0}' is invalid. Please provide a valid source.</value>
  </data>
  <data name="SetApiKeyCommandDefaultApiKeysSaved" xml:space="preserve">
    <value>The API Key '{0}' was saved for {1} and {2}.</value>
  </data>
  <data name="UnableToFindBuildOutput" xml:space="preserve">
    <value>Unable to find '{0}'. Make sure the project has been built.</value>
  </data>
  <data name="InvalidFile" xml:space="preserve">
    <value>No packages.config, project or solution file specified. Use the -self switch to update NuGet.exe.</value>
  </data>
  <data name="NoPackagesConfig" xml:space="preserve">
    <value>Unable to update. The project does not contain a packages.config file.</value>
  </data>
  <data name="PackageDoesNotExist" xml:space="preserve">
    <value>Unable to locate '{0} {1}'. Make sure all packages exist in the packages folder before running update.</value>
  </data>
  <data name="UnableToFindPackages" xml:space="preserve">
    <value>Unable to find '{0}'. Make sure they are specified in packages.config.</value>
  </data>
  <data name="UnableToLocatePackagesFolder" xml:space="preserve">
    <value>Unable to locate the packages folder. Verify all the packages are restored before running 'nuget.exe update'.</value>
  </data>
  <data name="UnableToLocateProjectFile" xml:space="preserve">
    <value>Unable to locate project file for '{0}'.</value>
  </data>
  <data name="FoundProjects" xml:space="preserve">
    <value>Found {0} projects with a packages.config file. ({1})</value>
  </data>
  <data name="LookingForInstalledPackages" xml:space="preserve">
    <value>Looking for installed packages in '{0}'.</value>
  </data>
  <data name="ScanningForProjects" xml:space="preserve">
    <value>Scanning for projects...</value>
  </data>
  <data name="UpdatingProject" xml:space="preserve">
    <value>Updating '{0}'...</value>
  </data>
  <data name="FoundProject" xml:space="preserve">
    <value>Found 1 project with a packages.config file. ({0})</value>
  </data>
  <data name="NoProjectsFound" xml:space="preserve">
    <value>No projects found with packages.config.</value>
  </data>
  <data name="UnableToFindSolution" xml:space="preserve">
    <value>Unable to find solution '{0}'.</value>
  </data>
  <data name="CommandLine_Warning" xml:space="preserve">
    <value>WARNING: {0}</value>
  </data>
  <data name="Credentials_Password" xml:space="preserve">
    <value>Password: </value>
  </data>
  <data name="Credentials_UserName" xml:space="preserve">
    <value>UserName: </value>
  </data>
  <data name="Credentials_RequestCredentials" xml:space="preserve">
    <value>Please provide credentials for: {0}</value>
  </data>
  <data name="InstallCommandPackageAlreadyExists" xml:space="preserve">
    <value>Package "{0}" is already installed.</value>
  </data>
  <data name="PackageCommandNoFilesForLibPackage" xml:space="preserve">
    <value>Failed to build package. Ensure '{0}' includes assembly files. For help on building symbols package, visit {1}.</value>
  </data>
  <data name="PackageCommandNoFilesForSymbolsPackage" xml:space="preserve">
    <value>Failed to build package. Ensure '{0}' includes source and symbol files. For help on building symbols package, visit {1}.</value>
  </data>
  <data name="InstallCommandInvalidPackageReference" xml:space="preserve">
    <value>'{0}' contains invalid package references. </value>
  </data>
  <data name="InstallCommandPackageReferenceInvalidVersion" xml:space="preserve">
    <value>Version string specified for package reference '{0}' is invalid.</value>
  </data>
  <data name="PackageCommandPackageIssueSummary" xml:space="preserve">
    <value>{0} issue(s) found with package '{1}'.</value>
  </data>
  <data name="PackageCommandIssueDescription" xml:space="preserve">
    <value>Description: {0}</value>
  </data>
  <data name="PackageCommandIssueSolution" xml:space="preserve">
    <value>Solution: {0}</value>
  </data>
  <data name="PackageCommandIssueTitle" xml:space="preserve">
    <value>Issue: {0}</value>
  </data>
  <data name="Warning_DefaultSpecValue" xml:space="preserve">
    <value>The value "{0}" for {1} is a sample value and should be removed.</value>
  </data>
  <data name="Warning_DefaultSpecValueSolution" xml:space="preserve">
    <value>Replace with an appropriate value or remove and it and rebuild your package.</value>
  </data>
  <data name="Warning_DefaultSpecValueTitle" xml:space="preserve">
    <value>Remove sample nuspec values.</value>
  </data>
  <data name="Credentials_ProxyCredentials" xml:space="preserve">
    <value>Please provide proxy credentials:</value>
  </data>
  <data name="Warning_SemanticVersion" xml:space="preserve">
    <value>Version "{0}" does not follow semantic versioning guidelines.</value>
  </data>
  <data name="Warning_SemanticVersionSolution" xml:space="preserve">
    <value>Update your nuspec file or use the AssemblyInformationalVersion assembly attribute to specify a semantic version as described at http://semver.org. </value>
  </data>
  <data name="Warning_SemanticVersionTitle" xml:space="preserve">
    <value>Use semantic versioning</value>
  </data>
  <data name="OfficialPackageSourceName" xml:space="preserve">
    <value>NuGet official package source</value>
  </data>
  <data name="PackageCommandFileFromDependencyIsChanged" xml:space="preserve">
    <value>File from dependency is changed. Adding file '{0}'.</value>
  </data>
  <data name="PackageCommandFileFromDependencyIsNotChanged" xml:space="preserve">
    <value>File from dependency is not changed. File '{0}' is not added.</value>
  </data>
  <data name="InstallCommandPackageRestoreConsentNotFound" xml:space="preserve">
    <value>Package restore is disabled. To enable it, open the Visual Studio Options dialog, click on Package Manager node and check '{0}'. You can also enable package restore by setting the environment variable 'EnableNuGetPackageRestore' to 'true'.</value>
  </data>
  <data name="ConfigCommandKeyNotFound" xml:space="preserve">
    <value>Key '{0}' not found.</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="Error_CannotPromptForInput" xml:space="preserve">
    <value>Cannot prompt for input in non-interactive mode.</value>
  </data>
  <data name="Option_VerboseDeprecated" xml:space="preserve">
    <value>Option 'Verbose' has been deprecated. Use 'Verbosity' instead.</value>
  </data>
  <data name="SpecCommandCreatedNuSpec" xml:space="preserve">
    <value>Created '{0}' successfully.</value>
  </data>
  <data name="SpecCommandFileExists" xml:space="preserve">
    <value>'{0}' already exists, use -Force to overwrite it.</value>
  </data>
  <data name="Warning_NoPromptDeprecated" xml:space="preserve">
    <value>Option 'NoPrompt' has been deprecated. Use 'NonInteractive' instead.</value>
  </data>
  <data name="Error_SettingsIsNull" xml:space="preserve">
    <value>Property Settings is null.</value>
  </data>
  <data name="PackageCommandInvalidMinClientVersion" xml:space="preserve">
    <value>The value of MinClientVersion argument is not a valid version.</value>
  </data>
  <data name="AddFileToPackage" xml:space="preserve">
    <value>Add file '{0}' to package as '{1}'</value>
  </data>
  <data name="FileNotAddedToPackage" xml:space="preserve">
    <value>File '{0}' is not added because the package already contains file '{1}'</value>
  </data>
  <data name="Error_ProcessingNuspecFile" xml:space="preserve">
    <value>Error occurred when processing file '{0}': {1}</value>
  </data>
  <data name="Warning_DuplicatePropertyKey" xml:space="preserve">
    <value>'{0}' key already exists in Properties collection. Overriding value.</value>
  </data>
  <data name="ListCommand_LicenseUrl" xml:space="preserve">
    <value>License url: {0}</value>
  </data>
  <data name="FileConflictChoiceText" xml:space="preserve">
    <value>[Y] Yes  [A] Yes to All  [N] No  [L] No to All ?</value>
    <comment>Please do not localize the letters inside the [] brackets.</comment>
  </data>
  <data name="Error_InvalidCharactersInPathSegment" xml:space="preserve">
    <value>Invalid characters in one of the following path segments: '{0}'</value>
  </data>
  <data name="Error_InvalidSolutionDirectory" xml:space="preserve">
    <value>Invalid solution directory: '{0}'</value>
  </data>
  <data name="Error_MultipleSolutions" xml:space="preserve">
    <value>This folder contains more than one solution file.</value>
  </data>
  <data name="RestoreCommandOptionSolutionDirectoryIsInvalid" xml:space="preserve">
    <value>Option -SolutionDirectory is not valid when restoring packages for a solution.</value>
  </data>
  <data name="RestoreCommandRestoringPackagesForSolution" xml:space="preserve">
    <value>Restoring NuGet packages for solution {0}.</value>
  </data>
  <data name="RestoreCommandRestoringPackagesFromPackagesConfigFile" xml:space="preserve">
    <value>Restoring NuGet packages listed in packages.config file.</value>
  </data>
  <data name="Error_CannotLoadTypeProjectInSolution" xml:space="preserve">
    <value>Cannot load type Microsoft.Build.Construction.ProjectInSolution from Microsoft.Build.dll</value>
  </data>
  <data name="Error_CannotLoadTypeSolutionParser" xml:space="preserve">
    <value>Cannot load type Microsoft.Build.Construction.SolutionParser from Microsoft.Build.dll</value>
  </data>
  <data name="RestoreCommandRestoringPackagesListedInFile" xml:space="preserve">
    <value>Restoring NuGet packages listed in file {0}.</value>
  </data>
  <data name="RestoreCommandCannotDeterminePackagesFolder" xml:space="preserve">
    <value>Cannot determine the packages folder to restore NuGet packages. Please specify either -PackagesDirectory or -SolutionDirectory.</value>
  </data>
  <data name="RestoreCommandFileNotFound" xml:space="preserve">
    <value>Input file does not exist: {0}.</value>
  </data>
  <data name="RestoreCommandProjectNotFound" xml:space="preserve">
    <value>Project file {0} cannot be found.</value>
  </data>
  <data name="RestoreCommandPackageRestoreOptOutMessage" xml:space="preserve">
    <value>Restoring NuGet packages...
To prevent NuGet from downloading packages during build, open the Visual Studio Options dialog, click on the NuGet Package Manager node and uncheck '{0}'.</value>
  </data>
  <data name="ProjectRestoreCommandNoPackagesConfigOrProjectJson" xml:space="preserve">
    <value>Nothing to do. This project does not specify any packages for NuGet to restore.</value>
  </data>
  <data name="SolutionRestoreCommandNoPackagesConfigOrProjectJson" xml:space="preserve">
    <value>Nothing to do. None of the projects in this solution specify any packages for NuGet to restore.</value>
  </data>
  <data name="Error_CannotGetGetAllProjectFileNamesMethod" xml:space="preserve">
    <value>Cannot get the GetAllProjectFileNamesMethod from type  Mono.XBuild.CommandLine.SolutionParser.</value>
  </data>
  <data name="Error_CannotGetXBuildSolutionParser" xml:space="preserve">
    <value>Cannot get type Mono.XBuild.CommandLine.SolutionParser.</value>
  </data>
  <data name="Error_CannotLocateSolutionFile" xml:space="preserve">
    <value>Cannot locate a solution file.</value>
  </data>
  <data name="MultipleProjectFilesFound" xml:space="preserve">
    <value>Found multiple project files for '{0}'.</value>
  </data>
  <data name="UnableToFindProject" xml:space="preserve">
    <value>Unable to find project '{0}'.</value>
  </data>
  <data name="Warning_InvalidPackageSaveMode" xml:space="preserve">
    <value>Invalid PackageSaveMode value '{0}'.</value>
  </data>
  <data name="Warning_UnspecifiedDependencyVersion" xml:space="preserve">
    <value>The version of dependency '{0}' is not specified.</value>
  </data>
  <data name="Warning_UnspecifiedDependencyVersionSolution" xml:space="preserve">
    <value>Specify the version of dependency and rebuild your package.</value>
  </data>
  <data name="Warning_UnspecifiedDependencyVersionTitle" xml:space="preserve">
    <value>Specify version of dependencies.</value>
  </data>
  <data name="HelpCommandForMoreInfo" xml:space="preserve">
    <value>For more information, visit {0}</value>
    <comment>{0} will be replaced with a url.</comment>
  </data>
  <data name="SettingsCredentials_UsingSavedCredentials" xml:space="preserve">
    <value>Using credentials from config. UserName: {0}</value>
  </data>
  <data name="InstallCommandUnableToFindPackage" xml:space="preserve">
    <value>Unable to find package '{0}'</value>
  </data>
  <data name="MsBuildDoesNotExistAtPath" xml:space="preserve">
    <value>MsBuild.exe does not exist at '{0}'.</value>
  </data>
  <data name="RestoreCommandCannotDetermineGlobalPackagesFolder" xml:space="preserve">
    <value>'globalPackagesFolder' setting is a relative path. To determine full path, please specify either -SolutionDirectory or a solution file as a parameter. To ignore 'globalPackagesFolder' setting, specify -PackagesDirectory.</value>
    <comment>Please do not localize 'globalPackagesFolder', -SolutionDirectory or -PackagesDirectory</comment>
  </data>
  <data name="Error_PackagesConfigParseError" xml:space="preserve">
    <value>Error parsing packages.config file at {0}: {1}</value>
  </data>
  <data name="Error_SolutionFileParseError" xml:space="preserve">
    <value>Error parsing solution file at {0}: {1}</value>
  </data>
  <data name="Error_UnsupportedMsbuild" xml:space="preserve">
    <value>This version of msbuild is not supported: '{0}'</value>
  </data>
  <data name="Error_CannotFindMsbuild" xml:space="preserve">
    <value>Cannot find the specified version of msbuild: '{0}'</value>
  </data>
  <data name="Error_InvalidMsbuildVersion" xml:space="preserve">
    <value>Invalid MSBuild version specified: '{0}'</value>
  </data>
  <data name="ListCommand_ListNotSupported" xml:space="preserve">
    <value>This version of nuget.exe does not support listing packages from package source '{0}'.</value>
  </data>
  <data name="MSBuildAutoDetection" xml:space="preserve">
    <value>MSBuild auto-detection: using msbuild version '{0}' from '{1}'.</value>
  </data>
  <data name="MSBuildAutoDetection_Verbose" xml:space="preserve">
    <value>MSBuild auto-detection: using msbuild version '{0}' from '{1}'. Use option -MSBuildVersion to force nuget to use a specific version of MSBuild.</value>
  </data>
  <data name="Error_MSBuildNotInstalled" xml:space="preserve">
    <value>MSBuild is not installed.</value>
  </data>
  <data name="FailedToLoadExtension" xml:space="preserve">
    <value>Failed to load {0}, if this extension was downloaded from the internet please make sure it got unblocked (right click, properties, unblock).</value>
  </data>
  <data name="FailedToLoadExtensionDuringMefComposition" xml:space="preserve">
    <value>Failed to load {0}{1}</value>
  </data>
  <data name="Path_Invalid" xml:space="preserve">
    <value>'{0}' is not a valid path.</value>
  </data>
  <data name="NupkgPath_InvalidNupkg" xml:space="preserve">
    <value>'{0}' is not a valid nupkg file.</value>
  </data>
  <data name="NupkgPath_NotFound" xml:space="preserve">
    <value>Provided Nupkg file '{0}' is not found.</value>
  </data>
  <data name="Path_Invalid_NotFileNotUnc" xml:space="preserve">
    <value>'{0}' should be a local path or a UNC share path.</value>
  </data>
  <data name="Source_NotFound" xml:space="preserve">
    <value>Source '{0}' is not found.</value>
  </data>
  <data name="AddCommand_PackageAlreadyExists" xml:space="preserve">
    <value>Package '{0}' already exists at feed '{1}'.</value>
  </data>
  <data name="AddCommand_ExistingPackageInvalid" xml:space="preserve">
    <value>Package '{0}' already exists at feed '{1}' and is invalid.</value>
  </data>
  <data name="InitCommand_FeedContainsNoPackages" xml:space="preserve">
    <value>Feed '{0}' contains no packages.</value>
  </data>
  <data name="InitCommand_FeedIsNotFound" xml:space="preserve">
    <value>Provided feed folder '{0}' is not found.</value>
  </data>
  <data name="AddCommand_SourceNotProvided" xml:space="preserve">
    <value>'-Source' switch is not provided. nupkg gets added to the 'Source' and is mandatory.</value>
  </data>
  <data name="LocalsCommand_ClearedSuccessful" xml:space="preserve">
    <value>Local resources cleared.</value>
  </data>
  <data name="LocalsCommand_ClearingNuGetCache" xml:space="preserve">
    <value>Clearing NuGet cache: {0}</value>
  </data>
  <data name="LocalsCommand_ClearingNuGetGlobalPackagesCache" xml:space="preserve">
    <value>Clearing NuGet global packages cache: {0}</value>
  </data>
  <data name="LocalsCommand_ClearingNuGetHttpCache" xml:space="preserve">
    <value>Clearing NuGet HTTP cache: {0}</value>
  </data>
  <data name="LocalsCommand_ClearFailed" xml:space="preserve">
    <value>Clearing local resources failed: one or more errors occured.</value>
  </data>
  <data name="LocalsCommand_InvalidLocalResourceName" xml:space="preserve">
    <value>An invalid local resource name was provided. Please provide one of the following values: http-cache, packages-cache, global-packages, all.</value>
  </data>
  <data name="LocalsCommand_LocalResourcePathNotSet" xml:space="preserve">
    <value>The location of local resource '{0}' is undefined.</value>
  </data>
  <data name="Error_MsBuildTimedOut" xml:space="preserve">
    <value>MsBuild timeout out while trying to get project to project references.</value>
  </data>
  <data name="Error_CannotKillMsBuild" xml:space="preserve">
    <value>MsBuild timeout out while trying to get project to project references, and NuGet.exe failed to kill the process.</value>
  </data>
  <data name="Error_FailedToCreateRandomFileForP2P" xml:space="preserve">
    <value>Failed to create a temporary file while trying to get project to project references.</value>
  </data>
  <data name="LocalsCommand_FailedToDeletePath" xml:space="preserve">
    <value>Failed to delete '{0}'.</value>
  </data>
  <data name="LocalsCommand_LocalsPartiallyCleared" xml:space="preserve">
    <value>Local resources partially cleared.</value>
  </data>
  <data name="Error_MissingSourceParameter" xml:space="preserve">
    <value>Source parameter was not specified.</value>
  </data>
  <data name="Error_UnableToLocateRestoreTarget" xml:space="preserve">
    <value>The folder '{0}' does not contain an msbuild solution or packages.config file to restore.</value>
  </data>
  <data name="Error_UnableToLocateRestoreTarget_Because" xml:space="preserve">
    <value>Failed to find an msbuild solution, packages.config, or project.json file in the folder '{0}'.</value>
    <comment>{0} is the folder that could not be accessed. The underlying failure is available in the inner exception message.</comment>
  </data>
  <data name="PushCommandTimeoutError" xml:space="preserve">
    <value>Pushing took too long. You can change the default timeout of 300 seconds by using the -Timeout &lt;seconds&gt; option with the push command.</value>
  </data>
  <data name="InvalidAssemblyInformationalVersion" xml:space="preserve">
    <value>Invalid AssemblyInformationalVersion '{0}' on assembly '{1}'; falling back to AssemblyVersion '{2}'.</value>
  </data>
  <data name="Credentials_ForbiddenCredentials" xml:space="preserve">
    <value>The remote server indicated that the previous request was forbidden. Please provide credentials for: {0}</value>
    <comment>{0} will be replaced with the URL that needs credentials.</comment>
  </data>
  <data name="OutputNuGetVersion" xml:space="preserve">
    <value>{0} Version: {1}</value>
  </data>
  <data name="Error_MultipleTargetFrameworks" xml:space="preserve">
    <value>project.json cannot contain multiple Target Frameworks.</value>
  </data>
  <data name="Error_ProjectJsonNotAllowed" xml:space="preserve">
    <value>Invalid input '{0}'. Provide the path of an msbuild solution file instead. Support for XProj and standalone project.json files has been removed, to continue working with legacy projects use NuGet 3.5.x from https://nuget.org/downloads</value>
  </data>
  <data name="Warning_ReadingProjectsFailed" xml:space="preserve">
    <value>Error reading msbuild project information, ensure that your input solution or project file is valid. NETCore and UAP projects will be skipped, only packages.config files will be restored.</value>
  </data>
  <data name="MsbuildLoadToolSetError" xml:space="preserve">
    <value>Failed to load msbuild Toolset</value>
  </data>
  <data name="Warning_MsbuildPath" xml:space="preserve">
    <value>MsbuildPath : {0} is using, ignore MsBuildVersion: {1}. </value>
  </data>
  <data name="MSbuildFromPath" xml:space="preserve">
    <value>Using Msbuild from '{0}'.</value>
  </data>
  <data name="MsbuildPathNotExist" xml:space="preserve">
    <value>MSBuildPath : {0} does not exist.</value>
  </data>
  <data name="PackageRestoreConsentCheckBoxText" xml:space="preserve">
    <value>&amp;Allow NuGet to download missing packages</value>
  </data>
  <data name="UnsupportedFramework" xml:space="preserve">
    <value>'{0}' is not a valid target framework.</value>
  </data>
  <data name="InstallPackageMessage" xml:space="preserve">
    <value>Installing package '{0}' to '{1}'.</value>
  </data>
  <data name="Error_ResponseFileDoesNotExist" xml:space="preserve">
    <value>Response file '{0}' does not exist</value>
  </data>
  <data name="Error_ResponseFileInvalid" xml:space="preserve">
    <value>Invalid response file, '@' does not exist</value>
  </data>
  <data name="Error_ResponseFileMaxRecursionDepth" xml:space="preserve">
    <value>No more than {0} nested response files are allowed</value>
  </data>
  <data name="Error_ResponseFileNullOrEmpty" xml:space="preserve">
    <value>Response file '{0}' cannot be empty</value>
  </data>
  <data name="Error_ResponseFileTooLarge" xml:space="preserve">
    <value>Response file '{0}' cannot be larger than {1}mb</value>
  </data>
  <data name="ConsolePasswordProvider_DisplayFile" xml:space="preserve">
    <value>Please provide password for: {0}</value>
    <comment>0 - file that requires password</comment>
  </data>
  <data name="ConsolePasswordProvider_PromptForPassword" xml:space="preserve">
    <value>Password: </value>
  </data>
  <data name="Warning_LongPath_DisabledPolicy" xml:space="preserve">
    <value>Please enbale long file path support in local group policy. Fore more details, please refer to https://aka.ms/nuget-long-path.</value>
  </data>
  <data name="Warning_LongPath_UnsupportedNetFramework" xml:space="preserve">
    <value>Please install .NET Framework 4.6.2 or above that supports long file paths. Fore more details, please refer to https://aka.ms/nuget-long-path.</value>
  </data>
  <data name="Warning_LongPath_UnsupportedOS" xml:space="preserve">
    <value>Long file path is currently only supported on Windows 10. Fore more details, please refer to https://aka.ms/nuget-long-path.</value>
  </data>
  <data name="Error_UnknownAction" xml:space="preserve">
    <value>The action '{0}' is not recognized.</value>
    <comment>0 - action</comment>
  </data>
  <data name="Error_ArgumentNotExpected" xml:space="preserve">
    <value>The argument '{0}' is not expected.</value>
    <comment>0 - argument name</comment>
  </data>
  <data name="ProjectJsonPack_Deprecated" xml:space="preserve">
    <value>`project.json` pack is deprecated. Please consider migrating '{0}' to `PackageReference` and using the pack targets.</value>
    <comment>Do not localize project.json and `PackageReference` 
0 - project path (project.json file path)</comment>
  </data>
  <data name="Error_UnknownDependencyVersion" xml:space="preserve">
    <value>Invalid value given for 'DependencyVersion': "{0}".</value>
    <comment>Please don't localize "DependencyVersion".</comment>
  </data>
  <data name="Error_UpdateSelf_Source" xml:space="preserve">
    <value>The `update -self` command only accepts one source as an argument. If the source option is not specified, the default NuGet source will be used.</value>
  </data>
  <data name="ArgumentNullOrEmpty" xml:space="preserve">
    <value>Argument cannot be null or empty.</value>
  </data>
  <data name="Error_ProjectJson_Deprecated_And_Removed" xml:space="preserve">
    <value>`project.json` pack is disabled in the current NuGet version, and will be permanently removed in a future version.
Please consider migrating '{0}' to `PackageReference` and using the pack targets.
You can set the '{1}' environment variable to 'true' to temporarily reenable this functionality.</value>
    <comment>Please do not localize `project.json` pack and `PackageReference`. 0 - path, 1 - env var name</comment>
  </data>
  <data name="Error_NuGetExeNeedsToBeUnblockedAfterDownloading" xml:space="preserve">
    <value>NuGet.exe file on path {0} needs to be unblocked after downloading.</value>
  </data>
  <data name="Warning_HttpServerUsage" xml:space="preserve">
    <value>You are running the '{0}' operation with an 'HTTP' source, '{1}'. Non-HTTPS access will be removed in a future version. Consider migrating to an 'HTTPS' source.</value>
    <comment>0 - The command name. Ex. Push/Delete. 1 - server uri.</comment>
  </data>
  <data name="Warning_HttpSources_Multiple" xml:space="preserve">
    <value>You are running the '{0}' operation with 'HTTP' sources: {1}
Non-HTTPS access will be removed in a future version. Consider migrating to 'HTTPS' sources.</value>
  </data>
  <data name="Error_SourceProviderIsNull" xml:space="preserve">
    <value>Property SourceProvider is null.</value>
    <comment>Don't localize 'SourceProvider'</comment>
  </data>
  <data name="Error_AttemptingToPackSDKproject" xml:space="preserve">
    <value>The `pack` command for SDK-style projects is not supported, use `dotnet pack` or `msbuild -t:pack` to pack this project instead. You can override this behavior by setting the '{0}' environment variable to 'true'.</value>
    <comment>0 - environment variable name. 
Do not localize `SDK`, `dotnet pack`, msbuild -t:pack` and 'true'.</comment>
  </data>
  <data name="Error_UnsupportedMsBuildForSolutionFilter" xml:space="preserve">
    <value>This version of MSBuild not support Solution filter: '{0}'. Please use a MSBuild version greater or equal to 16.7 to use this feature.</value>
  </data>
  <data name="Error_InvalidCultureInfo" xml:space="preserve">
    <value>Invalid culture identifier in {0} environment variable. Value read is '{1}'</value>
    <comment>0 - Environment variable name, 1 - value set in environment variable</comment>
  </data>
  <data name="Error_CannotFindNonArchitectureSpecificMsbuild" xml:space="preserve">
    <value>The resolved MSBuild directory is `{0}` which is an architecture-specific directory. Could not find MSBuild in its parent directory (non-architecture specific).</value>
  </data>
</root>