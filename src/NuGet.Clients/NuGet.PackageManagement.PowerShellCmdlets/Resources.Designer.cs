//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NuGet.PackageManagement.PowerShellCmdlets {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("NuGet.PackageManagement.PowerShellCmdlets.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All.
        /// </summary>
        internal static string AggregateSourceName {
            get {
                return ResourceManager.GetString("AggregateSourceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument cannot be null or empty.
        /// </summary>
        internal static string Argument_Cannot_Be_Null_Or_Empty {
            get {
                return ResourceManager.GetString("Argument_Cannot_Be_Null_Or_Empty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This Command/Parameter combination has been deprecated and will be removed in the next release. Please consider using the new command that replaces it: &apos;{0}&apos;..
        /// </summary>
        internal static string Cmdlet_CommandObsolete {
            get {
                return ResourceManager.GetString("Cmdlet_CommandObsolete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Would you like to continue with the project action(s) anyways?.
        /// </summary>
        internal static string Cmdlet_DeprecatedFrameworkContinue {
            get {
                return ResourceManager.GetString("Cmdlet_DeprecatedFrameworkContinue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not continue with the project action(s).
        /// </summary>
        internal static string Cmdlet_DeprecatedFrameworkNoHelp {
            get {
                return ResourceManager.GetString("Cmdlet_DeprecatedFrameworkNoHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Continue with the project action(s) and do not prompt for confirmation again.
        /// </summary>
        internal static string Cmdlet_DeprecatedFrameworkYesDoNotPromptAgainHelp {
            get {
                return ResourceManager.GetString("Cmdlet_DeprecatedFrameworkYesDoNotPromptAgainHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Continue with the project action(s).
        /// </summary>
        internal static string Cmdlet_DeprecatedFrameworkYesHelp {
            get {
                return ResourceManager.GetString("Cmdlet_DeprecatedFrameworkYesHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stop to display more packages.
        /// </summary>
        internal static string Cmdlet_DisplayMorePackagesNoHelp {
            get {
                return ResourceManager.GetString("Cmdlet_DisplayMorePackagesNoHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Continue to display more packages.
        /// </summary>
        internal static string Cmdlet_DisplayMorePackagesYesHelp {
            get {
                return ResourceManager.GetString("Cmdlet_DisplayMorePackagesYesHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Executing script file &apos;{0}&apos;.
        /// </summary>
        internal static string Cmdlet_ExecutingScript {
            get {
                return ResourceManager.GetString("Cmdlet_ExecutingScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following source failed to search for packages: &apos;{0}&apos;{1}{2}.
        /// </summary>
        internal static string Cmdlet_FailedToSearchSource {
            get {
                return ResourceManager.GetString("Cmdlet_FailedToSearchSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to parse package identities from file {0} with exception: {1}.
        /// </summary>
        internal static string Cmdlet_FailToParsePackages {
            get {
                return ResourceManager.GetString("Cmdlet_FailToParsePackages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to parse the input of Version parameter: {0} to a valid Semantic version. .
        /// </summary>
        internal static string Cmdlet_FailToParseVersion {
            get {
                return ResourceManager.GetString("Cmdlet_FailToParseVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skip this file and all subsequent files.
        /// </summary>
        internal static string Cmdlet_FileConflictNoAllHelp {
            get {
                return ResourceManager.GetString("Cmdlet_FileConflictNoAllHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skip this file.
        /// </summary>
        internal static string Cmdlet_FileConflictNoHelp {
            get {
                return ResourceManager.GetString("Cmdlet_FileConflictNoHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File Conflict.
        /// </summary>
        internal static string Cmdlet_FileConflictTitle {
            get {
                return ResourceManager.GetString("Cmdlet_FileConflictTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overwrite this file and all subsequent files.
        /// </summary>
        internal static string Cmdlet_FileConflictYesAllHelp {
            get {
                return ResourceManager.GetString("Cmdlet_FileConflictYesAllHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overwrite this file.
        /// </summary>
        internal static string Cmdlet_FileConflictYesHelp {
            get {
                return ResourceManager.GetString("Cmdlet_FileConflictYesHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No packages found in the current package source..
        /// </summary>
        internal static string Cmdlet_GetPackageNoPackageFound {
            get {
                return ResourceManager.GetString("Cmdlet_GetPackageNoPackageFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path &apos;{0}&apos; is invalid..
        /// </summary>
        internal static string Cmdlet_InvalidPathSyntax {
            get {
                return ResourceManager.GetString("Cmdlet_InvalidPathSyntax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only paths residing on a FileSystemProvider are supported..
        /// </summary>
        internal static string Cmdlet_InvalidProvider {
            get {
                return ResourceManager.GetString("Cmdlet_InvalidProvider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The PSDrive &apos;{0}&apos; was not found..
        /// </summary>
        internal static string Cmdlet_InvalidPSDrive {
            get {
                return ResourceManager.GetString("Cmdlet_InvalidPSDrive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some NuGet packages are missing from the solution. The packages need to be restored in order to build the dependency graph. Restore the packages before performing any operations..
        /// </summary>
        internal static string Cmdlet_MissingPackages {
            get {
                return ResourceManager.GetString("Cmdlet_MissingPackages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;No.
        /// </summary>
        internal static string Cmdlet_No {
            get {
                return ResourceManager.GetString("Cmdlet_No", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No to Al&amp;l.
        /// </summary>
        internal static string Cmdlet_NoAll {
            get {
                return ResourceManager.GetString("Cmdlet_NoAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No compatible project(s) found in the active solution..
        /// </summary>
        internal static string Cmdlet_NoCompatibleProjects {
            get {
                return ResourceManager.GetString("Cmdlet_NoCompatibleProjects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No package actions available to be executed..
        /// </summary>
        internal static string Cmdlet_NoPackageActions {
            get {
                return ResourceManager.GetString("Cmdlet_NoPackageActions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No packages installed..
        /// </summary>
        internal static string Cmdlet_NoPackagesInstalled {
            get {
                return ResourceManager.GetString("Cmdlet_NoPackagesInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No package updates are available from the current package source for project &apos;{0}&apos;..
        /// </summary>
        internal static string Cmdlet_NoPackageUpdates {
            get {
                return ResourceManager.GetString("Cmdlet_NoPackageUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are no other projects to sync the package &apos;{0}&apos;..
        /// </summary>
        internal static string Cmdlet_NoProjectsToSyncPackage {
            get {
                return ResourceManager.GetString("Cmdlet_NoProjectsToSyncPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current environment doesn&apos;t have a solution open..
        /// </summary>
        internal static string Cmdlet_NoSolution {
            get {
                return ResourceManager.GetString("Cmdlet_NoSolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package with the Id &apos;{0}&apos; is not installed to project &apos;{1}&apos;..
        /// </summary>
        internal static string Cmdlet_PackageNotInstalled {
            get {
                return ResourceManager.GetString("Cmdlet_PackageNotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; was not installed in any project. Update failed..
        /// </summary>
        internal static string Cmdlet_PackageNotInstalledInAnyProject {
            get {
                return ResourceManager.GetString("Cmdlet_PackageNotInstalledInAnyProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Project &apos;{0}&apos; is not found..
        /// </summary>
        internal static string Cmdlet_ProjectNotFound {
            get {
                return ResourceManager.GetString("Cmdlet_ProjectNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There may be more packages to display. Do you want to continue?.
        /// </summary>
        internal static string Cmdlet_PrompToDisplayMorePackages {
            get {
                return ResourceManager.GetString("Cmdlet_PrompToDisplayMorePackages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One or more packages could not be completely uninstalled: &apos;{0}&apos;. Restart Visual Studio to finish uninstall..
        /// </summary>
        internal static string Cmdlet_RequestRestartToCompleteUninstall {
            get {
                return ResourceManager.GetString("Cmdlet_RequestRestartToCompleteUninstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time Elapsed: {0}.
        /// </summary>
        internal static string Cmdlet_TotalTime {
            get {
                return ResourceManager.GetString("Cmdlet_TotalTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;Yes.
        /// </summary>
        internal static string Cmdlet_Yes {
            get {
                return ResourceManager.GetString("Cmdlet_Yes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Yes to &amp;All.
        /// </summary>
        internal static string Cmdlet_YesAll {
            get {
                return ResourceManager.GetString("Cmdlet_YesAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Yes and &amp;Ignore future warnings.
        /// </summary>
        internal static string Cmdlet_YesDoNotPromptAgain {
            get {
                return ResourceManager.GetString("Cmdlet_YesDoNotPromptAgain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Each package is licensed to you by its owner. NuGet is not responsible for, nor does it grant any licenses to, third-party packages. Some packages may include dependencies which are governed by additional licenses. Follow the package source (feed) URL to determine any dependencies..
        /// </summary>
        internal static string Console_DisclaimerText {
            get {
                return ResourceManager.GetString("Console_DisclaimerText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type &apos;get-help NuGet&apos; to see all available NuGet commands..
        /// </summary>
        internal static string Console_HelpText {
            get {
                return ResourceManager.GetString("Console_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nested prompt not supported..
        /// </summary>
        internal static string ErrorNestedPromptNotSupported {
            get {
                return ResourceManager.GetString("ErrorNestedPromptNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find package &apos;{0}&apos; at source &apos;{1}&apos;..
        /// </summary>
        internal static string Exception_PackageNotFound {
            get {
                return ResourceManager.GetString("Exception_PackageNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: The Package Manager Console requires PowerShell 2.0 runtime, which is not detected on this machine. Please install the PowerShell 2.0 from http://support.microsoft.com/kb/968929 and restart Visual Studio..
        /// </summary>
        internal static string Host_PSNotInstalled {
            get {
                return ResourceManager.GetString("Host_PSNotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package Manager Console Host Version {0}.
        /// </summary>
        internal static string PowerShellHostTitle {
            get {
                return ResourceManager.GetString("PowerShellHostTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [?] Help (default is &quot;{0}&quot;):.
        /// </summary>
        internal static string PromptForChoiceSuffix {
            get {
                return ResourceManager.GetString("PromptForChoiceSuffix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source &apos;{0}&apos; not found. Please provide an HTTP or local source..
        /// </summary>
        internal static string UnknownSource {
            get {
                return ResourceManager.GetString("UnknownSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unsupported type of source &apos;{0}&apos;. Please provide an HTTP or local source..
        /// </summary>
        internal static string UnknownSourceType {
            get {
                return ResourceManager.GetString("UnknownSourceType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find package &apos;{0}&apos; at source &apos;{1}&apos;. Source not found..
        /// </summary>
        internal static string UnknownSourceWithId {
            get {
                return ResourceManager.GetString("UnknownSourceWithId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The `-Reinstall` parameter does not apply to PackageReference based projects `{0}&apos;..
        /// </summary>
        internal static string Warning_ReinstallNotRespectedForProjectType {
            get {
                return ResourceManager.GetString("Warning_ReinstallNotRespectedForProjectType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; parameter is not respected for the transitive package management based project(s) {1}. The enabled sources in your NuGet configuration will be used. .
        /// </summary>
        internal static string Warning_SourceNotRespectedForProjectType {
            get {
                return ResourceManager.GetString("Warning_SourceNotRespectedForProjectType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Zero length collection..
        /// </summary>
        internal static string ZeroLengthCollection {
            get {
                return ResourceManager.GetString("ZeroLengthCollection", resourceCulture);
            }
        }
    }
}
