NuGet.Build.MSBuildLogger
NuGet.Build.MSBuildLogger.MSBuildLogger(Microsoft.Build.Utilities.TaskLoggingHelper taskLogging) -> void
NuGet.Build.Tasks.GetProjectTargetFrameworksTask
NuGet.Build.Tasks.GetProjectTargetFrameworksTask.GetProjectTargetFrameworksTask() -> void
NuGet.Build.Tasks.GetProjectTargetFrameworksTask.ProjectPath.get -> string
NuGet.Build.Tasks.GetProjectTargetFrameworksTask.ProjectPath.set -> void
NuGet.Build.Tasks.GetProjectTargetFrameworksTask.ProjectTargetFrameworks.get -> string
NuGet.Build.Tasks.GetProjectTargetFrameworksTask.ProjectTargetFrameworks.set -> void
NuGet.Build.Tasks.GetProjectTargetFrameworksTask.TargetFramework.get -> string
NuGet.Build.Tasks.GetProjectTargetFrameworksTask.TargetFramework.set -> void
NuGet.Build.Tasks.GetProjectTargetFrameworksTask.TargetFrameworkMoniker.get -> string
NuGet.Build.Tasks.GetProjectTargetFrameworksTask.TargetFrameworkMoniker.set -> void
NuGet.Build.Tasks.GetProjectTargetFrameworksTask.TargetFrameworks.get -> string
NuGet.Build.Tasks.GetProjectTargetFrameworksTask.TargetFrameworks.set -> void
NuGet.Build.Tasks.GetProjectTargetFrameworksTask.TargetPlatformIdentifier.get -> string
NuGet.Build.Tasks.GetProjectTargetFrameworksTask.TargetPlatformIdentifier.set -> void
NuGet.Build.Tasks.GetProjectTargetFrameworksTask.TargetPlatformMinVersion.get -> string
NuGet.Build.Tasks.GetProjectTargetFrameworksTask.TargetPlatformMinVersion.set -> void
NuGet.Build.Tasks.GetProjectTargetFrameworksTask.TargetPlatformVersion.get -> string
NuGet.Build.Tasks.GetProjectTargetFrameworksTask.TargetPlatformVersion.set -> void
NuGet.Build.Tasks.Pack.GetPackOutputItemsTask
NuGet.Build.Tasks.Pack.GetPackOutputItemsTask.GetPackOutputItemsTask() -> void
NuGet.Build.Tasks.Pack.GetPackOutputItemsTask.IncludeSource.get -> bool
NuGet.Build.Tasks.Pack.GetPackOutputItemsTask.IncludeSource.set -> void
NuGet.Build.Tasks.Pack.GetPackOutputItemsTask.IncludeSymbols.get -> bool
NuGet.Build.Tasks.Pack.GetPackOutputItemsTask.IncludeSymbols.set -> void
NuGet.Build.Tasks.Pack.GetPackOutputItemsTask.NuspecOutputPath.get -> string
NuGet.Build.Tasks.Pack.GetPackOutputItemsTask.NuspecOutputPath.set -> void
NuGet.Build.Tasks.Pack.GetPackOutputItemsTask.OutputPackItems.get -> Microsoft.Build.Framework.ITaskItem[]
NuGet.Build.Tasks.Pack.GetPackOutputItemsTask.OutputPackItems.set -> void
NuGet.Build.Tasks.Pack.GetPackOutputItemsTask.PackageId.get -> string
NuGet.Build.Tasks.Pack.GetPackOutputItemsTask.PackageId.set -> void
NuGet.Build.Tasks.Pack.GetPackOutputItemsTask.PackageOutputPath.get -> string
NuGet.Build.Tasks.Pack.GetPackOutputItemsTask.PackageOutputPath.set -> void
NuGet.Build.Tasks.Pack.GetPackOutputItemsTask.PackageVersion.get -> string
NuGet.Build.Tasks.Pack.GetPackOutputItemsTask.PackageVersion.set -> void
NuGet.Build.Tasks.Pack.GetPackOutputItemsTask.SymbolPackageFormat.get -> string
NuGet.Build.Tasks.Pack.GetPackOutputItemsTask.SymbolPackageFormat.set -> void
NuGet.Build.Tasks.Pack.GetProjectReferencesFromAssetsFileTask
NuGet.Build.Tasks.Pack.GetProjectReferencesFromAssetsFileTask.GetProjectReferencesFromAssetsFileTask() -> void
NuGet.Build.Tasks.Pack.GetProjectReferencesFromAssetsFileTask.ProjectAssetsFileAbsolutePath.get -> string
NuGet.Build.Tasks.Pack.GetProjectReferencesFromAssetsFileTask.ProjectAssetsFileAbsolutePath.set -> void
NuGet.Build.Tasks.Pack.GetProjectReferencesFromAssetsFileTask.ProjectReferences.get -> Microsoft.Build.Framework.ITaskItem[]
NuGet.Build.Tasks.Pack.GetProjectReferencesFromAssetsFileTask.ProjectReferences.set -> void
NuGet.Build.Tasks.Pack.GetProjectReferencesFromAssetsFileTask.RestoreOutputAbsolutePath.get -> string
NuGet.Build.Tasks.Pack.GetProjectReferencesFromAssetsFileTask.RestoreOutputAbsolutePath.set -> void
NuGet.Build.Tasks.Pack.IPackTaskLogic
NuGet.Build.Tasks.Pack.IPackTaskLogic.BuildPackage(NuGet.Commands.PackCommandRunner runner) -> bool
NuGet.Build.Tasks.Pack.IPackTaskLogic.GetPackArgs(NuGet.Build.Tasks.Pack.IPackTaskRequest<NuGet.Commands.IMSBuildItem> request) -> NuGet.Commands.PackArgs
NuGet.Build.Tasks.Pack.IPackTaskLogic.GetPackCommandRunner(NuGet.Build.Tasks.Pack.IPackTaskRequest<NuGet.Commands.IMSBuildItem> request, NuGet.Commands.PackArgs packArgs, NuGet.Packaging.PackageBuilder packageBuilder) -> NuGet.Commands.PackCommandRunner
NuGet.Build.Tasks.Pack.IPackTaskLogic.GetPackageBuilder(NuGet.Build.Tasks.Pack.IPackTaskRequest<NuGet.Commands.IMSBuildItem> request) -> NuGet.Packaging.PackageBuilder
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.AllowedOutputExtensionsInPackageBuildOutputFolder.get -> string[]
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.AllowedOutputExtensionsInSymbolsPackageBuildOutputFolder.get -> string[]
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.AssemblyName.get -> string
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.Authors.get -> string[]
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.BuildOutputFolders.get -> string[]
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.BuildOutputInPackage.get -> TItem[]
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.ContentTargetFolders.get -> string[]
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.ContinuePackingAfterGeneratingNuspec.get -> bool
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.Copyright.get -> string
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.Description.get -> string
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.Deterministic.get -> bool
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.DevelopmentDependency.get -> bool
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.FrameworkAssemblyReferences.get -> TItem[]
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.FrameworksWithSuppressedDependencies.get -> TItem[]
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.IconUrl.get -> string
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.IncludeBuildOutput.get -> bool
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.IncludeSource.get -> bool
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.IncludeSymbols.get -> bool
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.InstallPackageToOutputPath.get -> bool
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.IsTool.get -> bool
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.LicenseUrl.get -> string
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.Logger.get -> NuGet.Common.ILogger
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.MinClientVersion.get -> string
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.NoDefaultExcludes.get -> bool
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.NoPackageAnalysis.get -> bool
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.NoWarn.get -> string
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.NuspecBasePath.get -> string
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.NuspecFile.get -> string
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.NuspecOutputPath.get -> string
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.NuspecProperties.get -> string[]
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.OutputFileNamesWithoutVersion.get -> bool
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.PackItem.get -> TItem
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.PackageFiles.get -> TItem[]
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.PackageFilesToExclude.get -> TItem[]
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.PackageIcon.get -> string
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.PackageId.get -> string
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.PackageLicenseExpression.get -> string
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.PackageLicenseExpressionVersion.get -> string
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.PackageLicenseFile.get -> string
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.PackageOutputPath.get -> string
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.PackageTypes.get -> string[]
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.PackageVersion.get -> string
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.ProjectReferencesWithVersions.get -> TItem[]
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.ProjectUrl.get -> string
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.ReleaseNotes.get -> string
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.RepositoryBranch.get -> string
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.RepositoryCommit.get -> string
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.RepositoryType.get -> string
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.RepositoryUrl.get -> string
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.RequireLicenseAcceptance.get -> bool
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.RestoreOutputPath.get -> string
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.Serviceable.get -> bool
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.SourceFiles.get -> TItem[]
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.SymbolPackageFormat.get -> string
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.Tags.get -> string[]
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.TargetFrameworks.get -> string[]
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.TargetPathsToSymbols.get -> TItem[]
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.Title.get -> string
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.TreatWarningsAsErrors.get -> string
NuGet.Build.Tasks.Pack.IPackTaskRequest<TItem>.WarningsAsErrors.get -> string
NuGet.Build.Tasks.Pack.IsPackableFalseWarningTask
NuGet.Build.Tasks.Pack.IsPackableFalseWarningTask.IsPackableFalseWarningTask() -> void
NuGet.Build.Tasks.Pack.IsPackableFalseWarningTask.Logger.get -> NuGet.Common.ILogger
NuGet.Build.Tasks.Pack.MSBuildTaskItem
NuGet.Build.Tasks.Pack.MSBuildTaskItem.CloneCustomMetadata() -> System.Collections.IDictionary
NuGet.Build.Tasks.Pack.MSBuildTaskItem.GetProperty(string property) -> string
NuGet.Build.Tasks.Pack.MSBuildTaskItem.GetProperty(string property, bool trim) -> string
NuGet.Build.Tasks.Pack.MSBuildTaskItem.Identity.get -> string
NuGet.Build.Tasks.Pack.MSBuildTaskItem.Item.get -> Microsoft.Build.Framework.ITaskItem
NuGet.Build.Tasks.Pack.MSBuildTaskItem.MSBuildTaskItem(Microsoft.Build.Framework.ITaskItem item) -> void
NuGet.Build.Tasks.Pack.MSBuildTaskItem.Properties.get -> System.Collections.Generic.IReadOnlyList<string>
NuGet.Build.Tasks.Pack.PackTask
NuGet.Build.Tasks.Pack.PackTask.AllowedOutputExtensionsInPackageBuildOutputFolder.get -> string[]
NuGet.Build.Tasks.Pack.PackTask.AllowedOutputExtensionsInPackageBuildOutputFolder.set -> void
NuGet.Build.Tasks.Pack.PackTask.AllowedOutputExtensionsInSymbolsPackageBuildOutputFolder.get -> string[]
NuGet.Build.Tasks.Pack.PackTask.AllowedOutputExtensionsInSymbolsPackageBuildOutputFolder.set -> void
NuGet.Build.Tasks.Pack.PackTask.AssemblyName.get -> string
NuGet.Build.Tasks.Pack.PackTask.AssemblyName.set -> void
NuGet.Build.Tasks.Pack.PackTask.Authors.get -> string[]
NuGet.Build.Tasks.Pack.PackTask.Authors.set -> void
NuGet.Build.Tasks.Pack.PackTask.BuildOutputFolders.get -> string[]
NuGet.Build.Tasks.Pack.PackTask.BuildOutputFolders.set -> void
NuGet.Build.Tasks.Pack.PackTask.BuildOutputInPackage.get -> Microsoft.Build.Framework.ITaskItem[]
NuGet.Build.Tasks.Pack.PackTask.BuildOutputInPackage.set -> void
NuGet.Build.Tasks.Pack.PackTask.ContentTargetFolders.get -> string[]
NuGet.Build.Tasks.Pack.PackTask.ContentTargetFolders.set -> void
NuGet.Build.Tasks.Pack.PackTask.ContinuePackingAfterGeneratingNuspec.get -> bool
NuGet.Build.Tasks.Pack.PackTask.ContinuePackingAfterGeneratingNuspec.set -> void
NuGet.Build.Tasks.Pack.PackTask.Copyright.get -> string
NuGet.Build.Tasks.Pack.PackTask.Copyright.set -> void
NuGet.Build.Tasks.Pack.PackTask.Description.get -> string
NuGet.Build.Tasks.Pack.PackTask.Description.set -> void
NuGet.Build.Tasks.Pack.PackTask.Deterministic.get -> bool
NuGet.Build.Tasks.Pack.PackTask.Deterministic.set -> void
NuGet.Build.Tasks.Pack.PackTask.DevelopmentDependency.get -> bool
NuGet.Build.Tasks.Pack.PackTask.DevelopmentDependency.set -> void
NuGet.Build.Tasks.Pack.PackTask.FrameworkAssemblyReferences.get -> Microsoft.Build.Framework.ITaskItem[]
NuGet.Build.Tasks.Pack.PackTask.FrameworkAssemblyReferences.set -> void
NuGet.Build.Tasks.Pack.PackTask.FrameworksWithSuppressedDependencies.get -> Microsoft.Build.Framework.ITaskItem[]
NuGet.Build.Tasks.Pack.PackTask.FrameworksWithSuppressedDependencies.set -> void
NuGet.Build.Tasks.Pack.PackTask.IconUrl.get -> string
NuGet.Build.Tasks.Pack.PackTask.IconUrl.set -> void
NuGet.Build.Tasks.Pack.PackTask.IncludeBuildOutput.get -> bool
NuGet.Build.Tasks.Pack.PackTask.IncludeBuildOutput.set -> void
NuGet.Build.Tasks.Pack.PackTask.IncludeSource.get -> bool
NuGet.Build.Tasks.Pack.PackTask.IncludeSource.set -> void
NuGet.Build.Tasks.Pack.PackTask.IncludeSymbols.get -> bool
NuGet.Build.Tasks.Pack.PackTask.IncludeSymbols.set -> void
NuGet.Build.Tasks.Pack.PackTask.InstallPackageToOutputPath.get -> bool
NuGet.Build.Tasks.Pack.PackTask.InstallPackageToOutputPath.set -> void
NuGet.Build.Tasks.Pack.PackTask.IsTool.get -> bool
NuGet.Build.Tasks.Pack.PackTask.IsTool.set -> void
NuGet.Build.Tasks.Pack.PackTask.LicenseUrl.get -> string
NuGet.Build.Tasks.Pack.PackTask.LicenseUrl.set -> void
NuGet.Build.Tasks.Pack.PackTask.Logger.get -> NuGet.Common.ILogger
NuGet.Build.Tasks.Pack.PackTask.MinClientVersion.get -> string
NuGet.Build.Tasks.Pack.PackTask.MinClientVersion.set -> void
NuGet.Build.Tasks.Pack.PackTask.NoDefaultExcludes.get -> bool
NuGet.Build.Tasks.Pack.PackTask.NoDefaultExcludes.set -> void
NuGet.Build.Tasks.Pack.PackTask.NoPackageAnalysis.get -> bool
NuGet.Build.Tasks.Pack.PackTask.NoPackageAnalysis.set -> void
NuGet.Build.Tasks.Pack.PackTask.NoWarn.get -> string
NuGet.Build.Tasks.Pack.PackTask.NoWarn.set -> void
NuGet.Build.Tasks.Pack.PackTask.NuspecBasePath.get -> string
NuGet.Build.Tasks.Pack.PackTask.NuspecBasePath.set -> void
NuGet.Build.Tasks.Pack.PackTask.NuspecFile.get -> string
NuGet.Build.Tasks.Pack.PackTask.NuspecFile.set -> void
NuGet.Build.Tasks.Pack.PackTask.NuspecOutputPath.get -> string
NuGet.Build.Tasks.Pack.PackTask.NuspecOutputPath.set -> void
NuGet.Build.Tasks.Pack.PackTask.NuspecProperties.get -> string[]
NuGet.Build.Tasks.Pack.PackTask.NuspecProperties.set -> void
NuGet.Build.Tasks.Pack.PackTask.OutputFileNamesWithoutVersion.get -> bool
NuGet.Build.Tasks.Pack.PackTask.OutputFileNamesWithoutVersion.set -> void
NuGet.Build.Tasks.Pack.PackTask.PackItem.get -> Microsoft.Build.Framework.ITaskItem
NuGet.Build.Tasks.Pack.PackTask.PackItem.set -> void
NuGet.Build.Tasks.Pack.PackTask.PackTask() -> void
NuGet.Build.Tasks.Pack.PackTask.PackTaskLogic.get -> NuGet.Build.Tasks.Pack.IPackTaskLogic
NuGet.Build.Tasks.Pack.PackTask.PackTaskLogic.set -> void
NuGet.Build.Tasks.Pack.PackTask.PackageFiles.get -> Microsoft.Build.Framework.ITaskItem[]
NuGet.Build.Tasks.Pack.PackTask.PackageFiles.set -> void
NuGet.Build.Tasks.Pack.PackTask.PackageFilesToExclude.get -> Microsoft.Build.Framework.ITaskItem[]
NuGet.Build.Tasks.Pack.PackTask.PackageFilesToExclude.set -> void
NuGet.Build.Tasks.Pack.PackTask.PackageIcon.get -> string
NuGet.Build.Tasks.Pack.PackTask.PackageIcon.set -> void
NuGet.Build.Tasks.Pack.PackTask.PackageId.get -> string
NuGet.Build.Tasks.Pack.PackTask.PackageId.set -> void
NuGet.Build.Tasks.Pack.PackTask.PackageLicenseExpression.get -> string
NuGet.Build.Tasks.Pack.PackTask.PackageLicenseExpression.set -> void
NuGet.Build.Tasks.Pack.PackTask.PackageLicenseExpressionVersion.get -> string
NuGet.Build.Tasks.Pack.PackTask.PackageLicenseExpressionVersion.set -> void
NuGet.Build.Tasks.Pack.PackTask.PackageLicenseFile.get -> string
NuGet.Build.Tasks.Pack.PackTask.PackageLicenseFile.set -> void
NuGet.Build.Tasks.Pack.PackTask.PackageOutputPath.get -> string
NuGet.Build.Tasks.Pack.PackTask.PackageOutputPath.set -> void
NuGet.Build.Tasks.Pack.PackTask.PackageTypes.get -> string[]
NuGet.Build.Tasks.Pack.PackTask.PackageTypes.set -> void
NuGet.Build.Tasks.Pack.PackTask.PackageVersion.get -> string
NuGet.Build.Tasks.Pack.PackTask.PackageVersion.set -> void
NuGet.Build.Tasks.Pack.PackTask.ProjectReferencesWithVersions.get -> Microsoft.Build.Framework.ITaskItem[]
NuGet.Build.Tasks.Pack.PackTask.ProjectReferencesWithVersions.set -> void
NuGet.Build.Tasks.Pack.PackTask.ProjectUrl.get -> string
NuGet.Build.Tasks.Pack.PackTask.ProjectUrl.set -> void
NuGet.Build.Tasks.Pack.PackTask.ReleaseNotes.get -> string
NuGet.Build.Tasks.Pack.PackTask.ReleaseNotes.set -> void
NuGet.Build.Tasks.Pack.PackTask.RepositoryBranch.get -> string
NuGet.Build.Tasks.Pack.PackTask.RepositoryBranch.set -> void
NuGet.Build.Tasks.Pack.PackTask.RepositoryCommit.get -> string
NuGet.Build.Tasks.Pack.PackTask.RepositoryCommit.set -> void
NuGet.Build.Tasks.Pack.PackTask.RepositoryType.get -> string
NuGet.Build.Tasks.Pack.PackTask.RepositoryType.set -> void
NuGet.Build.Tasks.Pack.PackTask.RepositoryUrl.get -> string
NuGet.Build.Tasks.Pack.PackTask.RepositoryUrl.set -> void
NuGet.Build.Tasks.Pack.PackTask.RequireLicenseAcceptance.get -> bool
NuGet.Build.Tasks.Pack.PackTask.RequireLicenseAcceptance.set -> void
NuGet.Build.Tasks.Pack.PackTask.RestoreOutputPath.get -> string
NuGet.Build.Tasks.Pack.PackTask.RestoreOutputPath.set -> void
NuGet.Build.Tasks.Pack.PackTask.Serviceable.get -> bool
NuGet.Build.Tasks.Pack.PackTask.Serviceable.set -> void
NuGet.Build.Tasks.Pack.PackTask.SourceFiles.get -> Microsoft.Build.Framework.ITaskItem[]
NuGet.Build.Tasks.Pack.PackTask.SourceFiles.set -> void
NuGet.Build.Tasks.Pack.PackTask.SymbolPackageFormat.get -> string
NuGet.Build.Tasks.Pack.PackTask.SymbolPackageFormat.set -> void
NuGet.Build.Tasks.Pack.PackTask.Tags.get -> string[]
NuGet.Build.Tasks.Pack.PackTask.Tags.set -> void
NuGet.Build.Tasks.Pack.PackTask.TargetFrameworks.get -> string[]
NuGet.Build.Tasks.Pack.PackTask.TargetFrameworks.set -> void
NuGet.Build.Tasks.Pack.PackTask.TargetPathsToSymbols.get -> Microsoft.Build.Framework.ITaskItem[]
NuGet.Build.Tasks.Pack.PackTask.TargetPathsToSymbols.set -> void
NuGet.Build.Tasks.Pack.PackTask.Title.get -> string
NuGet.Build.Tasks.Pack.PackTask.Title.set -> void
NuGet.Build.Tasks.Pack.PackTask.TreatWarningsAsErrors.get -> string
NuGet.Build.Tasks.Pack.PackTask.TreatWarningsAsErrors.set -> void
NuGet.Build.Tasks.Pack.PackTask.WarningsAsErrors.get -> string
NuGet.Build.Tasks.Pack.PackTask.WarningsAsErrors.set -> void
NuGet.Build.Tasks.Pack.PackTaskLogic
NuGet.Build.Tasks.Pack.PackTaskLogic.BuildPackage(NuGet.Commands.PackCommandRunner runner) -> bool
NuGet.Build.Tasks.Pack.PackTaskLogic.GetPackArgs(NuGet.Build.Tasks.Pack.IPackTaskRequest<NuGet.Commands.IMSBuildItem> request) -> NuGet.Commands.PackArgs
NuGet.Build.Tasks.Pack.PackTaskLogic.GetPackCommandRunner(NuGet.Build.Tasks.Pack.IPackTaskRequest<NuGet.Commands.IMSBuildItem> request, NuGet.Commands.PackArgs packArgs, NuGet.Packaging.PackageBuilder packageBuilder) -> NuGet.Commands.PackCommandRunner
NuGet.Build.Tasks.Pack.PackTaskLogic.GetPackageBuilder(NuGet.Build.Tasks.Pack.IPackTaskRequest<NuGet.Commands.IMSBuildItem> request) -> NuGet.Packaging.PackageBuilder
NuGet.Build.Tasks.Pack.PackTaskLogic.PackTaskLogic() -> void
NuGet.Build.Tasks.Pack.PackTaskRequest
NuGet.Build.Tasks.Pack.PackTaskRequest.AllowedOutputExtensionsInPackageBuildOutputFolder.get -> string[]
NuGet.Build.Tasks.Pack.PackTaskRequest.AllowedOutputExtensionsInPackageBuildOutputFolder.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.AllowedOutputExtensionsInSymbolsPackageBuildOutputFolder.get -> string[]
NuGet.Build.Tasks.Pack.PackTaskRequest.AllowedOutputExtensionsInSymbolsPackageBuildOutputFolder.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.AssemblyName.get -> string
NuGet.Build.Tasks.Pack.PackTaskRequest.AssemblyName.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.Authors.get -> string[]
NuGet.Build.Tasks.Pack.PackTaskRequest.Authors.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.BuildOutputFolders.get -> string[]
NuGet.Build.Tasks.Pack.PackTaskRequest.BuildOutputFolders.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.BuildOutputInPackage.get -> NuGet.Commands.IMSBuildItem[]
NuGet.Build.Tasks.Pack.PackTaskRequest.BuildOutputInPackage.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.ContentTargetFolders.get -> string[]
NuGet.Build.Tasks.Pack.PackTaskRequest.ContentTargetFolders.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.ContinuePackingAfterGeneratingNuspec.get -> bool
NuGet.Build.Tasks.Pack.PackTaskRequest.ContinuePackingAfterGeneratingNuspec.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.Copyright.get -> string
NuGet.Build.Tasks.Pack.PackTaskRequest.Copyright.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.Description.get -> string
NuGet.Build.Tasks.Pack.PackTaskRequest.Description.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.Deterministic.get -> bool
NuGet.Build.Tasks.Pack.PackTaskRequest.Deterministic.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.DevelopmentDependency.get -> bool
NuGet.Build.Tasks.Pack.PackTaskRequest.DevelopmentDependency.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.FrameworkAssemblyReferences.get -> NuGet.Commands.IMSBuildItem[]
NuGet.Build.Tasks.Pack.PackTaskRequest.FrameworkAssemblyReferences.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.FrameworksWithSuppressedDependencies.get -> NuGet.Commands.IMSBuildItem[]
NuGet.Build.Tasks.Pack.PackTaskRequest.FrameworksWithSuppressedDependencies.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.IconUrl.get -> string
NuGet.Build.Tasks.Pack.PackTaskRequest.IconUrl.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.IncludeBuildOutput.get -> bool
NuGet.Build.Tasks.Pack.PackTaskRequest.IncludeBuildOutput.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.IncludeSource.get -> bool
NuGet.Build.Tasks.Pack.PackTaskRequest.IncludeSource.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.IncludeSymbols.get -> bool
NuGet.Build.Tasks.Pack.PackTaskRequest.IncludeSymbols.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.InstallPackageToOutputPath.get -> bool
NuGet.Build.Tasks.Pack.PackTaskRequest.InstallPackageToOutputPath.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.IsTool.get -> bool
NuGet.Build.Tasks.Pack.PackTaskRequest.IsTool.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.LicenseUrl.get -> string
NuGet.Build.Tasks.Pack.PackTaskRequest.LicenseUrl.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.Logger.get -> NuGet.Common.ILogger
NuGet.Build.Tasks.Pack.PackTaskRequest.Logger.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.MinClientVersion.get -> string
NuGet.Build.Tasks.Pack.PackTaskRequest.MinClientVersion.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.NoDefaultExcludes.get -> bool
NuGet.Build.Tasks.Pack.PackTaskRequest.NoDefaultExcludes.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.NoPackageAnalysis.get -> bool
NuGet.Build.Tasks.Pack.PackTaskRequest.NoPackageAnalysis.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.NoWarn.get -> string
NuGet.Build.Tasks.Pack.PackTaskRequest.NoWarn.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.NuspecBasePath.get -> string
NuGet.Build.Tasks.Pack.PackTaskRequest.NuspecBasePath.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.NuspecFile.get -> string
NuGet.Build.Tasks.Pack.PackTaskRequest.NuspecFile.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.NuspecOutputPath.get -> string
NuGet.Build.Tasks.Pack.PackTaskRequest.NuspecOutputPath.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.NuspecProperties.get -> string[]
NuGet.Build.Tasks.Pack.PackTaskRequest.NuspecProperties.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.OutputFileNamesWithoutVersion.get -> bool
NuGet.Build.Tasks.Pack.PackTaskRequest.OutputFileNamesWithoutVersion.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.PackItem.get -> NuGet.Commands.IMSBuildItem
NuGet.Build.Tasks.Pack.PackTaskRequest.PackItem.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.PackTaskRequest() -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.PackageFiles.get -> NuGet.Commands.IMSBuildItem[]
NuGet.Build.Tasks.Pack.PackTaskRequest.PackageFiles.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.PackageFilesToExclude.get -> NuGet.Commands.IMSBuildItem[]
NuGet.Build.Tasks.Pack.PackTaskRequest.PackageFilesToExclude.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.PackageIcon.get -> string
NuGet.Build.Tasks.Pack.PackTaskRequest.PackageIcon.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.PackageId.get -> string
NuGet.Build.Tasks.Pack.PackTaskRequest.PackageId.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.PackageLicenseExpression.get -> string
NuGet.Build.Tasks.Pack.PackTaskRequest.PackageLicenseExpression.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.PackageLicenseExpressionVersion.get -> string
NuGet.Build.Tasks.Pack.PackTaskRequest.PackageLicenseExpressionVersion.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.PackageLicenseFile.get -> string
NuGet.Build.Tasks.Pack.PackTaskRequest.PackageLicenseFile.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.PackageOutputPath.get -> string
NuGet.Build.Tasks.Pack.PackTaskRequest.PackageOutputPath.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.PackageTypes.get -> string[]
NuGet.Build.Tasks.Pack.PackTaskRequest.PackageTypes.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.PackageVersion.get -> string
NuGet.Build.Tasks.Pack.PackTaskRequest.PackageVersion.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.ProjectReferencesWithVersions.get -> NuGet.Commands.IMSBuildItem[]
NuGet.Build.Tasks.Pack.PackTaskRequest.ProjectReferencesWithVersions.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.ProjectUrl.get -> string
NuGet.Build.Tasks.Pack.PackTaskRequest.ProjectUrl.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.ReleaseNotes.get -> string
NuGet.Build.Tasks.Pack.PackTaskRequest.ReleaseNotes.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.RepositoryBranch.get -> string
NuGet.Build.Tasks.Pack.PackTaskRequest.RepositoryBranch.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.RepositoryCommit.get -> string
NuGet.Build.Tasks.Pack.PackTaskRequest.RepositoryCommit.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.RepositoryType.get -> string
NuGet.Build.Tasks.Pack.PackTaskRequest.RepositoryType.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.RepositoryUrl.get -> string
NuGet.Build.Tasks.Pack.PackTaskRequest.RepositoryUrl.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.RequireLicenseAcceptance.get -> bool
NuGet.Build.Tasks.Pack.PackTaskRequest.RequireLicenseAcceptance.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.RestoreOutputPath.get -> string
NuGet.Build.Tasks.Pack.PackTaskRequest.RestoreOutputPath.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.Serviceable.get -> bool
NuGet.Build.Tasks.Pack.PackTaskRequest.Serviceable.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.SourceFiles.get -> NuGet.Commands.IMSBuildItem[]
NuGet.Build.Tasks.Pack.PackTaskRequest.SourceFiles.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.SymbolPackageFormat.get -> string
NuGet.Build.Tasks.Pack.PackTaskRequest.SymbolPackageFormat.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.Tags.get -> string[]
NuGet.Build.Tasks.Pack.PackTaskRequest.Tags.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.TargetFrameworks.get -> string[]
NuGet.Build.Tasks.Pack.PackTaskRequest.TargetFrameworks.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.TargetPathsToSymbols.get -> NuGet.Commands.IMSBuildItem[]
NuGet.Build.Tasks.Pack.PackTaskRequest.TargetPathsToSymbols.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.Title.get -> string
NuGet.Build.Tasks.Pack.PackTaskRequest.Title.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.TreatWarningsAsErrors.get -> string
NuGet.Build.Tasks.Pack.PackTaskRequest.TreatWarningsAsErrors.set -> void
NuGet.Build.Tasks.Pack.PackTaskRequest.WarningsAsErrors.get -> string
NuGet.Build.Tasks.Pack.PackTaskRequest.WarningsAsErrors.set -> void
override NuGet.Build.MSBuildLogger.Log(NuGet.Common.ILogMessage message) -> void
override NuGet.Build.MSBuildLogger.LogAsync(NuGet.Common.ILogMessage message) -> System.Threading.Tasks.Task
override NuGet.Build.Tasks.GetProjectTargetFrameworksTask.Execute() -> bool
override NuGet.Build.Tasks.Pack.GetPackOutputItemsTask.Execute() -> bool
override NuGet.Build.Tasks.Pack.GetProjectReferencesFromAssetsFileTask.Execute() -> bool
override NuGet.Build.Tasks.Pack.IsPackableFalseWarningTask.Execute() -> bool
override NuGet.Build.Tasks.Pack.MSBuildTaskItem.ToString() -> string
override NuGet.Build.Tasks.Pack.PackTask.Execute() -> bool
