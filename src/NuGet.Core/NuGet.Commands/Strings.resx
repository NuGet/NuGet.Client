<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Log_CheckingCompatibility" xml:space="preserve">
    <value>Checking compatibility of packages on {0}.</value>
  </data>
  <data name="Log_CheckingPackageCompatibility" xml:space="preserve">
    <value>Checking compatibility for {0} {1} with {2}.</value>
  </data>
  <data name="Log_FailedToResolveConflicts" xml:space="preserve">
    <value>Failed to resolve conflicts for {0}.</value>
  </data>
  <data name="Log_GeneratingMsBuildFile" xml:space="preserve">
    <value>Generating MSBuild file {0}.</value>
  </data>
  <data name="Log_InstallingPackage" xml:space="preserve">
    <value>Installing {0} {1}.</value>
  </data>
  <data name="Log_MergingRuntimes" xml:space="preserve">
    <value>Merging in runtimes defined in {0}.</value>
  </data>
  <data name="Log_MissingImplementationFx" xml:space="preserve">
    <value>{0} {1} provides a compile-time reference assembly for {2} on {3}, but there is no compatible run-time assembly.</value>
  </data>
  <data name="Log_MissingImplementationFxRuntime" xml:space="preserve">
    <value>{0} {1} provides a compile-time reference assembly for {2} on {3}, but there is no run-time assembly compatible with {4}.</value>
  </data>
  <data name="Log_PackageNotCompatibleWithFx" xml:space="preserve">
    <value>{0} {1} is not compatible with {2}.</value>
  </data>
  <data name="Log_PackagesAreCompatible" xml:space="preserve">
    <value>All packages are compatible with {0}.</value>
  </data>
  <data name="Log_PackagesIncompatible" xml:space="preserve">
    <value>Some packages are not compatible with {0}.</value>
  </data>
  <data name="Log_ProjectDoesNotSpecifyTargetFrameworks" xml:space="preserve">
    <value>The project '{0}' does not specify any target frameworks in '{1}'.</value>
  </data>
  <data name="Log_ResolvingConflicts" xml:space="preserve">
    <value>Resolving conflicts for {0}...</value>
  </data>
  <data name="Log_RestoringPackages" xml:space="preserve">
    <value>Restoring packages for {0}...</value>
  </data>
  <data name="Log_RestoringPackagesForCompat" xml:space="preserve">
    <value>Restoring packages for {0} to determine compatibility...</value>
  </data>
  <data name="Log_ScanningForRuntimeJson" xml:space="preserve">
    <value>Scanning packages for runtime.json files...</value>
  </data>
  <data name="Log_SkippingRuntimeWalk" xml:space="preserve">
    <value>Skipping runtime dependency walk, no runtimes defined in project.json.</value>
  </data>
  <data name="Log_UnresolvedDependency" xml:space="preserve">
    <value>Unable to resolve {0} {1} for {2}.</value>
  </data>
  <data name="Log_UnknownCompatibilityProfile" xml:space="preserve">
    <value>Unknown Compatibility Profile: {0}</value>
  </data>
  <data name="Log_UsingSource" xml:space="preserve">
    <value>Using source {0}.</value>
  </data>
  <data name="MSBuildWarning_MultiTarget" xml:space="preserve">
    <value>Packages containing MSBuild targets and props files cannot be fully installed in projects targeting multiple frameworks. The MSBuild targets and props files have been ignored.</value>
  </data>
  <data name="Log_ResolverConflict" xml:space="preserve">
    <value>Unable to satisfy conflicting requests for '{0}': {1}</value>
  </data>
  <data name="ResolverRequest_ToStringFormat" xml:space="preserve">
    <value>{0} (via {1})</value>
  </data>
  <data name="Log_LockFileMissingLibraryForTargetLibrary" xml:space="preserve">
    <value>{0} {1} is specified in the Lock File target for {2} but is not present in the top-level Libraries list.</value>
  </data>
  <data name="Log_LockFileOutOfDate" xml:space="preserve">
    <value>The lock file is out-of-date relative to the project file. Regenerating the lock file and re-locking.</value>
  </data>
  <data name="Log_DependencyBumpedUp" xml:space="preserve">
    <value>Dependency specified was {0} {1} but ended up with {2} {3}.</value>
  </data>
  <data name="Log_ImportsFallbackWarning" xml:space="preserve">
    <value>Package '{0}' was restored using '{1}' instead the project target framework '{2}'. This may cause compatibility problems.</value>
  </data>
  <data name="Log_CycleDetected" xml:space="preserve">
    <value>Cycle detected:</value>
  </data>
  <data name="Log_DowngradeWarning" xml:space="preserve">
    <value>Detected package downgrade: {0} from {1} to {2}</value>
  </data>
  <data name="Log_VersionConflict" xml:space="preserve">
    <value>Version conflict detected for {0}.</value>
  </data>
  <data name="Error_UnknownBuildAction" xml:space="preserve">
    <value>Package '{0}' specifies an invalid build action '{1}' for file '{2}'.</value>
  </data>
  <data name="Log_ConfigFileSummary" xml:space="preserve">
    <value>NuGet Config files used:</value>
  </data>
  <data name="Log_ErrorSummary" xml:space="preserve">
    <value>Errors in {0}</value>
  </data>
  <data name="Log_FeedsUsedSummary" xml:space="preserve">
    <value>Feeds used:</value>
  </data>
  <data name="Log_InstalledSummary" xml:space="preserve">
    <value>Installed:</value>
  </data>
  <data name="Log_InstalledSummaryCount" xml:space="preserve">
    <value>{0} package(s) to {1}</value>
  </data>
  <data name="Log_Committing" xml:space="preserve">
    <value>Committing restore...</value>
  </data>
  <data name="Log_FoundProjectRoot" xml:space="preserve">
    <value>Found project root directory: {0}.</value>
  </data>
  <data name="Log_LoadedProject" xml:space="preserve">
    <value>Loaded project {0} from {1}.</value>
  </data>
  <data name="Log_ReadingProject" xml:space="preserve">
    <value>Reading project file {0}.</value>
  </data>
  <data name="Log_RestoreComplete" xml:space="preserve">
    <value>Restore completed in {0}ms.</value>
  </data>
  <data name="Log_RestoreFailed" xml:space="preserve">
    <value>Restore failed in {0}ms.</value>
  </data>
  <data name="Log_RunningNonParallelRestore" xml:space="preserve">
    <value>Running non-parallel restore.</value>
  </data>
  <data name="Log_RunningParallelRestore" xml:space="preserve">
    <value>Running restore with {0} concurrent jobs.</value>
  </data>
  <data name="Log_UsingPackagesDirectory" xml:space="preserve">
    <value>Using packages directory: {0}.</value>
  </data>
  <data name="Error_InvalidCommandLineInput" xml:space="preserve">
    <value>Invalid input '{0}'. The file type was not recognized.</value>
  </data>
</root>