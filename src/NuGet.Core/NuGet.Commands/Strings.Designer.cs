//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NuGet.Commands {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("NuGet.Commands.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add file &apos;{0}&apos; to package as &apos;{1}&apos;.
        /// </summary>
        internal static string AddFileToPackage {
            get {
                return ResourceManager.GetString("AddFileToPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument cannot be null or empty..
        /// </summary>
        internal static string ArgumentCannotBeNullOrEmpty {
            get {
                return ResourceManager.GetString("ArgumentCannotBeNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Building project &apos;{0}&apos; for target framework &apos;{1}&apos;..
        /// </summary>
        internal static string BuildingProjectTargetingFramework {
            get {
                return ResourceManager.GetString("BuildingProjectTargetingFramework", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; cannot be used in conjunction with other values..
        /// </summary>
        internal static string CannotBeUsedWithOtherValues {
            get {
                return ResourceManager.GetString("CannotBeUsedWithOtherValues", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to add trusted author. The package is not author signed..
        /// </summary>
        internal static string Error_AuthorTrustExpectedAuthorSignature {
            get {
                return ResourceManager.GetString("Error_AuthorTrustExpectedAuthorSignature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to build using &apos;{0} {1}&apos;..
        /// </summary>
        internal static string Error_BuildFailed {
            get {
                return ResourceManager.GetString("Error_BuildFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot find version of msbuild..
        /// </summary>
        internal static string Error_CannotFindMsbuild {
            get {
                return ResourceManager.GetString("Error_CannotFindMsbuild", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trusted owners are not supported in trusted author items..
        /// </summary>
        internal static string Error_CannotTrustOwnersForAuthor {
            get {
                return ResourceManager.GetString("Error_CannotTrustOwnersForAuthor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not add the trusted signer: {0}.
        /// </summary>
        internal static string Error_CouldNotAdd {
            get {
                return ResourceManager.GetString("Error_CouldNotAdd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not list the trusted signers: {0}.
        /// </summary>
        internal static string Error_CouldNotList {
            get {
                return ResourceManager.GetString("Error_CouldNotList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not remove the trusted signer: {0}.
        /// </summary>
        internal static string Error_CouldNotRemove {
            get {
                return ResourceManager.GetString("Error_CouldNotRemove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not sync the trusted repository: {0}.
        /// </summary>
        internal static string Error_CouldNotSync {
            get {
                return ResourceManager.GetString("Error_CouldNotSync", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The repository with the service index &apos;{0}&apos; does not list any trusted certificates..
        /// </summary>
        internal static string Error_EmptyCertificateListInRepository {
            get {
                return ResourceManager.GetString("Error_EmptyCertificateListInRepository", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A source file was added with an empty path..
        /// </summary>
        internal static string Error_EmptySourceFilePath {
            get {
                return ResourceManager.GetString("Error_EmptySourceFilePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The project directory for the source file &apos;{0}&apos; could not be found..
        /// </summary>
        internal static string Error_EmptySourceFileProjectDirectory {
            get {
                return ResourceManager.GetString("Error_EmptySourceFileProjectDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package {0} {1} has a package type {2} that is incompatible with this project..
        /// </summary>
        internal static string Error_IncompatiblePackageType {
            get {
                return ResourceManager.GetString("Error_IncompatiblePackageType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please specify a nuspec, project.json, or project file to use.
        /// </summary>
        internal static string Error_InputFileNotSpecified {
            get {
                return ResourceManager.GetString("Error_InputFileNotSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PackageTargetFallback and AssetTargetFallback cannot be used together. Remove PackageTargetFallback(deprecated) references from the project environment..
        /// </summary>
        internal static string Error_InvalidATF {
            get {
                return ResourceManager.GetString("Error_InvalidATF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid certificate information from the service index &apos;{0}&apos;..
        /// </summary>
        internal static string Error_InvalidCertificateInformationFromServer {
            get {
                return ResourceManager.GetString("Error_InvalidCertificateInformationFromServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid combination of arguments..
        /// </summary>
        internal static string Error_InvalidCombinationOfArguments {
            get {
                return ResourceManager.GetString("Error_InvalidCombinationOfArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid input &apos;{0}&apos;. The file type was not recognized..
        /// </summary>
        internal static string Error_InvalidCommandLineInput {
            get {
                return ResourceManager.GetString("Error_InvalidCommandLineInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid input &apos;{0}&apos;. Valid file names are &apos;packages.config&apos; or &apos;packages.*.config&apos;..
        /// </summary>
        internal static string Error_InvalidCommandLineInputConfig {
            get {
                return ResourceManager.GetString("Error_InvalidCommandLineInputConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid input &apos;{0}&apos;. Valid file names are &apos;project.json&apos; or &apos;*.project.json&apos;..
        /// </summary>
        internal static string Error_InvalidCommandLineInputJson {
            get {
                return ResourceManager.GetString("Error_InvalidCommandLineInputJson", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package version constraints for &apos;{0}&apos; return a version range that is empty..
        /// </summary>
        internal static string Error_InvalidDependencyVersionConstraints {
            get {
                return ResourceManager.GetString("Error_InvalidDependencyVersionConstraints", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid restore input where RestorePackagesWithLockFile property is set to false but a packages lock file exists at {0}..
        /// </summary>
        internal static string Error_InvalidLockFileInput {
            get {
                return ResourceManager.GetString("Error_InvalidLockFileInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid project-package combination for {0} {1}. DotnetToolReference project style can only contain references of the DotnetTool type.
        /// </summary>
        internal static string Error_InvalidProjectPackageCombo {
            get {
                return ResourceManager.GetString("Error_InvalidProjectPackageCombo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided SymbolPackageFormat value {0} is invalid. Allowed values : &apos;snupkg&apos;, &apos;symbols.nupkg&apos;..
        /// </summary>
        internal static string Error_InvalidSymbolPackageFormat {
            get {
                return ResourceManager.GetString("Error_InvalidSymbolPackageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to build package because of an unsupported targetFramework value on &apos;{0}&apos;..
        /// </summary>
        internal static string Error_InvalidTargetFramework {
            get {
                return ResourceManager.GetString("Error_InvalidTargetFramework", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source parameter was not specified..
        /// </summary>
        internal static string Error_MissingSourceParameter {
            get {
                return ResourceManager.GetString("Error_MissingSourceParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package signature did not match any of the allowed certificate fingerprints..
        /// </summary>
        internal static string Error_NoMatchingCertificate {
            get {
                return ResourceManager.GetString("Error_NoMatchingCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find package {0}. No packages exist with this id in source(s): {1}.
        /// </summary>
        internal static string Error_NoPackageVersionsExist {
            get {
                return ResourceManager.GetString("Error_NoPackageVersionsExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find package {0} with version {1}.
        /// </summary>
        internal static string Error_NoPackageVersionsExistInRange {
            get {
                return ResourceManager.GetString("Error_NoPackageVersionsExistInRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No signature to be trusted was specified for the package &apos;{0}&apos;. Please specify either Author or Repository..
        /// </summary>
        internal static string Error_NoSignatureTrustedForPackage {
            get {
                return ResourceManager.GetString("Error_NoSignatureTrustedForPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to get package sources information..
        /// </summary>
        internal static string Error_NoSourcesInformation {
            get {
                return ResourceManager.GetString("Error_NoSourcesInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find a stable package {0} with version {1}.
        /// </summary>
        internal static string Error_NoStablePackageVersionsExist {
            get {
                return ResourceManager.GetString("Error_NoStablePackageVersionsExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not a supported hash algorithm..
        /// </summary>
        internal static string Error_NotSupportedHashAlgorithm {
            get {
                return ResourceManager.GetString("Error_NotSupportedHashAlgorithm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to build package. Ensure &apos;{0}&apos; includes assembly files. For help on building symbols package, visit {1}..
        /// </summary>
        internal static string Error_PackageCommandNoFilesForLibPackage {
            get {
                return ResourceManager.GetString("Error_PackageCommandNoFilesForLibPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to build package. Ensure &apos;{0}&apos; includes source and symbol files. For help on building symbols package, visit {1}..
        /// </summary>
        internal static string Error_PackageCommandNoFilesForSymbolsPackage {
            get {
                return ResourceManager.GetString("Error_PackageCommandNoFilesForSymbolsPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not an exact version like &apos;[1.0.0]&apos;. Only exact versions are allowed with PackageDownload..
        /// </summary>
        internal static string Error_PackageDownload_OnlyExactVersionsAreAllowed {
            get {
                return ResourceManager.GetString("Error_PackageDownload_OnlyExactVersionsAreAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package is not signed..
        /// </summary>
        internal static string Error_PackageNotSigned {
            get {
                return ResourceManager.GetString("Error_PackageNotSigned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package {0} sha512 validation failed. The package is different than the last restore..
        /// </summary>
        internal static string Error_PackageValidationFailed {
            get {
                return ResourceManager.GetString("Error_PackageValidationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to build package. {0}.
        /// </summary>
        internal static string Error_PackFailed {
            get {
                return ResourceManager.GetString("Error_PackFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error occurred when processing file &apos;{0}&apos;: {1}.
        /// </summary>
        internal static string Error_ProcessingNuspecFile {
            get {
                return ResourceManager.GetString("Error_ProcessingNuspecFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find project &apos;{0}&apos;. Check that the project reference is valid and that the project file exists..
        /// </summary>
        internal static string Error_ProjectDoesNotExist {
            get {
                return ResourceManager.GetString("Error_ProjectDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Project {0} must have a single package reference(s)..
        /// </summary>
        internal static string Error_ProjectWithIncorrectDependenciesCount {
            get {
                return ResourceManager.GetString("Error_ProjectWithIncorrectDependenciesCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property &apos;{0}&apos; should not be null or empty..
        /// </summary>
        internal static string Error_PropertyCannotBeNullOrEmpty {
            get {
                return ResourceManager.GetString("Error_PropertyCannotBeNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to add trusted repository. The package is not repository signed or countersigned..
        /// </summary>
        internal static string Error_RepoTrustExpectedRepoSignature {
            get {
                return ResourceManager.GetString("Error_RepoTrustExpectedRepoSignature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The packages lock file is inconsistent with the project dependencies so restore can&apos;t be run in locked mode. Please disable RestoreLockedMode MSBuild property or pass explicit --force-evaluate flag to run restore to update the lock file..
        /// </summary>
        internal static string Error_RestoreInLockedMode {
            get {
                return ResourceManager.GetString("Error_RestoreInLockedMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The repository service index &apos;{0}&apos; is not a valid HTTPS url..
        /// </summary>
        internal static string Error_ServiceIndexShouldBeHttps {
            get {
                return ResourceManager.GetString("Error_ServiceIndexShouldBeHttps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid tools package {0} {1}. Tools packages cannot contain more than one PackageType..
        /// </summary>
        internal static string Error_ToolsPackageWithExtraPackageTypes {
            get {
                return ResourceManager.GetString("Error_ToolsPackageWithExtraPackageTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A trusted author cannot have owners..
        /// </summary>
        internal static string Error_TrustedAuthorNoOwners {
            get {
                return ResourceManager.GetString("Error_TrustedAuthorNoOwners", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A trusted repository with the service index &apos;{0}&apos; already exists..
        /// </summary>
        internal static string Error_TrustedRepoAlreadyExists {
            get {
                return ResourceManager.GetString("Error_TrustedRepoAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A trusted repository &apos;{0}&apos; does not exist..
        /// </summary>
        internal static string Error_TrustedRepositoryDoesNotExist {
            get {
                return ResourceManager.GetString("Error_TrustedRepositoryDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A trusted signer &apos;{0}&apos; already exists..
        /// </summary>
        internal static string Error_TrustedSignerAlreadyExists {
            get {
                return ResourceManager.GetString("Error_TrustedSignerAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find project information for &apos;{0}&apos;. Inside Visual Studio, this may be because the project is unloaded or not part of current solution so please run a restore from command-line. Otherwise the project file may be invalid or missing targets required for restore..
        /// </summary>
        internal static string Error_UnableToFindProjectInfo {
            get {
                return ResourceManager.GetString("Error_UnableToFindProjectInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No build found in {0}. Use the -Build option or build the project..
        /// </summary>
        internal static string Error_UnableToLocateBuildOutput {
            get {
                return ResourceManager.GetString("Error_UnableToLocateBuildOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The folder &apos;{0}&apos; does not contain a project to restore..
        /// </summary>
        internal static string Error_UnableToLocateRestoreTarget {
            get {
                return ResourceManager.GetString("Error_UnableToLocateRestoreTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to find a project to restore in the folder &apos;{0}&apos;..
        /// </summary>
        internal static string Error_UnableToLocateRestoreTarget_Because {
            get {
                return ResourceManager.GetString("Error_UnableToLocateRestoreTarget_Because", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to sign package..
        /// </summary>
        internal static string Error_UnableToSignPackage {
            get {
                return ResourceManager.GetString("Error_UnableToSignPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source &apos;{0}&apos; does not exist or cannot be retrived..
        /// </summary>
        internal static string Error_UnavailableSource {
            get {
                return ResourceManager.GetString("Error_UnavailableSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package &apos;{0}&apos; specifies an invalid build action &apos;{1}&apos; for file &apos;{2}&apos;..
        /// </summary>
        internal static string Error_UnknownBuildAction {
            get {
                return ResourceManager.GetString("Error_UnknownBuildAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The trust target &apos;{0}&apos; is unsupported..
        /// </summary>
        internal static string Error_UnsupportedTrustTarget {
            get {
                return ResourceManager.GetString("Error_UnsupportedTrustTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to output resolved nuspec file because it would overwrite the original at &apos;{0}&apos;.
        /// </summary>
        internal static string Error_WriteResolvedNuSpecOverwriteOriginal {
            get {
                return ResourceManager.GetString("Error_WriteResolvedNuSpecOverwriteOriginal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid input &apos;{0}&apos;. XProj support has been removed. Support for XProj and standalone project.json files has been removed, to continue working with legacy projects use NuGet 3.5.x from https://nuget.org/downloads.
        /// </summary>
        internal static string Error_XPROJNotAllowed {
            get {
                return ResourceManager.GetString("Error_XPROJNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to build &apos;{0}&apos;..
        /// </summary>
        internal static string FailedToBuildProject {
            get {
                return ResourceManager.GetString("FailedToBuildProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File &apos;{0}&apos; is not added because the package already contains file &apos;{1}&apos;.
        /// </summary>
        internal static string FileNotAddedToPackage {
            get {
                return ResourceManager.GetString("FileNotAddedToPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Found {0} version(s) in {1} [ Nearest version: {2} ].
        /// </summary>
        internal static string FoundVersionsInSource {
            get {
                return ResourceManager.GetString("FoundVersionsInSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Found {0} version(s) in {1}.
        /// </summary>
        internal static string FoundVersionsInSourceWithoutMatch {
            get {
                return ResourceManager.GetString("FoundVersionsInSourceWithoutMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid restore input. {0}.
        /// </summary>
        internal static string InvalidRestoreInput {
            get {
                return ResourceManager.GetString("InvalidRestoreInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid restore input. {0} Input files: {1}..
        /// </summary>
        internal static string InvalidRestoreInputWithFiles {
            get {
                return ResourceManager.GetString("InvalidRestoreInputWithFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified source &apos;{0}&apos; is invalid. Please provide a valid source..
        /// </summary>
        internal static string InvalidSource {
            get {
                return ResourceManager.GetString("InvalidSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local resources cleared..
        /// </summary>
        internal static string LocalsCommand_ClearedSuccessful {
            get {
                return ResourceManager.GetString("LocalsCommand_ClearedSuccessful", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clearing local resources failed: Unable to delete one or more files..
        /// </summary>
        internal static string LocalsCommand_ClearFailed {
            get {
                return ResourceManager.GetString("LocalsCommand_ClearFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clearing NuGet cache: {0}.
        /// </summary>
        internal static string LocalsCommand_ClearingNuGetCache {
            get {
                return ResourceManager.GetString("LocalsCommand_ClearingNuGetCache", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clearing NuGet global packages folder: {0}.
        /// </summary>
        internal static string LocalsCommand_ClearingNuGetGlobalPackagesFolder {
            get {
                return ResourceManager.GetString("LocalsCommand_ClearingNuGetGlobalPackagesFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clearing NuGet HTTP cache: {0}.
        /// </summary>
        internal static string LocalsCommand_ClearingNuGetHttpCache {
            get {
                return ResourceManager.GetString("LocalsCommand_ClearingNuGetHttpCache", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clearing NuGet plugins cache: {0}.
        /// </summary>
        internal static string LocalsCommand_ClearingNuGetPluginsCache {
            get {
                return ResourceManager.GetString("LocalsCommand_ClearingNuGetPluginsCache", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clearing NuGet Temp cache: {0}.
        /// </summary>
        internal static string LocalsCommand_ClearingNuGetTempCache {
            get {
                return ResourceManager.GetString("LocalsCommand_ClearingNuGetTempCache", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to delete &apos;{0}&apos;..
        /// </summary>
        internal static string LocalsCommand_FailedToDeletePath {
            get {
                return ResourceManager.GetString("LocalsCommand_FailedToDeletePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to usage: NuGet locals &lt;all | http-cache | global-packages | temp | plugins-cache&gt; [--clear | -c | --list | -l]
        ///For more information, visit https://docs.nuget.org/docs/reference/command-line-reference.
        /// </summary>
        internal static string LocalsCommand_Help {
            get {
                return ResourceManager.GetString("LocalsCommand_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An invalid local resource name was provided. Please provide one of the following values: http-cache, temp, global-packages, all..
        /// </summary>
        internal static string LocalsCommand_InvalidLocalResourceName {
            get {
                return ResourceManager.GetString("LocalsCommand_InvalidLocalResourceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The location of local resource &apos;{0}&apos; is undefined..
        /// </summary>
        internal static string LocalsCommand_LocalResourcePathNotSet {
            get {
                return ResourceManager.GetString("LocalsCommand_LocalResourcePathNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local resources partially cleared..
        /// </summary>
        internal static string LocalsCommand_LocalsPartiallyCleared {
            get {
                return ResourceManager.GetString("LocalsCommand_LocalsPartiallyCleared", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The expected assets file for {0} does not exist, no-op is not possible. Continuing restore..
        /// </summary>
        internal static string Log_AssetsFileNotOnDisk {
            get {
                return ResourceManager.GetString("Log_AssetsFileNotOnDisk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking compatibility of packages on {0}..
        /// </summary>
        internal static string Log_CheckingCompatibility {
            get {
                return ResourceManager.GetString("Log_CheckingCompatibility", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking compatibility for {0} {1} with {2}..
        /// </summary>
        internal static string Log_CheckingPackageCompatibility {
            get {
                return ResourceManager.GetString("Log_CheckingPackageCompatibility", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Committing restore....
        /// </summary>
        internal static string Log_Committing {
            get {
                return ResourceManager.GetString("Log_Committing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NuGet Config files used:.
        /// </summary>
        internal static string Log_ConfigFileSummary {
            get {
                return ResourceManager.GetString("Log_ConfigFileSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package {0} was converted to original case in the packages directory..
        /// </summary>
        internal static string Log_ConvertedPackageToOriginalCase {
            get {
                return ResourceManager.GetString("Log_ConvertedPackageToOriginalCase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cycle detected..
        /// </summary>
        internal static string Log_CycleDetected {
            get {
                return ResourceManager.GetString("Log_CycleDetected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dependency specified was {0} {1} but ended up with {2} {3}..
        /// </summary>
        internal static string Log_DependencyBumpedUp {
            get {
                return ResourceManager.GetString("Log_DependencyBumpedUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Detected package downgrade: {0} from {1} to {2}. Reference the package directly from the project to select a different version..
        /// </summary>
        internal static string Log_DowngradeWarning {
            get {
                return ResourceManager.GetString("Log_DowngradeWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Errors in {0}.
        /// </summary>
        internal static string Log_ErrorSummary {
            get {
                return ResourceManager.GetString("Log_ErrorSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to resolve conflicts for {0}..
        /// </summary>
        internal static string Log_FailedToResolveConflicts {
            get {
                return ResourceManager.GetString("Log_FailedToResolveConflicts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Feeds used:.
        /// </summary>
        internal static string Log_FeedsUsedSummary {
            get {
                return ResourceManager.GetString("Log_FeedsUsedSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Found project root directory: {0}..
        /// </summary>
        internal static string Log_FoundProjectRoot {
            get {
                return ResourceManager.GetString("Log_FoundProjectRoot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} ({1}).
        /// </summary>
        internal static string Log_FrameworkDisplay {
            get {
                return ResourceManager.GetString("Log_FrameworkDisplay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} ({1}) / {2}.
        /// </summary>
        internal static string Log_FrameworkRIDDisplay {
            get {
                return ResourceManager.GetString("Log_FrameworkRIDDisplay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generating MSBuild file {0}..
        /// </summary>
        internal static string Log_GeneratingMsBuildFile {
            get {
                return ResourceManager.GetString("Log_GeneratingMsBuildFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package &apos;{0}&apos; was restored using &apos;{1}&apos; instead of the project target framework &apos;{2}&apos;. This package may not be fully compatible with your project..
        /// </summary>
        internal static string Log_ImportsFallbackWarning {
            get {
                return ResourceManager.GetString("Log_ImportsFallbackWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installed:.
        /// </summary>
        internal static string Log_InstalledSummary {
            get {
                return ResourceManager.GetString("Log_InstalledSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} package(s) to {1}.
        /// </summary>
        internal static string Log_InstalledSummaryCount {
            get {
                return ResourceManager.GetString("Log_InstalledSummaryCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing {0} {1}..
        /// </summary>
        internal static string Log_InstallingPackage {
            get {
                return ResourceManager.GetString("Log_InstallingPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} {1} is specified in the Lock File target for {2} but is not present in the top-level Libraries list..
        /// </summary>
        internal static string Log_LockFileMissingLibraryForTargetLibrary {
            get {
                return ResourceManager.GetString("Log_LockFileMissingLibraryForTargetLibrary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The lock file for {0} at location {1} does not exist, no-op is not possible. Continuing restore..
        /// </summary>
        internal static string Log_LockFileNotOnDisk {
            get {
                return ResourceManager.GetString("Log_LockFileNotOnDisk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The lock file is out-of-date relative to the project file. Regenerating the lock file and re-locking..
        /// </summary>
        internal static string Log_LockFileOutOfDate {
            get {
                return ResourceManager.GetString("Log_LockFileOutOfDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Merging in runtimes defined in {0}..
        /// </summary>
        internal static string Log_MergingRuntimes {
            get {
                return ResourceManager.GetString("Log_MergingRuntimes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} {1} provides a compile-time reference assembly for {2} on {3}, but there is no compatible run-time assembly..
        /// </summary>
        internal static string Log_MissingImplementationFx {
            get {
                return ResourceManager.GetString("Log_MissingImplementationFx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} {1} provides a compile-time reference assembly for {2} on {3}, but there is no run-time assembly compatible with {4}..
        /// </summary>
        internal static string Log_MissingImplementationFxRuntime {
            get {
                return ResourceManager.GetString("Log_MissingImplementationFxRuntime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not all packages are on disk for: {0}.
        /// </summary>
        internal static string Log_MissingPackagesOnDisk {
            get {
                return ResourceManager.GetString("Log_MissingPackagesOnDisk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added file &apos;{0}&apos;..
        /// </summary>
        internal static string Log_PackageCommandAddedFile {
            get {
                return ResourceManager.GetString("Log_PackageCommandAddedFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to build symbols package for &apos;{0}&apos;..
        /// </summary>
        internal static string Log_PackageCommandAttemptingToBuildSymbolsPackage {
            get {
                return ResourceManager.GetString("Log_PackageCommandAttemptingToBuildSymbolsPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install {0} to output path &apos;{1}&apos;.
        /// </summary>
        internal static string Log_PackageCommandInstallPackageToOutputPath {
            get {
                return ResourceManager.GetString("Log_PackageCommandInstallPackageToOutputPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully created package &apos;{0}&apos;..
        /// </summary>
        internal static string Log_PackageCommandSuccess {
            get {
                return ResourceManager.GetString("Log_PackageCommandSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package {0} {1} is not compatible with {2}..
        /// </summary>
        internal static string Log_PackageNotCompatibleWithFx {
            get {
                return ResourceManager.GetString("Log_PackageNotCompatibleWithFx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package {0} {1} does not support any target frameworks..
        /// </summary>
        internal static string Log_PackageNotCompatibleWithFx_NoSupports {
            get {
                return ResourceManager.GetString("Log_PackageNotCompatibleWithFx_NoSupports", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package {0} {1} supports:.
        /// </summary>
        internal static string Log_PackageNotCompatibleWithFx_Supports {
            get {
                return ResourceManager.GetString("Log_PackageNotCompatibleWithFx_Supports", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All packages and projects are compatible with {0}..
        /// </summary>
        internal static string Log_PackagesAndProjectsAreCompatible {
            get {
                return ResourceManager.GetString("Log_PackagesAndProjectsAreCompatible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One or more packages are incompatible with {0}..
        /// </summary>
        internal static string Log_PackagesIncompatible {
            get {
                return ResourceManager.GetString("Log_PackagesIncompatible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The project {0} does not specify any target frameworks in {1}..
        /// </summary>
        internal static string Log_ProjectDoesNotSpecifyTargetFrameworks {
            get {
                return ResourceManager.GetString("Log_ProjectDoesNotSpecifyTargetFrameworks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Project {0} is not compatible with {1}..
        /// </summary>
        internal static string Log_ProjectNotCompatibleWithFx {
            get {
                return ResourceManager.GetString("Log_ProjectNotCompatibleWithFx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Project {0} does not support any target frameworks..
        /// </summary>
        internal static string Log_ProjectNotCompatibleWithFx_NoSupports {
            get {
                return ResourceManager.GetString("Log_ProjectNotCompatibleWithFx_NoSupports", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Project {0} supports:.
        /// </summary>
        internal static string Log_ProjectNotCompatibleWithFx_Supports {
            get {
                return ResourceManager.GetString("Log_ProjectNotCompatibleWithFx_Supports", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One or more projects are incompatible with {0}..
        /// </summary>
        internal static string Log_ProjectsIncompatible {
            get {
                return ResourceManager.GetString("Log_ProjectsIncompatible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The props file for {0} at location {1} does not exist, no-op is not possible. Continuing restore..
        /// </summary>
        internal static string Log_PropsFileNotOnDisk {
            get {
                return ResourceManager.GetString("Log_PropsFileNotOnDisk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reading project file {0}..
        /// </summary>
        internal static string Log_ReadingProject {
            get {
                return ResourceManager.GetString("Log_ReadingProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to satisfy conflicting requests for &apos;{0}&apos;: {1} Framework: {2}.
        /// </summary>
        internal static string Log_ResolverConflict {
            get {
                return ResourceManager.GetString("Log_ResolverConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resolving conflicts for {0}....
        /// </summary>
        internal static string Log_ResolvingConflicts {
            get {
                return ResourceManager.GetString("Log_ResolvingConflicts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restore completed in {0} for {1}..
        /// </summary>
        internal static string Log_RestoreComplete {
            get {
                return ResourceManager.GetString("Log_RestoreComplete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restore completed in {0}..
        /// </summary>
        internal static string Log_RestoreCompleteDotnetTool {
            get {
                return ResourceManager.GetString("Log_RestoreCompleteDotnetTool", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restore failed in {0} for {1}..
        /// </summary>
        internal static string Log_RestoreFailed {
            get {
                return ResourceManager.GetString("Log_RestoreFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restore failed in {0}..
        /// </summary>
        internal static string Log_RestoreFailedDotnetTool {
            get {
                return ResourceManager.GetString("Log_RestoreFailedDotnetTool", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The restore inputs for &apos;{0}&apos; have changed. Continuing restore..
        /// </summary>
        internal static string Log_RestoreNoOpDGChanged {
            get {
                return ResourceManager.GetString("Log_RestoreNoOpDGChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The restore inputs for &apos;{0}&apos; have not changed. No further actions are required to complete the restore..
        /// </summary>
        internal static string Log_RestoreNoOpFinish {
            get {
                return ResourceManager.GetString("Log_RestoreNoOpFinish", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restoring packages for {0}....
        /// </summary>
        internal static string Log_RestoringPackages {
            get {
                return ResourceManager.GetString("Log_RestoringPackages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restoring packages for {0} to determine compatibility....
        /// </summary>
        internal static string Log_RestoringPackagesForCompat {
            get {
                return ResourceManager.GetString("Log_RestoringPackagesForCompat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Running non-parallel restore..
        /// </summary>
        internal static string Log_RunningNonParallelRestore {
            get {
                return ResourceManager.GetString("Log_RunningNonParallelRestore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Running restore with {0} concurrent jobs..
        /// </summary>
        internal static string Log_RunningParallelRestore {
            get {
                return ResourceManager.GetString("Log_RunningParallelRestore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scanning packages for runtime.json files....
        /// </summary>
        internal static string Log_ScanningForRuntimeJson {
            get {
                return ResourceManager.GetString("Log_ScanningForRuntimeJson", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assets file has not changed. Skipping assets file writing. Path: {0}.
        /// </summary>
        internal static string Log_SkippingAssetsFile {
            get {
                return ResourceManager.GetString("Log_SkippingAssetsFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No-Op restore. The cache will not be updated. Path: {0}.
        /// </summary>
        internal static string Log_SkippingCacheFile {
            get {
                return ResourceManager.GetString("Log_SkippingCacheFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skipping compatibility checks of the ridless graph for DotnetToolReference project type. This graph is not used. .
        /// </summary>
        internal static string Log_SkippingCompatibiilityCheckOnRidlessGraphForDotnetToolReferenceProject {
            get {
                return ResourceManager.GetString("Log_SkippingCompatibiilityCheckOnRidlessGraphForDotnetToolReferenceProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skipping runtime dependency walk, no runtimes defined in project.json..
        /// </summary>
        internal static string Log_SkippingRuntimeWalk {
            get {
                return ResourceManager.GetString("Log_SkippingRuntimeWalk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The targets file for {0} at location {1} does not exist, no-op is not possible. Continuing restore..
        /// </summary>
        internal static string Log_TargetsFileNotOnDisk {
            get {
                return ResourceManager.GetString("Log_TargetsFileNotOnDisk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tool assets file has not changed. Skipping assets file write. Path: {0}.
        /// </summary>
        internal static string Log_ToolSkippingAssetsFile {
            get {
                return ResourceManager.GetString("Log_ToolSkippingAssetsFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Writing tool assets file to disk. Path: {0}.
        /// </summary>
        internal static string Log_ToolWritingAssetsFile {
            get {
                return ResourceManager.GetString("Log_ToolWritingAssetsFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Writing tool cache file to disk. Path: {0}.
        /// </summary>
        internal static string Log_ToolWritingCacheFile {
            get {
                return ResourceManager.GetString("Log_ToolWritingCacheFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown Compatibility Profile: {0}.
        /// </summary>
        internal static string Log_UnknownCompatibilityProfile {
            get {
                return ResourceManager.GetString("Log_UnknownCompatibilityProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to resolve &apos;{0}&apos; for &apos;{1}&apos;..
        /// </summary>
        internal static string Log_UnresolvedDependency {
            get {
                return ResourceManager.GetString("Log_UnresolvedDependency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Using packages directory: {0}..
        /// </summary>
        internal static string Log_UsingPackagesDirectory {
            get {
                return ResourceManager.GetString("Log_UsingPackagesDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Using source {0}..
        /// </summary>
        internal static string Log_UsingSource {
            get {
                return ResourceManager.GetString("Log_UsingSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version conflict detected for {0}. Install/reference {1} directly to project {2} to resolve this issue..
        /// </summary>
        internal static string Log_VersionConflict {
            get {
                return ResourceManager.GetString("Log_VersionConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Writing assets file to disk. Path: {0}.
        /// </summary>
        internal static string Log_WritingAssetsFile {
            get {
                return ResourceManager.GetString("Log_WritingAssetsFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Writing cache file to disk. Path: {0}.
        /// </summary>
        internal static string Log_WritingCacheFile {
            get {
                return ResourceManager.GetString("Log_WritingCacheFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Writing packages lock file at disk. Path: {0}.
        /// </summary>
        internal static string Log_WritingPackagesLockFile {
            get {
                return ResourceManager.GetString("Log_WritingPackagesLockFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing required property &apos;{0}&apos;..
        /// </summary>
        internal static string MissingRequiredProperty {
            get {
                return ResourceManager.GetString("MissingRequiredProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing required property &apos;{0}&apos; for project type &apos;{1}&apos;..
        /// </summary>
        internal static string MissingRequiredPropertyForProjectType {
            get {
                return ResourceManager.GetString("MissingRequiredPropertyForProjectType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Packages containing MSBuild targets and props files cannot be fully installed in projects targeting multiple frameworks. The MSBuild targets and props files have been ignored..
        /// </summary>
        internal static string MSBuildWarning_MultiTarget {
            get {
                return ResourceManager.GetString("MSBuildWarning_MultiTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Properties &apos;{0}&apos;:&apos;{1}&apos; and &apos;{2}&apos;:&apos;{3}&apos; do not match..
        /// </summary>
        internal static string NonMatchingProperties {
            get {
                return ResourceManager.GetString("NonMatchingProperties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are no trusted signers..
        /// </summary>
        internal static string NoTrustedSigners {
            get {
                return ResourceManager.GetString("NoTrustedSigners", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No trusted signers with the name: &apos;{0}&apos; were found..
        /// </summary>
        internal static string NoTrustedSignersMatching {
            get {
                return ResourceManager.GetString("NoTrustedSignersMatching", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to https://docs.nuget.org/.
        /// </summary>
        internal static string NuGetDocs {
            get {
                return ResourceManager.GetString("NuGetDocs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File from dependency is not changed. File &apos;{0}&apos; is not added..
        /// </summary>
        internal static string PackageCommandFileFromDependencyIsChanged {
            get {
                return ResourceManager.GetString("PackageCommandFileFromDependencyIsChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File from dependency is not changed. File &apos;{0}&apos; is not added..
        /// </summary>
        internal static string PackageCommandFileFromDependencyIsNotChanged {
            get {
                return ResourceManager.GetString("PackageCommandFileFromDependencyIsNotChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Packing files from &apos;{0}&apos;..
        /// </summary>
        internal static string PackagingFilesFromOutputPath {
            get {
                return ResourceManager.GetString("PackagingFilesFromOutputPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Persisting restore input to &apos;{0}&apos;..
        /// </summary>
        internal static string PersistDGFile {
            get {
                return ResourceManager.GetString("PersistDGFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid input combination. Property &apos;{0}&apos; is not allowed..
        /// </summary>
        internal static string PropertyNotAllowed {
            get {
                return ResourceManager.GetString("PropertyNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid input combination. Property &apos;{0}&apos; is not allowed for project type &apos;{1}&apos;..
        /// </summary>
        internal static string PropertyNotAllowedForProjectType {
            get {
                return ResourceManager.GetString("PropertyNotAllowedForProjectType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Registered trusted signers:.
        /// </summary>
        internal static string RegsiteredTrustedSigners {
            get {
                return ResourceManager.GetString("RegsiteredTrustedSigners", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} (via {1}).
        /// </summary>
        internal static string ResolverRequest_ToStringFormat {
            get {
                return ResourceManager.GetString("ResolverRequest_ToStringFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate file &apos;{0}&apos; not found. For a list of accepted ways to provide a certificate, please visit https://docs.nuget.org/docs/reference/command-line-reference.
        /// </summary>
        internal static string SignCommandCertificateFileNotFound {
            get {
                return ResourceManager.GetString("SignCommandCertificateFileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate store &apos;{0}&apos; not found. For a list of accepted ways to provide a certificate, please visit https://docs.nuget.org/docs/reference/command-line-reference.
        /// </summary>
        internal static string SignCommandCertificateStoreNotFound {
            get {
                return ResourceManager.GetString("SignCommandCertificateStoreNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please select a valid certificate.
        /// </summary>
        internal static string SignCommandDialogMessage {
            get {
                return ResourceManager.GetString("SignCommandDialogMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NuGet Sign Certificate Selection.
        /// </summary>
        internal static string SignCommandDialogTitle {
            get {
                return ResourceManager.GetString("SignCommandDialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Signing package(s) with certificate:.
        /// </summary>
        internal static string SignCommandDisplayCertificate {
            get {
                return ResourceManager.GetString("SignCommandDisplayCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timestamping package(s) with:.
        /// </summary>
        internal static string SignCommandDisplayTimestamper {
            get {
                return ResourceManager.GetString("SignCommandDisplayTimestamper", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following certificate cannot be used for signing a package as it does not have Code Signing enhanced key usage:.
        /// </summary>
        internal static string SignCommandInvalidCertEku {
            get {
                return ResourceManager.GetString("SignCommandInvalidCertEku", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate file &apos;{0}&apos; is invalid. For a list of accepted ways to provide a certificate, please visit https://docs.nuget.org/docs/reference/command-line-reference.
        /// </summary>
        internal static string SignCommandInvalidCertException {
            get {
                return ResourceManager.GetString("SignCommandInvalidCertException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid password was provided for the certificate file &apos;{0}&apos;. Please provide a valid password using the &apos;-{1}&apos; option.
        /// </summary>
        internal static string SignCommandInvalidPasswordException {
            get {
                return ResourceManager.GetString("SignCommandInvalidPasswordException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple certificates were found that meet all the given criteria. Use the &apos;-{0}&apos; option with the hash of the desired certificate..
        /// </summary>
        internal static string SignCommandMultipleCertException {
            get {
                return ResourceManager.GetString("SignCommandMultipleCertException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No certificates were found that meet all the given criteria. For a list of accepted ways to provide a certificate, please visit https://docs.nuget.org/docs/reference/command-line-reference.
        /// </summary>
        internal static string SignCommandNoCertException {
            get {
                return ResourceManager.GetString("SignCommandNoCertException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Signed package(s) output path:.
        /// </summary>
        internal static string SignCommandOutputPath {
            get {
                return ResourceManager.GetString("SignCommandOutputPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package(s) signed successfully..
        /// </summary>
        internal static string SignCommandSuccess {
            get {
                return ResourceManager.GetString("SignCommandSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate frameworks found: &apos;{0}&apos;..
        /// </summary>
        internal static string SpecValidationDuplicateFrameworks {
            get {
                return ResourceManager.GetString("SpecValidationDuplicateFrameworks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid target framework &apos;{0}&apos;..
        /// </summary>
        internal static string SpecValidationInvalidFramework {
            get {
                return ResourceManager.GetString("SpecValidationInvalidFramework", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing dependency on &apos;{0}&apos;..
        /// </summary>
        internal static string SpecValidationMissingDependency {
            get {
                return ResourceManager.GetString("SpecValidationMissingDependency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing project &apos;{0}&apos;..
        /// </summary>
        internal static string SpecValidationMissingProject {
            get {
                return ResourceManager.GetString("SpecValidationMissingProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No target frameworks specified..
        /// </summary>
        internal static string SpecValidationNoFrameworks {
            get {
                return ResourceManager.GetString("SpecValidationNoFrameworks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UAP projects must contain exactly one target framework..
        /// </summary>
        internal static string SpecValidationUAPSingleFramework {
            get {
                return ResourceManager.GetString("SpecValidationUAPSingleFramework", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restore request does not contain any projects to restore..
        /// </summary>
        internal static string SpecValidationZeroRestoreRequests {
            get {
                return ResourceManager.GetString("SpecValidationZeroRestoreRequests", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully updated the trusted signer &apos;{0}&apos;..
        /// </summary>
        internal static string SuccessfullUpdatedTrustedSigner {
            get {
                return ResourceManager.GetString("SuccessfullUpdatedTrustedSigner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully added a trusted author &apos;{0}&apos;..
        /// </summary>
        internal static string SuccessfullyAddedTrustedAuthor {
            get {
                return ResourceManager.GetString("SuccessfullyAddedTrustedAuthor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully added a trusted repository &apos;{0}&apos;..
        /// </summary>
        internal static string SuccessfullyAddedTrustedRepository {
            get {
                return ResourceManager.GetString("SuccessfullyAddedTrustedRepository", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully removed the trusted signer &apos;{0}&apos;..
        /// </summary>
        internal static string SuccessfullyRemovedTrustedSigner {
            get {
                return ResourceManager.GetString("SuccessfullyRemovedTrustedSigner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully synchronized the trusted repository &apos;{0}&apos;..
        /// </summary>
        internal static string SuccessfullySynchronizedTrustedRepository {
            get {
                return ResourceManager.GetString("SuccessfullySynchronizedTrustedRepository", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate fingerprint(s):.
        /// </summary>
        internal static string TrustedSignerLogCertificates {
            get {
                return ResourceManager.GetString("TrustedSignerLogCertificates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [U] {0} - {1}.
        /// </summary>
        internal static string TrustedSignerLogCertificateSummaryAllowUntrustedRoot {
            get {
                return ResourceManager.GetString("TrustedSignerLogCertificateSummaryAllowUntrustedRoot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} - {1}.
        /// </summary>
        internal static string TrustedSignerLogCertificateSummaryUnallowUntrustedRoot {
            get {
                return ResourceManager.GetString("TrustedSignerLogCertificateSummaryUnallowUntrustedRoot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trusted owners: {0}.
        /// </summary>
        internal static string TrustedSignerLogOwners {
            get {
                return ResourceManager.GetString("TrustedSignerLogOwners", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service Index: {0}.
        /// </summary>
        internal static string TrustedSignerLogServiceIndex {
            get {
                return ResourceManager.GetString("TrustedSignerLogServiceIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} [{1}].
        /// </summary>
        internal static string TrustedSignerLogTitle {
            get {
                return ResourceManager.GetString("TrustedSignerLogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to extract metadata from &apos;{0}&apos;..
        /// </summary>
        internal static string UnableToExtractAssemblyMetadata {
            get {
                return ResourceManager.GetString("UnableToExtractAssemblyMetadata", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find &apos;{0}&apos;. Make sure the project has been built..
        /// </summary>
        internal static string UnableToFindBuildOutput {
            get {
                return ResourceManager.GetString("UnableToFindBuildOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The hash algorithm is unsupported:  &apos;{0}&apos;..
        /// </summary>
        internal static string UnsupportedHashAlgorithm {
            get {
                return ResourceManager.GetString("UnsupportedHashAlgorithm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skipping restore for project &apos;{0}&apos;. The project file may be invalid or missing targets required for restore..
        /// </summary>
        internal static string UnsupportedProject {
            get {
                return ResourceManager.GetString("UnsupportedProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Using &apos;{0}&apos; for metadata..
        /// </summary>
        internal static string UsingNuspecForMetadata {
            get {
                return ResourceManager.GetString("UsingNuspecForMetadata", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Found packages.config. Using packages listed as dependencies.
        /// </summary>
        internal static string UsingPackagesConfigForDependencies {
            get {
                return ResourceManager.GetString("UsingPackagesConfigForDependencies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package signature validation failed..
        /// </summary>
        internal static string VerifyCommand_Failed {
            get {
                return ResourceManager.GetString("VerifyCommand_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Finished with {0} errors and {1} warnings..
        /// </summary>
        internal static string VerifyCommand_FinishedWithErrors {
            get {
                return ResourceManager.GetString("VerifyCommand_FinishedWithErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not a valid package file..
        /// </summary>
        internal static string VerifyCommand_PackageIsNotValid {
            get {
                return ResourceManager.GetString("VerifyCommand_PackageIsNotValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully verified package &apos;{0}&apos;..
        /// </summary>
        internal static string VerifyCommand_Success {
            get {
                return ResourceManager.GetString("VerifyCommand_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Verification type not supported. Please use only one of the following supported types: -All, -Signatures.
        /// </summary>
        internal static string VerifyCommand_VerificationTypeNotSupported {
            get {
                return ResourceManager.GetString("VerifyCommand_VerificationTypeNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Verifying {0}.
        /// </summary>
        internal static string VerifyCommand_VerifyingPackage {
            get {
                return ResourceManager.GetString("VerifyCommand_VerifyingPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; key already exists in Properties collection. Overriding value..
        /// </summary>
        internal static string Warning_DuplicatePropertyKey {
            get {
                return ResourceManager.GetString("Warning_DuplicatePropertyKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; was included in the project but doesn&apos;t exist. Skipping....
        /// </summary>
        internal static string Warning_FileDoesNotExist {
            get {
                return ResourceManager.GetString("Warning_FileDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File &apos;{0}&apos; was not added to the package. Files and folders starting with &apos;.&apos; or ending with &apos;.nupkg&apos; are excluded by default. To include this file, use -NoDefaultExcludes from the commandline.
        /// </summary>
        internal static string Warning_FileExcludedByDefault {
            get {
                return ResourceManager.GetString("Warning_FileExcludedByDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} depends on {1} but {2} was not found. An approximate best match of {3} was resolved..
        /// </summary>
        internal static string Warning_MinVersionDoesNotExist {
            get {
                return ResourceManager.GetString("Warning_MinVersionDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} does not provide an inclusive lower bound for dependency {1}. An approximate best match of {2} was resolved..
        /// </summary>
        internal static string Warning_MinVersionNonInclusive {
            get {
                return ResourceManager.GetString("Warning_MinVersionNonInclusive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Packages containing MSBuild targets and props files cannot be fully installed in projects targeting multiple frameworks. The MSBuild targets and props files have been ignored..
        /// </summary>
        internal static string Warning_MultiTarget {
            get {
                return ResourceManager.GetString("Warning_MultiTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Description: {0}.
        /// </summary>
        internal static string Warning_PackageCommandIssueDescription {
            get {
                return ResourceManager.GetString("Warning_PackageCommandIssueDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Solution: {0}.
        /// </summary>
        internal static string Warning_PackageCommandIssueSolution {
            get {
                return ResourceManager.GetString("Warning_PackageCommandIssueSolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Issue: {0}.
        /// </summary>
        internal static string Warning_PackageCommandIssueTitle {
            get {
                return ResourceManager.GetString("Warning_PackageCommandIssueTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Issue found with package &apos;{0}&apos;..
        /// </summary>
        internal static string Warning_PackageCommandPackageIssueSummary {
            get {
                return ResourceManager.GetString("Warning_PackageCommandPackageIssueSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Project dependency {0} does not contain an inclusive lower bound. Include a lower bound in the dependency version to ensure consistent restore results..
        /// </summary>
        internal static string Warning_ProjectDependencyMissingLowerBound {
            get {
                return ResourceManager.GetString("Warning_ProjectDependencyMissingLowerBound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; was included in the project but the path could not be resolved. Skipping....
        /// </summary>
        internal static string Warning_UnresolvedFilePath {
            get {
                return ResourceManager.GetString("Warning_UnresolvedFilePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} was not specified. Using &apos;{1}&apos;..
        /// </summary>
        internal static string Warning_UnspecifiedField {
            get {
                return ResourceManager.GetString("Warning_UnspecifiedField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Detected package version outside of dependency constraint: {0} requires {1} but version {2} was resolved..
        /// </summary>
        internal static string Warning_VersionAboveUpperBound {
            get {
                return ResourceManager.GetString("Warning_VersionAboveUpperBound", resourceCulture);
            }
        }
    }
}
