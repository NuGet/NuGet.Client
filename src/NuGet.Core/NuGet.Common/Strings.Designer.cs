//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NuGet.Common {
    using System;
    using System.Reflection;
    
    
    /// <summary>
    ///    A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        internal Strings() {
        }
        
        /// <summary>
        ///    Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("NuGet.Common.Strings", typeof(Strings).GetTypeInfo().Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///    Overrides the current thread's CurrentUICulture property for all
        ///    resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to An absolute path is required: &apos;{0}&apos;..
        /// </summary>
        public static string AbsolutePathRequired {
            get {
                return ResourceManager.GetString("AbsolutePathRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Argument cannot be null or empty.
        /// </summary>
        public static string ArgumentNullOrEmpty {
            get {
                return ResourceManager.GetString("ArgumentNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Failed to create random file for dotnet add pkg command..
        /// </summary>
        public static string Error_FailedToCreateRandomFile {
            get {
                return ResourceManager.GetString("Error_FailedToCreateRandomFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to At least one package folder path must be provided..
        /// </summary>
        public static string NoPackageFoldersFound {
            get {
                return ResourceManager.GetString("NoPackageFoldersFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Package folder not found: &apos;{0}&apos;..
        /// </summary>
        public static string PackageFolderNotFound {
            get {
                return ResourceManager.GetString("PackageFolderNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Unable to determine the current NuGet client version..
        /// </summary>
        public static string UnableToDetemineClientVersion {
            get {
                return ResourceManager.GetString("UnableToDetemineClientVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Unable to obtain lock file access on &apos;{0}&apos; for operations on &apos;{1}&apos;. This may mean that a different user or administator is holding this lock and that this process does not have permission to access it. If no other process is currently performing an operation on this file it may mean that an earlier NuGet process crashed and left an inaccessible lock file, in this case removing the file &apos;{0}&apos; will allow NuGet to continue..
        /// </summary>
        public static string UnauthorizedLockFail {
            get {
                return ResourceManager.GetString("UnauthorizedLockFail", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Hash algorithm &apos;{0}&apos; is unsupported. Supported algorithms include: SHA512 and SHA256..
        /// </summary>
        public static string UnsupportedHashAlgorithm {
            get {
                return ResourceManager.GetString("UnsupportedHashAlgorithm", resourceCulture);
            }
        }
    }
}
