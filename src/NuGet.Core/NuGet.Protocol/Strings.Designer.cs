//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NuGet.Protocol {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("NuGet.Protocol.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install failed. Rolling back....
        /// </summary>
        internal static string ActionExecutor_RollingBack {
            get {
                return ResourceManager.GetString("ActionExecutor_RollingBack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unrecognized Package Action &apos;{0}&apos;..
        /// </summary>
        internal static string ActionResolver_UnsupportedAction {
            get {
                return ResourceManager.GetString("ActionResolver_UnsupportedAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unsupported Dependency Behavior &apos;{0}&apos;..
        /// </summary>
        internal static string ActionResolver_UnsupportedDependencyBehavior {
            get {
                return ResourceManager.GetString("ActionResolver_UnsupportedDependencyBehavior", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package &apos;{0}&apos; already exists at feed &apos;{1}&apos; and is invalid..
        /// </summary>
        internal static string AddPackage_ExistingPackageInvalid {
            get {
                return ResourceManager.GetString("AddPackage_ExistingPackageInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package &apos;{0}&apos; already exists at feed &apos;{1}&apos;..
        /// </summary>
        internal static string AddPackage_PackageAlreadyExists {
            get {
                return ResourceManager.GetString("AddPackage_PackageAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully added package &apos;{0}&apos; to feed &apos;{1}&apos;..
        /// </summary>
        internal static string AddPackage_SuccessfullyAdded {
            get {
                return ResourceManager.GetString("AddPackage_SuccessfullyAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument can not be null or empty..
        /// </summary>
        internal static string Argument_Cannot_Be_Null_Or_Empty {
            get {
                return ResourceManager.GetString("Argument_Cannot_Be_Null_Or_Empty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument cannot be null or empty..
        /// </summary>
        internal static string ArgumentCannotBeNullOrEmpty {
            get {
                return ResourceManager.GetString("ArgumentCannotBeNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to the symbol server.
        /// </summary>
        internal static string DefaultSymbolServer {
            get {
                return ResourceManager.GetString("DefaultSymbolServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete canceled.
        /// </summary>
        internal static string DeleteCommandCanceled {
            get {
                return ResourceManager.GetString("DeleteCommandCanceled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} {1} will be deleted from the {2}. Would you like to continue?.
        /// </summary>
        internal static string DeleteCommandConfirm {
            get {
                return ResourceManager.GetString("DeleteCommandConfirm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} {1} was deleted successfully..
        /// </summary>
        internal static string DeleteCommandDeletedPackage {
            get {
                return ResourceManager.GetString("DeleteCommandDeletedPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deleting {0} {1} from the {2}..
        /// </summary>
        internal static string DeleteCommandDeletingPackage {
            get {
                return ResourceManager.GetString("DeleteCommandDeletingPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not Found..
        /// </summary>
        internal static string DeletePackage_NotFound {
            get {
                return ResourceManager.GetString("DeletePackage_NotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The download URL for {0} &apos;{1}&apos; is invalid..
        /// </summary>
        internal static string DownloadActionHandler_InvalidDownloadUrl {
            get {
                return ResourceManager.GetString("DownloadActionHandler_InvalidDownloadUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No download URL could be found for {0}..
        /// </summary>
        internal static string DownloadActionHandler_NoDownloadUrl {
            get {
                return ResourceManager.GetString("DownloadActionHandler_NoDownloadUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The download of &apos;{0}&apos; timed out because no data was received for {1}ms..
        /// </summary>
        internal static string Error_DownloadTimeout {
            get {
                return ResourceManager.GetString("Error_DownloadTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server responded with HTTP &apos;403 Forbidden&apos; when accessing the source &apos;{0}&apos;. This suggests that the server has authenticated your identity but has not permitted you to access the requested resource. Provide credentials that have permissions to view this resource..
        /// </summary>
        internal static string Http_CredentialsForForbidden {
            get {
                return ResourceManager.GetString("Http_CredentialsForForbidden", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server responded with HTTP &apos;407 Proxy Authentication Required&apos; when accessing the proxy &apos;{0}&apos;. This suggests that the server needs credentials to authenticate your identity to use a proxy. Provide credentials to access this resource..
        /// </summary>
        internal static string Http_CredentialsForProxy {
            get {
                return ResourceManager.GetString("Http_CredentialsForProxy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server responded with HTTP &apos;401 Unauthorized&apos; when accessing the source &apos;{0}&apos;. This suggests that the server needs credentials to authenticate your identity. Provide credentials to access this resource..
        /// </summary>
        internal static string Http_CredentialsForUnauthorized {
            get {
                return ResourceManager.GetString("Http_CredentialsForUnauthorized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} {1}.
        /// </summary>
        internal static string Http_RequestLog {
            get {
                return ResourceManager.GetString("Http_RequestLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} {1} {2}ms.
        /// </summary>
        internal static string Http_ResponseLog {
            get {
                return ResourceManager.GetString("Http_ResponseLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The HTTP request to &apos;{0} {1}&apos; has timed out after {2}ms..
        /// </summary>
        internal static string Http_Timeout {
            get {
                return ResourceManager.GetString("Http_Timeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The folder &apos;{0}&apos; contains an invalid version..
        /// </summary>
        internal static string InvalidVersionFolder {
            get {
                return ResourceManager.GetString("InvalidVersionFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to the NuGet gallery.
        /// </summary>
        internal static string LiveFeed {
            get {
                return ResourceManager.GetString("LiveFeed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file &apos;{0}&apos; does not exist in the package..
        /// </summary>
        internal static string LoadFileFromNupkg_FileNotFound {
            get {
                return ResourceManager.GetString("LoadFileFromNupkg_FileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot load the file &apos;{0}&apos; because it is larger than {1} MB..
        /// </summary>
        internal static string LoadFileFromNupkg_FileTooLarge {
            get {
                return ResourceManager.GetString("LoadFileFromNupkg_FileTooLarge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown problem loading the file &apos;{0}&apos;..
        /// </summary>
        internal static string LoadFileFromNupkg_UnknownProblemLoadingTheFile {
            get {
                return ResourceManager.GetString("LoadFileFromNupkg_UnknownProblemLoadingTheFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloading a package from &apos;{0}&apos; was canceled..
        /// </summary>
        internal static string Log_CanceledNupkgDownload {
            get {
                return ResourceManager.GetString("Log_CanceledNupkgDownload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error downloading &apos;{0}&apos; from &apos;{1}&apos;..
        /// </summary>
        internal static string Log_ErrorDownloading {
            get {
                return ResourceManager.GetString("Log_ErrorDownloading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to download package &apos;{0}&apos; from &apos;{1}&apos;..
        /// </summary>
        internal static string Log_FailedToDownloadPackage {
            get {
                return ResourceManager.GetString("Log_FailedToDownloadPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The V2 feed at &apos;{0}&apos; returned an unexpected status code &apos;{1} {2}&apos;..
        /// </summary>
        internal static string Log_FailedToFetchV2Feed {
            get {
                return ResourceManager.GetString("Log_FailedToFetchV2Feed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to fetch results from V2 feed at &apos;{0}&apos; with following message : {1}.
        /// </summary>
        internal static string Log_FailedToFetchV2FeedHttp {
            get {
                return ResourceManager.GetString("Log_FailedToFetchV2FeedHttp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to load nuspec from package &apos;{0}&apos;..
        /// </summary>
        internal static string Log_FailedToGetNuspecStream {
            get {
                return ResourceManager.GetString("Log_FailedToGetNuspecStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to parse {0} information from {1}. .
        /// </summary>
        internal static string Log_FailedToParseRepoSignInfor {
            get {
                return ResourceManager.GetString("Log_FailedToParseRepoSignInfor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to get repository signature information for source {0}..
        /// </summary>
        internal static string Log_FailedToReadRepositorySignature {
            get {
                return ResourceManager.GetString("Log_FailedToReadRepositorySignature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to load the service index for source {0}..
        /// </summary>
        internal static string Log_FailedToReadServiceIndex {
            get {
                return ResourceManager.GetString("Log_FailedToReadServiceIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to retrieve information about &apos;{0}&apos; from remote source &apos;{1}&apos;..
        /// </summary>
        internal static string Log_FailedToRetrievePackage {
            get {
                return ResourceManager.GetString("Log_FailedToRetrievePackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to verify the root directory of local source &apos;{0}&apos;..
        /// </summary>
        internal static string Log_FailedToVerifyRootDirectory {
            get {
                return ResourceManager.GetString("Log_FailedToVerifyRootDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to validate the file &apos;{0}&apos;..
        /// </summary>
        internal static string Log_FailedToVerifyValidFile {
            get {
                return ResourceManager.GetString("Log_FailedToVerifyValidFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file &apos;{0}&apos; is corrupt..
        /// </summary>
        internal static string Log_FileIsCorrupt {
            get {
                return ResourceManager.GetString("Log_FileIsCorrupt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An invalid cache entry was found for URL &apos;{0}&apos; and will be replaced..
        /// </summary>
        internal static string Log_InvalidCacheEntry {
            get {
                return ResourceManager.GetString("Log_InvalidCacheEntry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The nupkg at &apos;{0}&apos; is not valid..
        /// </summary>
        internal static string Log_InvalidNupkgFromUrl {
            get {
                return ResourceManager.GetString("Log_InvalidNupkgFromUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The local source &apos;{0}&apos; doesn&apos;t exist..
        /// </summary>
        internal static string Log_LocalSourceNotExist {
            get {
                return ResourceManager.GetString("Log_LocalSourceNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retrying &apos;{0}&apos; for source &apos;{1}&apos;..
        /// </summary>
        internal static string Log_RetryingFindPackagesById {
            get {
                return ResourceManager.GetString("Log_RetryingFindPackagesById", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error was encountered when fetching &apos;{0} {1}&apos;. The request will now be retried..
        /// </summary>
        internal static string Log_RetryingHttp {
            get {
                return ResourceManager.GetString("Log_RetryingHttp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retrying repository signature request for source &apos;{0}&apos;..
        /// </summary>
        internal static string Log_RetryingRepositorySignature {
            get {
                return ResourceManager.GetString("Log_RetryingRepositorySignature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retrying service index request for source &apos;{0}&apos;..
        /// </summary>
        internal static string Log_RetryingServiceIndex {
            get {
                return ResourceManager.GetString("Log_RetryingServiceIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No API Key was provided and no API Key could be found for {0}. To save an API Key for a source use the &apos;setApiKey&apos; command..
        /// </summary>
        internal static string NoApiKeyFound {
            get {
                return ResourceManager.GetString("NoApiKeyFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The license version string &apos;{0}&apos; is higher than the one supported by this toolset &apos;{1}&apos;..
        /// </summary>
        internal static string NuGetLicense_LicenseExpressionVersionTooHigh {
            get {
                return ResourceManager.GetString("NuGetLicense_LicenseExpressionVersionTooHigh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The license identifier(s) {0} is(are) not recognized by the current toolset..
        /// </summary>
        internal static string NuGetLicenseExpression_NonStandardIdentifier {
            get {
                return ResourceManager.GetString("NuGetLicenseExpression_NonStandardIdentifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create a NuGet Repository from the Aggregate Source.
        /// </summary>
        internal static string NuGetRepository_CannotCreateAggregateRepo {
            get {
                return ResourceManager.GetString("NuGetRepository_CannotCreateAggregateRepo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} service is not supported by this object..
        /// </summary>
        internal static string NuGetServiceProvider_ServiceNotSupported {
            get {
                return ResourceManager.GetString("NuGetServiceProvider_ServiceNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not a valid nupkg file..
        /// </summary>
        internal static string NupkgPath_Invalid {
            get {
                return ResourceManager.GetString("NupkgPath_Invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not a valid nupkg file. Error: &apos;{1}&apos;..
        /// </summary>
        internal static string NupkgPath_InvalidEx {
            get {
                return ResourceManager.GetString("NupkgPath_InvalidEx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One or more URIs must be specified..
        /// </summary>
        internal static string OneOrMoreUrisMustBeSpecified {
            get {
                return ResourceManager.GetString("OneOrMoreUrisMustBeSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unrecognized Package Action &apos;{0}&apos;..
        /// </summary>
        internal static string PackageActionDescriptionWrapper_UnrecognizedAction {
            get {
                return ResourceManager.GetString("PackageActionDescriptionWrapper_UnrecognizedAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find package &apos;{0}&apos;..
        /// </summary>
        internal static string PackageNotFound {
            get {
                return ResourceManager.GetString("PackageNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ERROR: This version of nuget.exe does not support updating packages to package source &apos;{0}&apos;..
        /// </summary>
        internal static string PackageServerEndpoint_NotSupported {
            get {
                return ResourceManager.GetString("PackageServerEndpoint_NotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not a valid path..
        /// </summary>
        internal static string Path_Invalid {
            get {
                return ResourceManager.GetString("Path_Invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; should be a local path or a UNC share path..
        /// </summary>
        internal static string Path_Invalid_NotFileNotUnc {
            get {
                return ResourceManager.GetString("Path_Invalid_NotFileNotUnc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A connection has already been started..
        /// </summary>
        internal static string Plugin_ConnectionAlreadyStarted {
            get {
                return ResourceManager.GetString("Plugin_ConnectionAlreadyStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The plugin connection is closed..
        /// </summary>
        internal static string Plugin_ConnectionIsClosed {
            get {
                return ResourceManager.GetString("Plugin_ConnectionIsClosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloading a package from a plugin is not supported since unsigned packages are not allowed and package download plugins do not support signed package verification..
        /// </summary>
        internal static string Plugin_DownloadNotSupportedSinceUnsignedNotAllowed {
            get {
                return ResourceManager.GetString("Plugin_DownloadNotSupportedSinceUnsignedNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Plugin &apos;{0}&apos; failed with the exception:  {1}.
        /// </summary>
        internal static string Plugin_Exception {
            get {
                return ResourceManager.GetString("Plugin_Exception", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Plugin &apos;{0}&apos; failed a {1} operation for package {2}.{3}..
        /// </summary>
        internal static string Plugin_FailedOperationForPackage {
            get {
                return ResourceManager.GetString("Plugin_FailedOperationForPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A failure occurred while attempting to query plugin operation claims for the plugin at &apos;{0}&apos;.  Exception:  {1}.
        /// </summary>
        internal static string Plugin_FailedToQueryPluginOperationsClaims {
            get {
                return ResourceManager.GetString("Plugin_FailedToQueryPluginOperationsClaims", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A failure occurred while attempting to query package versions for package &apos;{0}&apos; using the plugin at &apos;{1}&apos;..
        /// </summary>
        internal static string Plugin_FailureQueryingPackageVersions {
            get {
                return ResourceManager.GetString("Plugin_FailureQueryingPackageVersions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Terminating plugin &apos;{0}&apos; due to an unrecoverable fault:  {1}.
        /// </summary>
        internal static string Plugin_Fault {
            get {
                return ResourceManager.GetString("Plugin_Fault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A plugin was not found at path &apos;{0}&apos;..
        /// </summary>
        internal static string Plugin_FileNotFound {
            get {
                return ResourceManager.GetString("Plugin_FileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The plugin handshake failed..
        /// </summary>
        internal static string Plugin_HandshakeFailed {
            get {
                return ResourceManager.GetString("Plugin_HandshakeFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A handshake request handler already exists..
        /// </summary>
        internal static string Plugin_HandshakeRequestHandlerAlreadyExists {
            get {
                return ResourceManager.GetString("Plugin_HandshakeRequestHandlerAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The idle timeout must be greater than or equal to System.Threading.Timeout.InfiniteTimeSpan..
        /// </summary>
        internal static string Plugin_IdleTimeoutMustBeGreaterThanOrEqualToInfiniteTimeSpan {
            get {
                return ResourceManager.GetString("Plugin_IdleTimeoutMustBeGreaterThanOrEqualToInfiniteTimeSpan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An illegal message type was received during handshake..
        /// </summary>
        internal static string Plugin_IllegalMessageWhileHandshaking {
            get {
                return ResourceManager.GetString("Plugin_IllegalMessageWhileHandshaking", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Plugin initialization failed..
        /// </summary>
        internal static string Plugin_InitializationFailed {
            get {
                return ResourceManager.GetString("Plugin_InitializationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The plugin at &apos;{0}&apos; did not have a valid embedded signature..
        /// </summary>
        internal static string Plugin_InvalidEmbeddedSignature {
            get {
                return ResourceManager.GetString("Plugin_InvalidEmbeddedSignature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The message type &apos;{0}&apos; is invalid at this time..
        /// </summary>
        internal static string Plugin_InvalidMessageType {
            get {
                return ResourceManager.GetString("Plugin_InvalidMessageType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The plugin file path &apos;{0}&apos; is invalid..
        /// </summary>
        internal static string Plugin_InvalidPluginFilePath {
            get {
                return ResourceManager.GetString("Plugin_InvalidPluginFilePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A plugin is not connected..
        /// </summary>
        internal static string Plugin_NotConnected {
            get {
                return ResourceManager.GetString("Plugin_NotConnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Plugin &apos;{0}&apos; failed to download package &apos;{1}&apos;..
        /// </summary>
        internal static string Plugin_PackageDownloadFailed {
            get {
                return ResourceManager.GetString("Plugin_PackageDownloadFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Problem starting the plugin  &apos;{0}&apos;. {1}.
        /// </summary>
        internal static string Plugin_ProblemStartingPlugin {
            get {
                return ResourceManager.GetString("Plugin_ProblemStartingPlugin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A plugin protocol exception occurred..
        /// </summary>
        internal static string Plugin_ProtocolException {
            get {
                return ResourceManager.GetString("Plugin_ProtocolException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A protocol version is not supported on error..
        /// </summary>
        internal static string Plugin_ProtocolVersionNotSupportedOnError {
            get {
                return ResourceManager.GetString("Plugin_ProtocolVersionNotSupportedOnError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; must be greater than or equal to &apos;{1}&apos;..
        /// </summary>
        internal static string Plugin_ProtocolVersionOutOfRange {
            get {
                return ResourceManager.GetString("Plugin_ProtocolVersionOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Request context does not exist for request ID &apos;{0}&apos;..
        /// </summary>
        internal static string Plugin_RequestContextDoesNotExist {
            get {
                return ResourceManager.GetString("Plugin_RequestContextDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A request handler does not exist for the message method &apos;{0}&apos;..
        /// </summary>
        internal static string Plugin_RequestHandlerDoesNotExist {
            get {
                return ResourceManager.GetString("Plugin_RequestHandlerDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timeout must be greater than TimeSpan.Zero and less than or equal to TimeSpan.FromMilliseconds(int.MaxValue)..
        /// </summary>
        internal static string Plugin_TimeoutOutOfRange {
            get {
                return ResourceManager.GetString("Plugin_TimeoutOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The enum value &apos;{0}&apos; is unrecognized..
        /// </summary>
        internal static string Plugin_UnrecognizedEnumValue {
            get {
                return ResourceManager.GetString("Plugin_UnrecognizedEnumValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation claims are unrecognized:  {0}..
        /// </summary>
        internal static string Plugin_UnrecognizedOperationClaims {
            get {
                return ResourceManager.GetString("Plugin_UnrecognizedOperationClaims", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The project &apos;{0}&apos; is not one of the projects targetted by this object..
        /// </summary>
        internal static string ProjectInstallationTarget_ProjectIsNotTargetted {
            get {
                return ResourceManager.GetString("ProjectInstallationTarget_ProjectIsNotTargetted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to retrieve metadata from source &apos;{0}&apos;..
        /// </summary>
        internal static string Protocol_BadSource {
            get {
                return ResourceManager.GetString("Protocol_BadSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is a duplicate url which has already been downloaded and will lead to a cyclic dependency. Please correct from server..
        /// </summary>
        internal static string Protocol_duplicateUri {
            get {
                return ResourceManager.GetString("Protocol_duplicateUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;versions&apos; property at &apos;{0}&apos; must be an array..
        /// </summary>
        internal static string Protocol_FlatContainerIndexVersionsNotArray {
            get {
                return ResourceManager.GetString("Protocol_FlatContainerIndexVersionsNotArray", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service index document is missing the &apos;resources&apos; property..
        /// </summary>
        internal static string Protocol_IndexMissingResourcesNode {
            get {
                return ResourceManager.GetString("Protocol_IndexMissingResourcesNode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The content at &apos;{0}&apos; is not a valid JSON object..
        /// </summary>
        internal static string Protocol_InvalidJsonObject {
            get {
                return ResourceManager.GetString("Protocol_InvalidJsonObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The source does not have the &apos;version&apos; property at &apos;{0}&apos;..
        /// </summary>
        internal static string Protocol_InvalidServiceIndex {
            get {
                return ResourceManager.GetString("Protocol_InvalidServiceIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The content at &apos;{0}&apos; is not valid XML..
        /// </summary>
        internal static string Protocol_InvalidXml {
            get {
                return ResourceManager.GetString("Protocol_InvalidXml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Metadata could not be loaded from the source &apos;{0}&apos;..
        /// </summary>
        internal static string Protocol_MalformedMetadataError {
            get {
                return ResourceManager.GetString("Protocol_MalformedMetadataError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The source does not have a Registration Base Url defined!.
        /// </summary>
        internal static string Protocol_MissingRegistrationBase {
            get {
                return ResourceManager.GetString("Protocol_MissingRegistrationBase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The source does not have a Search service!.
        /// </summary>
        internal static string Protocol_MissingSearchService {
            get {
                return ResourceManager.GetString("Protocol_MissingSearchService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The source does not have the &apos;version&apos; property..
        /// </summary>
        internal static string Protocol_MissingVersion {
            get {
                return ResourceManager.GetString("Protocol_MissingVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while retrieving package metadata for &apos;{0}&apos; from source &apos;{1}&apos;..
        /// </summary>
        internal static string Protocol_PackageMetadataError {
            get {
                return ResourceManager.GetString("Protocol_PackageMetadataError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path &apos;{0}&apos; for the selected source could not be resolved..
        /// </summary>
        internal static string Protocol_Search_LocalSourceNotFound {
            get {
                return ResourceManager.GetString("Protocol_Search_LocalSourceNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The source version is not supported: &apos;{0}&apos;..
        /// </summary>
        internal static string Protocol_UnsupportedVersion {
            get {
                return ResourceManager.GetString("Protocol_UnsupportedVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your package was pushed..
        /// </summary>
        internal static string PushCommandPackagePushed {
            get {
                return ResourceManager.GetString("PushCommandPackagePushed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pushing {0} to {1}....
        /// </summary>
        internal static string PushCommandPushingPackage {
            get {
                return ResourceManager.GetString("PushCommandPushingPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify option -SkipDuplicate to automatically skip..
        /// </summary>
        internal static string PushCommandSkipDuplicateAdvertise {
            get {
                return ResourceManager.GetString("PushCommandSkipDuplicateAdvertise", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The option -SkipDuplicate is not currently supported for this type of push..
        /// </summary>
        internal static string PushCommandSkipDuplicateNotImplemented {
            get {
                return ResourceManager.GetString("PushCommandSkipDuplicateNotImplemented", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Repository content URL for repository signatures must be HTTPS..
        /// </summary>
        internal static string RepositoryContentUrlMustBeHttps {
            get {
                return ResourceManager.GetString("RepositoryContentUrlMustBeHttps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Repository Signatures resouce must be served over HTTPS. Source: {0}.
        /// </summary>
        internal static string RepositorySignaturesResourceMustBeHttps {
            get {
                return ResourceManager.GetString("RepositorySignaturesResourceMustBeHttps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; installation feature was required by a package but is not supported on the current host..
        /// </summary>
        internal static string RequiredFeatureUnsupportedException_DefaultMessageWithFeature {
            get {
                return ResourceManager.GetString("RequiredFeatureUnsupportedException_DefaultMessageWithFeature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The installation host does not support a feature required by this package..
        /// </summary>
        internal static string RequiredFeatureUnsupportedException_DefaultMessageWithoutFeature {
            get {
                return ResourceManager.GetString("RequiredFeatureUnsupportedException_DefaultMessageWithoutFeature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File does not exist ({0})..
        /// </summary>
        internal static string UnableToFindFile {
            get {
                return ResourceManager.GetString("UnableToFindFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to parse a valid version from a v3 folder: &apos;{0}&apos;..
        /// </summary>
        internal static string UnableToParseFolderV3Version {
            get {
                return ResourceManager.GetString("UnableToParseFolderV3Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to API v2 (legacy).
        /// </summary>
        internal static string v2sourceDescription {
            get {
                return ResourceManager.GetString("v2sourceDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to API v3.
        /// </summary>
        internal static string v3sourceDescription {
            get {
                return ResourceManager.GetString("v3sourceDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Found symbols package &apos;{0}&apos;, but no API key was specified for the symbol server. To save an API Key, run &apos;NuGet.exe setApiKey [your API key from http://www.NuGet.org]&apos;..
        /// </summary>
        internal static string Warning_SymbolServerNotConfigured {
            get {
                return ResourceManager.GetString("Warning_SymbolServerNotConfigured", resourceCulture);
            }
        }
    }
}
