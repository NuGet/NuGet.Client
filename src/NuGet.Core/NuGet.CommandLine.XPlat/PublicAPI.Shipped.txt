NuGet.CommandLine.XPlat.AddPackageReferenceCommand
NuGet.CommandLine.XPlat.AddPackageReferenceCommandRunner
NuGet.CommandLine.XPlat.AddPackageReferenceCommandRunner.AddPackageReferenceCommandRunner() -> void
NuGet.CommandLine.XPlat.AddPackageReferenceCommandRunner.ExecuteCommand(NuGet.CommandLine.XPlat.PackageReferenceArgs packageReferenceArgs, NuGet.CommandLine.XPlat.MSBuildAPIUtility msBuild) -> System.Threading.Tasks.Task<int>
NuGet.CommandLine.XPlat.CommandConstants
NuGet.CommandLine.XPlat.CommandLineUtility
NuGet.CommandLine.XPlat.CommandOutputLogger
NuGet.CommandLine.XPlat.CommandOutputLogger.CommandOutputLogger(NuGet.Common.LogLevel logLevel) -> void
NuGet.CommandLine.XPlat.CommandOutputLogger.LogLevel.get -> NuGet.Common.LogLevel
NuGet.CommandLine.XPlat.CommandOutputLogger.LogLevel.set -> void
NuGet.CommandLine.XPlat.IListPackageCommandRunner
NuGet.CommandLine.XPlat.IListPackageCommandRunner.ExecuteCommandAsync(NuGet.CommandLine.XPlat.ListPackageArgs packageRefArgs) -> System.Threading.Tasks.Task
NuGet.CommandLine.XPlat.IPackageReferenceCommandRunner
NuGet.CommandLine.XPlat.IPackageReferenceCommandRunner.ExecuteCommand(NuGet.CommandLine.XPlat.PackageReferenceArgs packageRefArgs, NuGet.CommandLine.XPlat.MSBuildAPIUtility msBuild) -> System.Threading.Tasks.Task<int>
NuGet.CommandLine.XPlat.ListPackageArgs
NuGet.CommandLine.XPlat.ListPackageArgs.CancellationToken.get -> System.Threading.CancellationToken
NuGet.CommandLine.XPlat.ListPackageArgs.Frameworks.get -> System.Collections.Generic.IEnumerable<string>
NuGet.CommandLine.XPlat.ListPackageArgs.HighestMinor.get -> bool
NuGet.CommandLine.XPlat.ListPackageArgs.HighestPatch.get -> bool
NuGet.CommandLine.XPlat.ListPackageArgs.IncludeDeprecated.get -> bool
NuGet.CommandLine.XPlat.ListPackageArgs.IncludeOutdated.get -> bool
NuGet.CommandLine.XPlat.ListPackageArgs.IncludeTransitive.get -> bool
NuGet.CommandLine.XPlat.ListPackageArgs.ListPackageArgs(string path, System.Collections.Generic.IEnumerable<NuGet.Configuration.PackageSource> packageSources, System.Collections.Generic.IEnumerable<string> frameworks, bool includeOutdated, bool includeDeprecated, bool includeTransitive, bool prerelease, bool highestPatch, bool highestMinor, NuGet.Common.ILogger logger, System.Threading.CancellationToken cancellationToken) -> void
NuGet.CommandLine.XPlat.ListPackageArgs.Logger.get -> NuGet.Common.ILogger
NuGet.CommandLine.XPlat.ListPackageArgs.PackageSources.get -> System.Collections.Generic.IEnumerable<NuGet.Configuration.PackageSource>
NuGet.CommandLine.XPlat.ListPackageArgs.Path.get -> string
NuGet.CommandLine.XPlat.ListPackageArgs.Prerelease.get -> bool
NuGet.CommandLine.XPlat.ListPackageCommand
NuGet.CommandLine.XPlat.ListPackageCommandRunner
NuGet.CommandLine.XPlat.ListPackageCommandRunner.ExecuteCommandAsync(NuGet.CommandLine.XPlat.ListPackageArgs listPackageArgs) -> System.Threading.Tasks.Task
NuGet.CommandLine.XPlat.ListPackageCommandRunner.ListPackageCommandRunner() -> void
NuGet.CommandLine.XPlat.MSBuildAPIUtility
NuGet.CommandLine.XPlat.MSBuildAPIUtility.AddPackageReference(string projectPath, NuGet.LibraryModel.LibraryDependency libraryDependency) -> void
NuGet.CommandLine.XPlat.MSBuildAPIUtility.AddPackageReferencePerTFM(string projectPath, NuGet.LibraryModel.LibraryDependency libraryDependency, System.Collections.Generic.IEnumerable<string> frameworks) -> void
NuGet.CommandLine.XPlat.MSBuildAPIUtility.Logger.get -> NuGet.Common.ILogger
NuGet.CommandLine.XPlat.MSBuildAPIUtility.MSBuildAPIUtility(NuGet.Common.ILogger logger) -> void
NuGet.CommandLine.XPlat.MSBuildAPIUtility.RemovePackageReference(string projectPath, NuGet.LibraryModel.LibraryDependency libraryDependency) -> int
NuGet.CommandLine.XPlat.PackageReferenceArgs
NuGet.CommandLine.XPlat.PackageReferenceArgs.DgFilePath.get -> string
NuGet.CommandLine.XPlat.PackageReferenceArgs.DgFilePath.set -> void
NuGet.CommandLine.XPlat.PackageReferenceArgs.Frameworks.get -> string[]
NuGet.CommandLine.XPlat.PackageReferenceArgs.Frameworks.set -> void
NuGet.CommandLine.XPlat.PackageReferenceArgs.Interactive.get -> bool
NuGet.CommandLine.XPlat.PackageReferenceArgs.Interactive.set -> void
NuGet.CommandLine.XPlat.PackageReferenceArgs.Logger.get -> NuGet.Common.ILogger
NuGet.CommandLine.XPlat.PackageReferenceArgs.NoRestore.get -> bool
NuGet.CommandLine.XPlat.PackageReferenceArgs.NoRestore.set -> void
NuGet.CommandLine.XPlat.PackageReferenceArgs.NoVersion.get -> bool
NuGet.CommandLine.XPlat.PackageReferenceArgs.NoVersion.set -> void
NuGet.CommandLine.XPlat.PackageReferenceArgs.PackageDependency.get -> NuGet.Packaging.Core.PackageDependency
NuGet.CommandLine.XPlat.PackageReferenceArgs.PackageDependency.set -> void
NuGet.CommandLine.XPlat.PackageReferenceArgs.PackageDirectory.get -> string
NuGet.CommandLine.XPlat.PackageReferenceArgs.PackageDirectory.set -> void
NuGet.CommandLine.XPlat.PackageReferenceArgs.PackageReferenceArgs(string projectPath, NuGet.Packaging.Core.PackageDependency packageDependency, NuGet.Common.ILogger logger) -> void
NuGet.CommandLine.XPlat.PackageReferenceArgs.PackageReferenceArgs(string projectPath, NuGet.Packaging.Core.PackageDependency packageDependency, NuGet.Common.ILogger logger, bool noVersion) -> void
NuGet.CommandLine.XPlat.PackageReferenceArgs.PackageReferenceArgs(string projectPath, string packageId, NuGet.Common.ILogger logger) -> void
NuGet.CommandLine.XPlat.PackageReferenceArgs.ProjectPath.get -> string
NuGet.CommandLine.XPlat.PackageReferenceArgs.Sources.get -> string[]
NuGet.CommandLine.XPlat.PackageReferenceArgs.Sources.set -> void
NuGet.CommandLine.XPlat.Program
NuGet.CommandLine.XPlat.Program.Program() -> void
NuGet.CommandLine.XPlat.RemovePackageReferenceCommand
NuGet.CommandLine.XPlat.RemovePackageReferenceCommand.RemovePackageReferenceCommand() -> void
NuGet.CommandLine.XPlat.RemovePackageReferenceCommandRunner
NuGet.CommandLine.XPlat.RemovePackageReferenceCommandRunner.ExecuteCommand(NuGet.CommandLine.XPlat.PackageReferenceArgs packageReferenceArgs, NuGet.CommandLine.XPlat.MSBuildAPIUtility msBuild) -> System.Threading.Tasks.Task<int>
NuGet.CommandLine.XPlat.RemovePackageReferenceCommandRunner.RemovePackageReferenceCommandRunner() -> void
NuGet.CommandLine.XPlat.Utility.TableParser
const NuGet.CommandLine.XPlat.CommandConstants.ForceEnglishOutputOption = "--force-english-output" -> string
override NuGet.CommandLine.XPlat.CommandOutputLogger.LogDebug(string data) -> void
override NuGet.CommandLine.XPlat.CommandOutputLogger.LogError(string data) -> void
override NuGet.CommandLine.XPlat.CommandOutputLogger.LogInformation(string data) -> void
override NuGet.CommandLine.XPlat.CommandOutputLogger.LogInformationSummary(string data) -> void
override NuGet.CommandLine.XPlat.CommandOutputLogger.LogMinimal(string data) -> void
override NuGet.CommandLine.XPlat.CommandOutputLogger.LogVerbose(string data) -> void
override NuGet.CommandLine.XPlat.CommandOutputLogger.LogWarning(string data) -> void
static NuGet.CommandLine.XPlat.AddPackageReferenceCommand.Register(Microsoft.Extensions.CommandLineUtils.CommandLineApplication app, System.Func<NuGet.Common.ILogger> getLogger, System.Func<NuGet.CommandLine.XPlat.IPackageReferenceCommandRunner> getCommandRunner) -> void
static NuGet.CommandLine.XPlat.CommandLineUtility.SplitAndJoinAcrossMultipleValues(System.Collections.Generic.IList<string> inputs) -> string[]
static NuGet.CommandLine.XPlat.ListPackageCommand.Register(Microsoft.Extensions.CommandLineUtils.CommandLineApplication app, System.Func<NuGet.Common.ILogger> getLogger, System.Func<NuGet.CommandLine.XPlat.IListPackageCommandRunner> getCommandRunner) -> void
static NuGet.CommandLine.XPlat.Program.Main(string[] args) -> int
static NuGet.CommandLine.XPlat.Program.MainInternal(string[] args, NuGet.CommandLine.XPlat.CommandOutputLogger log) -> int
static NuGet.CommandLine.XPlat.RemovePackageReferenceCommand.Register(Microsoft.Extensions.CommandLineUtils.CommandLineApplication app, System.Func<NuGet.Common.ILogger> getLogger, System.Func<NuGet.CommandLine.XPlat.IPackageReferenceCommandRunner> getCommandRunner) -> void
virtual NuGet.CommandLine.XPlat.CommandOutputLogger.LogInternal(NuGet.Common.LogLevel logLevel, string message) -> void
