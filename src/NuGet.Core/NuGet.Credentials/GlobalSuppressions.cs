// Copyright (c) .NET Foundation. All rights reserved.
// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.

// This file is used by Code Analysis to maintain SuppressMessage
// attributes that are applied to this project.
// Project-level suppressions either have no target or are given
// a specific target and scoped to a namespace, type, member, etc.

using System.Diagnostics.CodeAnalysis;

[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'Task<CredentialResponse> PluginCredentialProvider.GetAsync(Uri uri, IWebProxy proxy, CredentialRequestType type, string message, bool isRetry, bool nonInteractive, CancellationToken cancellationToken)', validate parameter 'uri' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Credentials.PluginCredentialProvider.GetAsync(System.Uri,System.Net.IWebProxy,NuGet.Configuration.CredentialRequestType,System.String,System.Boolean,System.Boolean,System.Threading.CancellationToken)~System.Threading.Tasks.Task{NuGet.Credentials.CredentialResponse}")]
[assembly: SuppressMessage("Build", "CA1822:Member PassVerbosityFlag does not access instance data and can be marked as static (Shared in VisualBasic)", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Credentials.PluginCredentialProvider.PassVerbosityFlag(NuGet.Credentials.PluginCredentialRequest)~System.Boolean")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'PluginException PluginException.Create(string path, Exception inner)', validate parameter 'inner' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Credentials.PluginException.Create(System.String,System.Exception)~NuGet.Credentials.PluginException")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'PluginException PluginException.CreateInvalidResponseExceptionMessage(string path, PluginCredentialResponseExitCode status, PluginCredentialResponse response)', validate parameter 'response' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Credentials.PluginException.CreateInvalidResponseExceptionMessage(System.String,NuGet.Credentials.PluginCredentialResponseExitCode,NuGet.Credentials.PluginCredentialResponse)~NuGet.Credentials.PluginException")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'Task<CredentialResponse> SecurePluginCredentialProvider.GetAsync(Uri uri, IWebProxy proxy, CredentialRequestType type, string message, bool isRetry, bool nonInteractive, CancellationToken cancellationToken)', validate parameter 'uri' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Credentials.SecurePluginCredentialProvider.GetAsync(System.Uri,System.Net.IWebProxy,NuGet.Configuration.CredentialRequestType,System.String,System.Boolean,System.Boolean,System.Threading.CancellationToken)~System.Threading.Tasks.Task{NuGet.Credentials.CredentialResponse}")]
[assembly: SuppressMessage("Build", "CA1056:Change the type of property PluginCredentialRequest.Uri from string to System.Uri.", Justification = "<Pending>", Scope = "member", Target = "~P:NuGet.Credentials.PluginCredentialRequest.Uri")]
[assembly: SuppressMessage("Build", "CA2227:Change 'AuthTypes' to be read-only by removing the property setter.", Justification = "<Pending>", Scope = "member", Target = "~P:NuGet.Credentials.PluginCredentialResponse.AuthTypes")]
[assembly: SuppressMessage("Globalization", "CA1308:Normalize strings to uppercase", Justification = "Command line argument for NuGet plugin with a finite set of verbosity values. No need to be uppercase", Scope = "member", Target = "~M:NuGet.Credentials.PluginCredentialProvider.GetPluginResponse(NuGet.Credentials.PluginCredentialRequest,System.Threading.CancellationToken)~NuGet.Credentials.PluginCredentialResponse")]
