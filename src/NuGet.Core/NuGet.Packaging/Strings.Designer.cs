//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NuGet.Packaging {
    using System;
    using System.Reflection;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("NuGet.Packaging.Strings", typeof(Strings).GetTypeInfo().Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument cannot be null or empty..
        /// </summary>
        internal static string ArgumentCannotBeNullOrEmpty {
            get {
                return ResourceManager.GetString("ArgumentCannotBeNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A complete certificate chain could not be built for the signing certificate..
        /// </summary>
        internal static string CertificateChainBuildFailed {
            get {
                return ResourceManager.GetString("CertificateChainBuildFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate chain validation failed..
        /// </summary>
        internal static string CertificateChainValidationFailed {
            get {
                return ResourceManager.GetString("CertificateChainValidationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} hash: {1}.
        /// </summary>
        internal static string CertUtilityCertificateHash {
            get {
                return ResourceManager.GetString("CertUtilityCertificateHash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SHA1 hash: {0}.
        /// </summary>
        internal static string CertUtilityCertificateHashSha1 {
            get {
                return ResourceManager.GetString("CertUtilityCertificateHashSha1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Issued by: {0}.
        /// </summary>
        internal static string CertUtilityCertificateIssuer {
            get {
                return ResourceManager.GetString("CertUtilityCertificateIssuer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Subject Name: {0}.
        /// </summary>
        internal static string CertUtilityCertificateSubjectName {
            get {
                return ResourceManager.GetString("CertUtilityCertificateSubjectName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Valid from: {0} to {1}.
        /// </summary>
        internal static string CertUtilityCertificateValidity {
            get {
                return ResourceManager.GetString("CertUtilityCertificateValidity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ... {0} more..
        /// </summary>
        internal static string CertUtilityMultipleCertificatesFooter {
            get {
                return ResourceManager.GetString("CertUtilityMultipleCertificatesFooter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following certificates meet all given criteria:.
        /// </summary>
        internal static string CertUtilityMultipleCertificatesHeader {
            get {
                return ResourceManager.GetString("CertUtilityMultipleCertificatesHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The commitment-type-indication attribute is invalid..
        /// </summary>
        internal static string CommitmentTypeIndicationAttributeInvalid {
            get {
                return ResourceManager.GetString("CommitmentTypeIndicationAttributeInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The commitment-type-indication attribute contains an invalid combination of values..
        /// </summary>
        internal static string CommitmentTypeIndicationAttributeInvalidCombination {
            get {
                return ResourceManager.GetString("CommitmentTypeIndicationAttributeInvalidCombination", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unsupported targetFramework value &apos;{0}&apos;..
        /// </summary>
        internal static string Error_InvalidTargetFramework {
            get {
                return ResourceManager.GetString("Error_InvalidTargetFramework", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package signature certificate cannot be trusted as no client allow list found..
        /// </summary>
        internal static string Error_NoClientAllowList {
            get {
                return ResourceManager.GetString("Error_NoClientAllowList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package signature certificate fingerprint does not match any certificate fingerprint in client allow list..
        /// </summary>
        internal static string Error_NoMatchingClientCertificate {
            get {
                return ResourceManager.GetString("Error_NoMatchingClientCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package signature certificate fingerprint does not match any certificate fingerprint in repository allow list..
        /// </summary>
        internal static string Error_NoMatchingRepositoryCertificate {
            get {
                return ResourceManager.GetString("Error_NoMatchingRepositoryCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package signature certificate cannot be trusted as no repository allow list found..
        /// </summary>
        internal static string Error_NoRepoAllowList {
            get {
                return ResourceManager.GetString("Error_NoRepoAllowList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package signature file does not contain exactly one primary signature..
        /// </summary>
        internal static string Error_NotOnePrimarySignature {
            get {
                return ResourceManager.GetString("Error_NotOnePrimarySignature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package signature contains multiple repository countersignatures..
        /// </summary>
        internal static string Error_NotOneRepositoryCounterSignature {
            get {
                return ResourceManager.GetString("Error_NotOneRepositoryCounterSignature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A repository primary signature must not have a repository countersignature..
        /// </summary>
        internal static string Error_RepositorySignatureMustNotHaveARepositoryCountersignature {
            get {
                return ResourceManager.GetString("Error_RepositorySignatureMustNotHaveARepositoryCountersignature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Byte signature not found in package archive:  0x{0}.
        /// </summary>
        internal static string ErrorByteSignatureNotFound {
            get {
                return ResourceManager.GetString("ErrorByteSignatureNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Byte signature too big to seek in current stream position..
        /// </summary>
        internal static string ErrorByteSignatureTooBig {
            get {
                return ResourceManager.GetString("ErrorByteSignatureTooBig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The lifetime signing EKU is not supported..
        /// </summary>
        internal static string ErrorCertificateHasLifetimeSigningEKU {
            get {
                return ResourceManager.GetString("ErrorCertificateHasLifetimeSigningEKU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are duplicate packages: {0}.
        /// </summary>
        internal static string ErrorDuplicatePackages {
            get {
                return ResourceManager.GetString("ErrorDuplicatePackages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid allowedVersions for package id &apos;{0}&apos;: &apos;{1}&apos;.
        /// </summary>
        internal static string ErrorInvalidAllowedVersions {
            get {
                return ResourceManager.GetString("ErrorInvalidAllowedVersions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate chain validation failed with error(s): {0}.
        /// </summary>
        internal static string ErrorInvalidCertificateChain {
            get {
                return ResourceManager.GetString("ErrorInvalidCertificateChain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate chain validation failed for an unspecified reason..
        /// </summary>
        internal static string ErrorInvalidCertificateChainUnspecifiedReason {
            get {
                return ResourceManager.GetString("ErrorInvalidCertificateChainUnspecifiedReason", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid minClientVersion: &apos;{0}&apos;.
        /// </summary>
        internal static string ErrorInvalidMinClientVersion {
            get {
                return ResourceManager.GetString("ErrorInvalidMinClientVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid package archive..
        /// </summary>
        internal static string ErrorInvalidPackageArchive {
            get {
                return ResourceManager.GetString("ErrorInvalidPackageArchive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid package version for package id &apos;{0}&apos;: &apos;{1}&apos;.
        /// </summary>
        internal static string ErrorInvalidPackageVersion {
            get {
                return ResourceManager.GetString("ErrorInvalidPackageVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid package version for a dependency with id &apos;{0}&apos; in package &apos;{1}&apos;: &apos;{2}&apos;.
        /// </summary>
        internal static string ErrorInvalidPackageVersionForDependency {
            get {
                return ResourceManager.GetString("ErrorInvalidPackageVersionForDependency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest file not found at &apos;{0}&apos;.
        /// </summary>
        internal static string ErrorManifestFileNotFound {
            get {
                return ResourceManager.GetString("ErrorManifestFileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple timestamps are not accepted..
        /// </summary>
        internal static string ErrorMultipleTimestamps {
            get {
                return ResourceManager.GetString("ErrorMultipleTimestamps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The primary signature does not have a signing certificate..
        /// </summary>
        internal static string ErrorNoCertificate {
            get {
                return ResourceManager.GetString("ErrorNoCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The signature should be timestamped to enable long-term signature validity after the certificate has expired..
        /// </summary>
        internal static string ErrorNoTimestamp {
            get {
                return ResourceManager.GetString("ErrorNoTimestamp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Null or empty package id.
        /// </summary>
        internal static string ErrorNullOrEmptyPackageId {
            get {
                return ResourceManager.GetString("ErrorNullOrEmptyPackageId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package is not signed..
        /// </summary>
        internal static string ErrorPackageNotSigned {
            get {
                return ResourceManager.GetString("ErrorPackageNotSigned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package signature is invalid or cannot be verified on this platform..
        /// </summary>
        internal static string ErrorPackageSignatureInvalid {
            get {
                return ResourceManager.GetString("ErrorPackageSignatureInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Primary signature validation failed..
        /// </summary>
        internal static string ErrorSignatureVerificationFailed {
            get {
                return ResourceManager.GetString("ErrorSignatureVerificationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to delete temporary file &apos;{0}&apos;. Error: &apos;{1}&apos;..
        /// </summary>
        internal static string ErrorUnableToDeleteFile {
            get {
                return ResourceManager.GetString("ErrorUnableToDeleteFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Signed Zip64 packages are not supported..
        /// </summary>
        internal static string ErrorZip64NotSupported {
            get {
                return ResourceManager.GetString("ErrorZip64NotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exactly one {0} attribute is required..
        /// </summary>
        internal static string ExactlyOneAttributeRequired {
            get {
                return ResourceManager.GetString("ExactlyOneAttributeRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} attribute must have exactly one attribute value..
        /// </summary>
        internal static string ExactlyOneAttributeValueRequired {
            get {
                return ResourceManager.GetString("ExactlyOneAttributeValueRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to update file time for {0}: {1}.
        /// </summary>
        internal static string FailedFileTime {
            get {
                return ResourceManager.GetString("FailedFileTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fail to load packages.config as XML file. Please check it. .
        /// </summary>
        internal static string FailToLoadPackagesConfig {
            get {
                return ResourceManager.GetString("FailToLoadPackagesConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to write packages.config as XML file &apos;{0}&apos;. Error: &apos;{1}&apos;..
        /// </summary>
        internal static string FailToWritePackagesConfig {
            get {
                return ResourceManager.GetString("FailToWritePackagesConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find fallback package folder &apos;{0}&apos;..
        /// </summary>
        internal static string FallbackFolderNotFound {
            get {
                return ResourceManager.GetString("FallbackFolderNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument is invalid..
        /// </summary>
        internal static string InvalidArgument {
            get {
                return ResourceManager.GetString("InvalidArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ASN.1 data is invalid..
        /// </summary>
        internal static string InvalidAsn1 {
            get {
                return ResourceManager.GetString("InvalidAsn1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} This validation error occurred in a &apos;{1}&apos; element..
        /// </summary>
        internal static string InvalidNuspecElement {
            get {
                return ResourceManager.GetString("InvalidNuspecElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The nuspec contains an invalid entry &apos;{0}&apos; in package &apos;{1}&apos; ..
        /// </summary>
        internal static string InvalidNuspecEntry {
            get {
                return ResourceManager.GetString("InvalidNuspecEntry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The framework in the folder name of &apos;{0}&apos; in package &apos;{1}&apos; could not be parsed..
        /// </summary>
        internal static string InvalidPackageFrameworkFolderName {
            get {
                return ResourceManager.GetString("InvalidPackageFrameworkFolderName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package {0} signature is invalid..
        /// </summary>
        internal static string InvalidPackageSignature {
            get {
                return ResourceManager.GetString("InvalidPackageSignature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package contains an invalid package signature file..
        /// </summary>
        internal static string InvalidPackageSignatureFile {
            get {
                return ResourceManager.GetString("InvalidPackageSignatureFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package signature file entry is invalid. {0}.
        /// </summary>
        internal static string InvalidPackageSignatureFileEntry {
            get {
                return ResourceManager.GetString("InvalidPackageSignatureFileEntry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The central directory header field &apos;{0}&apos; has an invalid value ({1})..
        /// </summary>
        internal static string InvalidPackageSignatureFileEntryCentralDirectoryHeader {
            get {
                return ResourceManager.GetString("InvalidPackageSignatureFileEntryCentralDirectoryHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The local file header field &apos;{0}&apos; has an invalid value ({1})..
        /// </summary>
        internal static string InvalidPackageSignatureFileEntryLocalFileHeader {
            get {
                return ResourceManager.GetString("InvalidPackageSignatureFileEntryLocalFileHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The primary signature is invalid..
        /// </summary>
        internal static string InvalidPrimarySignature {
            get {
                return ResourceManager.GetString("InvalidPrimarySignature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The repository countersignature is invalid..
        /// </summary>
        internal static string InvalidRepositoryCountersignature {
            get {
                return ResourceManager.GetString("InvalidRepositoryCountersignature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package signature content is invalid..
        /// </summary>
        internal static string InvalidSignatureContent {
            get {
                return ResourceManager.GetString("InvalidSignatureContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The timestamp signature is invalid..
        /// </summary>
        internal static string InvalidTimestampSignature {
            get {
                return ResourceManager.GetString("InvalidTimestampSignature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The URL value is invalid..
        /// </summary>
        internal static string InvalidUrl {
            get {
                return ResourceManager.GetString("InvalidUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing {0} {1}..
        /// </summary>
        internal static string Log_InstallingPackage {
            get {
                return ResourceManager.GetString("Log_InstallingPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MinClientVersion already exists in packages.config.
        /// </summary>
        internal static string MinClientVersionAlreadyExist {
            get {
                return ResourceManager.GetString("MinClientVersionAlreadyExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nuspec file does not exist in package..
        /// </summary>
        internal static string MissingNuspec {
            get {
                return ResourceManager.GetString("MissingNuspec", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple {0} attributes are not allowed..
        /// </summary>
        internal static string MultipleAttributesDisallowed {
            get {
                return ResourceManager.GetString("MultipleAttributesDisallowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package contains multiple nuspec files..
        /// </summary>
        internal static string MultipleNuspecFiles {
            get {
                return ResourceManager.GetString("MultipleNuspecFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package contains multiple package signature files..
        /// </summary>
        internal static string MultiplePackageSignatureFiles {
            get {
                return ResourceManager.GetString("MultiplePackageSignatureFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; must contain an absolute path &apos;{1}&apos;..
        /// </summary>
        internal static string MustContainAbsolutePath {
            get {
                return ResourceManager.GetString("MustContainAbsolutePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package does not contain a valid package signature file..
        /// </summary>
        internal static string NoPackageSignatureFile {
            get {
                return ResourceManager.GetString("NoPackageSignatureFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to nuget-package-owners: {0}.
        /// </summary>
        internal static string NuGetPackageOwners {
            get {
                return ResourceManager.GetString("NuGetPackageOwners", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The nuget-package-owners attribute is invalid..
        /// </summary>
        internal static string NuGetPackageOwnersInvalid {
            get {
                return ResourceManager.GetString("NuGetPackageOwnersInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One or more package owner values are invalid..
        /// </summary>
        internal static string NuGetPackageOwnersInvalidValue {
            get {
                return ResourceManager.GetString("NuGetPackageOwnersInvalidValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to nuget-v3-service-index-url: {0}.
        /// </summary>
        internal static string NuGetV3ServiceIndexUrl {
            get {
                return ResourceManager.GetString("NuGetV3ServiceIndexUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The nuget-v3-service-index-url attribute is invalid..
        /// </summary>
        internal static string NuGetV3ServiceIndexUrlInvalid {
            get {
                return ResourceManager.GetString("NuGetV3ServiceIndexUrlInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The nuget-v3-service-index-url attribute value is invalid..
        /// </summary>
        internal static string NuGetV3ServiceIndexUrlInvalidValue {
            get {
                return ResourceManager.GetString("NuGetV3ServiceIndexUrlInvalidValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package entry already exists in packages.config. Id: {0}.
        /// </summary>
        internal static string PackageEntryAlreadyExist {
            get {
                return ResourceManager.GetString("PackageEntryAlreadyExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package entry does not exists in packages.config. Id: {0}, Version: {1}.
        /// </summary>
        internal static string PackageEntryNotExist {
            get {
                return ResourceManager.GetString("PackageEntryNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; package requires NuGet client version &apos;{1}&apos; or above, but the current NuGet version is &apos;{2}&apos;. To upgrade NuGet, please go to http://docs.nuget.org/consume/installing-nuget.
        /// </summary>
        internal static string PackageMinVersionNotSatisfied {
            get {
                return ResourceManager.GetString("PackageMinVersionNotSatisfied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Packages node does not exists in packages.config at {0}..
        /// </summary>
        internal static string PackagesNodeNotExist {
            get {
                return ResourceManager.GetString("PackagesNodeNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package stream should be seekable.
        /// </summary>
        internal static string PackageStreamShouldBeSeekable {
            get {
                return ResourceManager.GetString("PackageStreamShouldBeSeekable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The primary signature does not have a timestamp..
        /// </summary>
        internal static string PrimarySignatureHasNoTimestamp {
            get {
                return ResourceManager.GetString("PrimarySignatureHasNoTimestamp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Arguments {0} and {1} were out of bounds for the array..
        /// </summary>
        internal static string RangeOutOfBoundsForArray {
            get {
                return ResourceManager.GetString("RangeOutOfBoundsForArray", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The repository countersignature does not have a signing certificate..
        /// </summary>
        internal static string RepositoryCountersignatureHasNoCertificate {
            get {
                return ResourceManager.GetString("RepositoryCountersignatureHasNoCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The repository countersignature does not have a timestamp..
        /// </summary>
        internal static string RepositoryCountersignatureHasNoTimestamp {
            get {
                return ResourceManager.GetString("RepositoryCountersignatureHasNoTimestamp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package signature contains an invalid attribute: {0}.
        /// </summary>
        internal static string SignatureContainsInvalidAttribute {
            get {
                return ResourceManager.GetString("SignatureContainsInvalidAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Signature hash OID found: {0}.
        /// </summary>
        internal static string SignatureDebug_HashOidFound {
            get {
                return ResourceManager.GetString("SignatureDebug_HashOidFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package hash uses an unsupported hash algorithm..
        /// </summary>
        internal static string SignatureFailureInvalidHashAlgorithmOid {
            get {
                return ResourceManager.GetString("SignatureFailureInvalidHashAlgorithmOid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Signature Hash Algorithm: {0}.
        /// </summary>
        internal static string SignatureHashAlgorithm {
            get {
                return ResourceManager.GetString("SignatureHashAlgorithm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid general purpose bit flags. Expected &apos;{0}&apos;, actual &apos;{1}&apos;..
        /// </summary>
        internal static string SignatureInvalidGeneralPurposeBits {
            get {
                return ResourceManager.GetString("SignatureInvalidGeneralPurposeBits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The primary signature validity period has expired..
        /// </summary>
        internal static string SignatureNotTimeValid {
            get {
                return ResourceManager.GetString("SignatureNotTimeValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The signing certificate is not yet valid..
        /// </summary>
        internal static string SignatureNotYetValid {
            get {
                return ResourceManager.GetString("SignatureNotYetValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package integrity check failed..
        /// </summary>
        internal static string SignaturePackageIntegrityFailure {
            get {
                return ResourceManager.GetString("SignaturePackageIntegrityFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Signature type: {0}.
        /// </summary>
        internal static string SignatureType {
            get {
                return ResourceManager.GetString("SignatureType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package already contains a signature. Please remove the existing signature before adding a new signature..
        /// </summary>
        internal static string SignedPackageAlreadySigned {
            get {
                return ResourceManager.GetString("SignedPackageAlreadySigned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package stream read position cannot be longer than the length of the stream..
        /// </summary>
        internal static string SignedPackageArchiveIOExtraRead {
            get {
                return ResourceManager.GetString("SignedPackageArchiveIOExtraRead", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package stream read position cannot be before the current position in the stream..
        /// </summary>
        internal static string SignedPackageArchiveIOInvalidRead {
            get {
                return ResourceManager.GetString("SignedPackageArchiveIOInvalidRead", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package is not signed. Unable to remove signature from an unsigned package..
        /// </summary>
        internal static string SignedPackageNotSignedOnRemove {
            get {
                return ResourceManager.GetString("SignedPackageNotSignedOnRemove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package is not signed. Unable to verify signature from an unsigned package..
        /// </summary>
        internal static string SignedPackageNotSignedOnVerify {
            get {
                return ResourceManager.GetString("SignedPackageNotSignedOnVerify", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package already contains a repository countersignature. Please remove the existing signature before adding a new repository countersignature..
        /// </summary>
        internal static string SignedPackagePackageAlreadyCountersigned {
            get {
                return ResourceManager.GetString("SignedPackagePackageAlreadyCountersigned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package was not opened correctly to perform signature operations. Please use a Stream-based constructor to have access to signature attributes of the package..
        /// </summary>
        internal static string SignedPackageUnableToAccessSignature {
            get {
                return ResourceManager.GetString("SignedPackageUnableToAccessSignature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following certificate cannot be used for package signing as the private key provider is unsupported:.
        /// </summary>
        internal static string SignFailureCertificateInvalidProviderType {
            get {
                return ResourceManager.GetString("SignFailureCertificateInvalidProviderType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} and {1} should be different. Package signing cannot be done in place..
        /// </summary>
        internal static string SigningCannotBeDoneInPlace {
            get {
                return ResourceManager.GetString("SigningCannotBeDoneInPlace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The signing-certificate attribute is not allowed..
        /// </summary>
        internal static string SigningCertificateAttributeMustNotBePresent {
            get {
                return ResourceManager.GetString("SigningCertificateAttributeMustNotBePresent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A certificate referenced by the signing-certificate attribute could not be found..
        /// </summary>
        internal static string SigningCertificateCertificateNotFound {
            get {
                return ResourceManager.GetString("SigningCertificateCertificateNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The signing certificate does not meet a minimum public key length requirement..
        /// </summary>
        internal static string SigningCertificateFailsPublicKeyLengthRequirement {
            get {
                return ResourceManager.GetString("SigningCertificateFailsPublicKeyLengthRequirement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The signing certificate has an unsupported signature algorithm..
        /// </summary>
        internal static string SigningCertificateHasUnsupportedSignatureAlgorithm {
            get {
                return ResourceManager.GetString("SigningCertificateHasUnsupportedSignatureAlgorithm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The signing-certificate attribute is invalid..
        /// </summary>
        internal static string SigningCertificateInvalid {
            get {
                return ResourceManager.GetString("SigningCertificateInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Either the signing-certificate or signing-certificate-v2 attribute must be present..
        /// </summary>
        internal static string SigningCertificateV1OrV2AttributeMustBePresent {
            get {
                return ResourceManager.GetString("SigningCertificateV1OrV2AttributeMustBePresent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A certificate referenced by the signing-certificate-v2 attribute could not be found..
        /// </summary>
        internal static string SigningCertificateV2CertificateNotFound {
            get {
                return ResourceManager.GetString("SigningCertificateV2CertificateNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The signing-certificate-v2 attribute is invalid..
        /// </summary>
        internal static string SigningCertificateV2Invalid {
            get {
                return ResourceManager.GetString("SigningCertificateV2Invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The signing-certificate-v2 attribute does not have exactly one attribute value..
        /// </summary>
        internal static string SigningCertificateV2NotExactlyOneAttributeValue {
            get {
                return ResourceManager.GetString("SigningCertificateV2NotExactlyOneAttributeValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The signing-certificate-v2 attribute uses an unsupported hash algorithm..
        /// </summary>
        internal static string SigningCertificateV2UnsupportedHashAlgorithm {
            get {
                return ResourceManager.GetString("SigningCertificateV2UnsupportedHashAlgorithm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The stream must be readable..
        /// </summary>
        internal static string StreamMustBeReadable {
            get {
                return ResourceManager.GetString("StreamMustBeReadable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The stream must be seekable..
        /// </summary>
        internal static string StreamMustBeSeekable {
            get {
                return ResourceManager.GetString("StreamMustBeSeekable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to String argument &apos;{0}&apos; cannot be null or empty.
        /// </summary>
        internal static string StringCannotBeNullOrEmpty {
            get {
                return ResourceManager.GetString("StringCannotBeNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The timestamp certificate does not meet a minimum public key length requirement..
        /// </summary>
        internal static string TimestampCertificateFailsPublicKeyLengthRequirement {
            get {
                return ResourceManager.GetString("TimestampCertificateFailsPublicKeyLengthRequirement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The timestamp service&apos;s certificate has a valid time in the future: {0}.
        /// </summary>
        internal static string TimestampCertificateInvalid {
            get {
                return ResourceManager.GetString("TimestampCertificateInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The timestamper URL &apos;{0}&apos; has an invalid URI scheme. The supported schemes are &apos;{1}&apos; and &apos;{2}&apos;..
        /// </summary>
        internal static string TimestampFailureInvalidHttpScheme {
            get {
                return ResourceManager.GetString("TimestampFailureInvalidHttpScheme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The timestamp response is invalid.  Nonces did not match..
        /// </summary>
        internal static string TimestampFailureNonceMismatch {
            get {
                return ResourceManager.GetString("TimestampFailureNonceMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The timestamp integrity check failed..
        /// </summary>
        internal static string TimestampIntegrityCheckFailed {
            get {
                return ResourceManager.GetString("TimestampIntegrityCheckFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The signature contains an invalid timestamp..
        /// </summary>
        internal static string TimestampInvalid {
            get {
                return ResourceManager.GetString("TimestampInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The timestamp&apos;s message imprint uses an unsupported hash algorithm..
        /// </summary>
        internal static string TimestampMessageImprintUnsupportedHashAlgorithm {
            get {
                return ResourceManager.GetString("TimestampMessageImprintUnsupportedHashAlgorithm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The timestamp signature does not have a signing certificate..
        /// </summary>
        internal static string TimestampNoCertificate {
            get {
                return ResourceManager.GetString("TimestampNoCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The timestamp signing certificate is not yet valid..
        /// </summary>
        internal static string TimestampNotYetValid {
            get {
                return ResourceManager.GetString("TimestampNotYetValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timestamp service&apos;s response does not meet the NuGet package signature specification: &apos;{0}&apos;..
        /// </summary>
        internal static string TimestampResponseExceptionGeneral {
            get {
                return ResourceManager.GetString("TimestampResponseExceptionGeneral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timestamp signature validation failed..
        /// </summary>
        internal static string TimestampSignatureValidationFailed {
            get {
                return ResourceManager.GetString("TimestampSignatureValidationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The timestamp certificate has an unsupported signature algorithm..
        /// </summary>
        internal static string TimestampUnsupportedSignatureAlgorithm {
            get {
                return ResourceManager.GetString("TimestampUnsupportedSignatureAlgorithm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timestamp: {0}.
        /// </summary>
        internal static string TimestampValue {
            get {
                return ResourceManager.GetString("TimestampValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while updating packages.config. The file was closed before the entry could be added..
        /// </summary>
        internal static string UnableToAddEntry {
            get {
                return ResourceManager.GetString("UnableToAddEntry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to parse the current NuGet client version..
        /// </summary>
        internal static string UnableToParseClientVersion {
            get {
                return ResourceManager.GetString("UnableToParseClientVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package hash information could not be read from the package signature..
        /// </summary>
        internal static string UnableToReadPackageHashInformation {
            get {
                return ResourceManager.GetString("UnableToReadPackageHashInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An unexpected error occurred while verifying a package signature..
        /// </summary>
        internal static string UnexpectedPackageSignatureVerificationError {
            get {
                return ResourceManager.GetString("UnexpectedPackageSignatureVerificationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The primary signature and repository countersignature are unrelated..
        /// </summary>
        internal static string UnrelatedSignatures {
            get {
                return ResourceManager.GetString("UnrelatedSignatures", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ASN.1 data is unsupported..
        /// </summary>
        internal static string UnsupportedAsn1 {
            get {
                return ResourceManager.GetString("UnsupportedAsn1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package signature format version is not supported. Updating your client may solve this problem..
        /// </summary>
        internal static string UnsupportedSignatureFormatVersion {
            get {
                return ResourceManager.GetString("UnsupportedSignatureFormatVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Verifying signature with author certificate: {0}.
        /// </summary>
        internal static string VerificationAuthorCertDisplay {
            get {
                return ResourceManager.GetString("VerificationAuthorCertDisplay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Verifying timestamp with timestamping service certificate: {0}.
        /// </summary>
        internal static string VerificationTimestamperCertDisplay {
            get {
                return ResourceManager.GetString("VerificationTimestamperCertDisplay", resourceCulture);
            }
        }
    }
}
