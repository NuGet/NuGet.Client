// Copyright (c) .NET Foundation. All rights reserved.
// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.

// This file is used by Code Analysis to maintain SuppressMessage
// attributes that are applied to this project.
// Project-level suppressions either have no target or are given
// a specific target and scoped to a namespace, type, member, etc.

using System.Diagnostics.CodeAnalysis;

[assembly: SuppressMessage("Build", "CA1825:Avoid unnecessary zero-length array allocations.  Use Array.Empty<PackageDependency>() instead.", Justification = "<Pending>", Scope = "member", Target = "~F:NuGet.Packaging.Core.PackageDependencyInfo.EmptyDependencies")]
[assembly: SuppressMessage("Build", "CA2211:Non-constant fields should not be visible", Justification = "<Pending>", Scope = "member", Target = "~F:NuGet.Packaging.Licenses.NuGetLicenseData.LicenseListVersion")]
[assembly: SuppressMessage("Build", "CA1823:Unused field 'SchemaVersionAttributeName'.", Justification = "<Pending>", Scope = "member", Target = "~F:NuGet.Packaging.Manifest.SchemaVersionAttributeName")]
[assembly: SuppressMessage("Build", "CA1823:Unused field 'DefaultContentType'.", Justification = "<Pending>", Scope = "member", Target = "~F:NuGet.Packaging.PackageBuilder.DefaultContentType")]
[assembly: SuppressMessage("Build", "CA2213:'PackagesConfigWriter' contains field '_stream' that is of IDisposable type 'Stream', but it is never disposed. Change the Dispose method on 'PackagesConfigWriter' to call Close or Dispose on this field.", Justification = "<Pending>", Scope = "member", Target = "~F:NuGet.Packaging.PackagesConfigWriter._stream")]
[assembly: SuppressMessage("Build", "CA1802:Field 'SampleDescription' is declared as 'readonly' but is initialized with a constant value. Mark this field as 'const' instead.", Justification = "<Pending>", Scope = "member", Target = "~F:NuGet.Packaging.Rules.DefaultManifestValuesRule.SampleDescription")]
[assembly: SuppressMessage("Build", "CA1802:Field 'SampleManifestDependencyId' is declared as 'readonly' but is initialized with a constant value. Mark this field as 'const' instead.", Justification = "<Pending>", Scope = "member", Target = "~F:NuGet.Packaging.Rules.DefaultManifestValuesRule.SampleManifestDependencyId")]
[assembly: SuppressMessage("Build", "CA1802:Field 'SampleManifestDependencyVersion' is declared as 'readonly' but is initialized with a constant value. Mark this field as 'const' instead.", Justification = "<Pending>", Scope = "member", Target = "~F:NuGet.Packaging.Rules.DefaultManifestValuesRule.SampleManifestDependencyVersion")]
[assembly: SuppressMessage("Build", "CA1802:Field 'SampleReleaseNotes' is declared as 'readonly' but is initialized with a constant value. Mark this field as 'const' instead.", Justification = "<Pending>", Scope = "member", Target = "~F:NuGet.Packaging.Rules.DefaultManifestValuesRule.SampleReleaseNotes")]
[assembly: SuppressMessage("Build", "CA1802:Field 'SampleTags' is declared as 'readonly' but is initialized with a constant value. Mark this field as 'const' instead.", Justification = "<Pending>", Scope = "member", Target = "~F:NuGet.Packaging.Rules.DefaultManifestValuesRule.SampleTags")]
[assembly: SuppressMessage("Build", "CA1823:Unused field '_rfc3161RequestTimeoutSeconds'.", Justification = "<Pending>", Scope = "member", Target = "~F:NuGet.Packaging.Signing.Rfc3161TimestampProvider._rfc3161RequestTimeoutSeconds")]
[assembly: SuppressMessage("Build", "CA1823:Unused field '_millisecondsPerMicrosecond'.", Justification = "<Pending>", Scope = "member", Target = "~F:NuGet.Packaging.Signing.Rfc3161TimestampVerificationUtility._millisecondsPerMicrosecond")]
[assembly: SuppressMessage("Build", "CA1823:Unused field 'INVALID_PROVIDER_TYPE_HRESULT'.", Justification = "<Pending>", Scope = "member", Target = "~F:NuGet.Packaging.Signing.X509SignatureProvider.INVALID_PROVIDER_TYPE_HRESULT")]
[assembly: SuppressMessage("Build", "CA1303:Method 'SelectionCriteria ManagedCodeCriteria.ForFrameworkAndRuntime(NuGetFramework framework, string runtimeIdentifier)' passes a literal string as parameter 'message' of a call to 'NotSupportedException.NotSupportedException(string message)'. Retrieve the following string(s) from a resource table instead: \"FallbackFramework is not supported.\".", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Client.ManagedCodeConventions.ManagedCodeCriteria.ForFrameworkAndRuntime(NuGet.Frameworks.NuGetFramework,System.String)~NuGet.ContentModel.SelectionCriteria")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'ContentItemGroup ContentItemCollection.FindBestItemGroup(SelectionCriteria criteria, params PatternSet[] definitions)', validate parameter 'criteria' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.ContentModel.ContentItemCollection.FindBestItemGroup(NuGet.ContentModel.SelectionCriteria,NuGet.ContentModel.PatternSet[])~NuGet.ContentModel.ContentItemGroup")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'IEnumerable<ContentItemGroup> ContentItemCollection.FindItemGroups(PatternSet definition)', validate parameter 'definition' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.ContentModel.ContentItemCollection.FindItemGroups(NuGet.ContentModel.PatternSet)~System.Collections.Generic.IEnumerable{NuGet.ContentModel.ContentItemGroup}")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'IEnumerable<ContentItem> ContentItemCollection.FindItems(PatternSet definition)', validate parameter 'definition' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.ContentModel.ContentItemCollection.FindItems(NuGet.ContentModel.PatternSet)~System.Collections.Generic.IEnumerable{NuGet.ContentModel.ContentItem}")]
[assembly: SuppressMessage("Build", "CA1822:Member FindItemsImplementation does not access instance data and can be marked as static (Shared in VisualBasic)", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.ContentModel.ContentItemCollection.FindItemsImplementation(NuGet.ContentModel.PatternSet,System.Collections.Generic.IEnumerable{NuGet.ContentModel.Asset})~System.Collections.Generic.IEnumerable{NuGet.ContentModel.ContentItem}")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'void ContentItemCollection.Load(IEnumerable<string> paths)', validate parameter 'paths' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.ContentModel.ContentItemCollection.Load(System.Collections.Generic.IEnumerable{System.String})")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'PatternExpression.PatternExpression(PatternDefinition pattern)', validate parameter 'pattern' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.ContentModel.Infrastructure.PatternExpression.#ctor(NuGet.ContentModel.PatternDefinition)")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'ContentItem PatternExpression.Match(string path, IReadOnlyDictionary<string, ContentPropertyDefinition> propertyDefinitions)', validate parameter 'path' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.ContentModel.Infrastructure.PatternExpression.Match(System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,NuGet.ContentModel.ContentPropertyDefinition})~NuGet.ContentModel.ContentItem")]
[assembly: SuppressMessage("Build", "CA1305:The behavior of 'string.Format(string, object)' could vary based on the current user's locale settings. Replace this call in 'PatternExpression.TokenSegment.TryMatch(ref ContentItem, string, IReadOnlyDictionary<string, ContentPropertyDefinition>, int, out int)' with a call to 'string.Format(IFormatProvider, string, params object[])'.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.ContentModel.Infrastructure.PatternExpression.TokenSegment.TryMatch(NuGet.ContentModel.ContentItem@,System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,NuGet.ContentModel.ContentPropertyDefinition},System.Int32,System.Int32@)~System.Boolean")]
[assembly: SuppressMessage("Build", "CA2225:Provide a method named 'ToPatternDefinition' or 'FromString' as an alternate for operator op_Implicit.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.ContentModel.PatternDefinition.op_Implicit(System.String)~NuGet.ContentModel.PatternDefinition")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'void CollectionExtensions.AddRange<T>(ICollection<T> collection, IEnumerable<T> items)', validate parameter 'collection' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.CollectionExtensions.AddRange``1(System.Collections.Generic.ICollection{``0},System.Collections.Generic.IEnumerable{``0})")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'IReadOnlyList<PackageType> NuspecUtility.GetPackageTypes(XElement metadataNode, bool useMetadataNamespace)', validate parameter 'metadataNode' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Core.NuspecUtility.GetPackageTypes(System.Xml.Linq.XElement,System.Boolean)~System.Collections.Generic.IReadOnlyList{NuGet.Packaging.Core.PackageType}")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'bool NuspecUtility.IsServiceable(XElement metadataNode)', validate parameter 'metadataNode' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Core.NuspecUtility.IsServiceable(System.Xml.Linq.XElement)~System.Boolean")]
[assembly: SuppressMessage("Build", "CA2208:Method .ctor passes parameter name 'id' as the message argument to a ArgumentException constructor. Replace this argument with a descriptive message and pass the parameter name in the correct position.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Core.PackageDependency.#ctor(System.String,NuGet.Versioning.VersionRange,System.Collections.Generic.IReadOnlyList{System.String},System.Collections.Generic.IReadOnlyList{System.String})")]
[assembly: SuppressMessage("Build", "CA1303:Method 'PackageDependency.PackageDependency(string id, VersionRange versionRange, IReadOnlyList<string> include, IReadOnlyList<string> exclude)' passes a literal string as parameter 'message' of a call to 'ArgumentException.ArgumentException(string message)'. Retrieve the following string(s) from a resource table instead: \"id\".", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Core.PackageDependency.#ctor(System.String,NuGet.Versioning.VersionRange,System.Collections.Generic.IReadOnlyList{System.String},System.Collections.Generic.IReadOnlyList{System.String})")]
[assembly: SuppressMessage("Build", "CA1507:Use nameof in place of string literal 'versionRangeComparer'", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Core.PackageDependencyComparer.#ctor(NuGet.Versioning.IVersionRangeComparer)")]
[assembly: SuppressMessage("Build", "CA1308:In method 'GetHashCode', replace the call to 'ToLowerInvariant' with 'ToUpperInvariant'.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Core.PackageDependencyComparer.GetHashCode(NuGet.Packaging.Core.PackageDependency)~System.Int32")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'PackageDependencyInfo.PackageDependencyInfo(PackageIdentity identity, IEnumerable<PackageDependency> dependencies)', validate parameter 'identity' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Core.PackageDependencyInfo.#ctor(NuGet.Packaging.Core.PackageIdentity,System.Collections.Generic.IEnumerable{NuGet.Packaging.Core.PackageDependency})")]
[assembly: SuppressMessage("Build", "CA1507:Use nameof in place of string literal 'identityComparer'", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Core.PackageDependencyInfoComparer.#ctor(NuGet.Packaging.Core.IPackageIdentityComparer,NuGet.Packaging.Core.PackageDependencyComparer)")]
[assembly: SuppressMessage("Build", "CA1507:Use nameof in place of string literal 'id'", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Core.PackageIdentity.#ctor(System.String,NuGet.Versioning.NuGetVersion)")]
[assembly: SuppressMessage("Build", "CA1507:Use nameof in place of string literal 'versionComparer'", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Core.PackageIdentityComparer.#ctor(NuGet.Versioning.IVersionComparer)")]
[assembly: SuppressMessage("Build", "CA1054:Change the type of parameter url of method RepositoryMetadata.RepositoryMetadata(string, string, string, string) from string to System.Uri, or provide an overload to RepositoryMetadata.RepositoryMetadata(string, string, string, string) that allows url to be passed as a System.Uri object.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Core.RepositoryMetadata.#ctor(System.String,System.String,System.String,System.String)")]
[assembly: SuppressMessage("Build", "CA2208:Method .ctor passes parameter name 'assemblyName' as the message argument to a ArgumentException constructor. Replace this argument with a descriptive message and pass the parameter name in the correct position.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.FrameworkAssemblyReference.#ctor(System.String,System.Collections.Generic.IEnumerable{NuGet.Frameworks.NuGetFramework})")]
[assembly: SuppressMessage("Build", "CA1303:Method 'FrameworkAssemblyReference.FrameworkAssemblyReference(string assemblyName, IEnumerable<NuGetFramework> supportedFrameworks)' passes a literal string as parameter 'message' of a call to 'ArgumentException.ArgumentException(string message)'. Retrieve the following string(s) from a resource table instead: \"assemblyName\".", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.FrameworkAssemblyReference.#ctor(System.String,System.Collections.Generic.IEnumerable{NuGet.Frameworks.NuGetFramework})")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'FrameworkName FrameworkNameUtility.ParseFrameworkFolderName(string path, bool strictParsing, out string effectivePath)', validate parameter 'path' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.FrameworkNameUtility.ParseFrameworkFolderName(System.String,System.Boolean,System.String@)~System.Runtime.Versioning.FrameworkName")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'int FrameworkReference.Compare(FrameworkReference x, FrameworkReference y)', validate parameter 'x' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.FrameworkReference.Compare(NuGet.Packaging.FrameworkReference,NuGet.Packaging.FrameworkReference)~System.Int32")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'string FrameworksExtensions.GetFrameworkString(NuGetFramework self)', validate parameter 'self' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.FrameworksExtensions.GetFrameworkString(NuGet.Frameworks.NuGetFramework)~System.String")]
[assembly: SuppressMessage("Build", "CA1307:The behavior of 'string.Equals(string)' could vary based on the current user's locale settings. Replace this call in 'NuGet.Packaging.LicenseMetadata.Equals(NuGet.Packaging.LicenseMetadata)' with a call to 'string.Equals(string, System.StringComparison)'.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.LicenseMetadata.Equals(NuGet.Packaging.LicenseMetadata)~System.Boolean")]
[assembly: SuppressMessage("Build", "CA1305:The behavior of 'string.Format(string, object)' could vary based on the current user's locale settings. Replace this call in 'LicenseMetadata.GenerateLicenseServiceLink(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.LicenseMetadata.GenerateLicenseServiceLink(System.String)~System.String")]
[assembly: SuppressMessage("Build", "CA1801:Parameter license of method GenerateLicenseServiceLink is never used. Remove the parameter or use it in the method body.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.LicenseMetadata.GenerateLicenseServiceLink(System.String)~System.String")]
[assembly: SuppressMessage("Build", "CA1305:The behavior of 'char.ToString()' could vary based on the current user's locale settings. Replace this call in 'LicenseExpressionTokenizer.ParseBracket(char)' with a call to 'char.ToString(IFormatProvider)'.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Licenses.LicenseExpressionTokenizer.ParseBracket(System.Char)~NuGet.Packaging.Licenses.LicenseExpressionToken")]
[assembly: SuppressMessage("Build", "CA1822:Member ParseBracket does not access instance data and can be marked as static (Shared in VisualBasic)", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Licenses.LicenseExpressionTokenizer.ParseBracket(System.Char)~NuGet.Packaging.Licenses.LicenseExpressionToken")]
[assembly: SuppressMessage("Build", "CA1822:Member ParseTokenType does not access instance data and can be marked as static (Shared in VisualBasic)", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Licenses.LicenseExpressionTokenizer.ParseTokenType(System.String)~NuGet.Packaging.Licenses.LicenseExpressionToken")]
[assembly: SuppressMessage("Build", "CA1304:The behavior of 'string.ToUpper()' could vary based on the current user's locale settings. Replace this call in 'LogicalOperator.ToString()' with a call to 'string.ToUpper(CultureInfo)'.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Licenses.LogicalOperator.ToString~System.String")]
[assembly: SuppressMessage("Build", "CA1307:The behavior of 'string.Equals(string)' could vary based on the current user's locale settings. Replace this call in 'NuGet.Packaging.Licenses.NuGetLicense.ProcessLicenseNotInStandardData(string, bool, bool)' with a call to 'string.Equals(string, System.StringComparison)'.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Licenses.NuGetLicense.ProcessLicenseNotInStandardData(System.String,System.Boolean,System.Boolean)~NuGet.Packaging.Licenses.NuGetLicense")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'bool NuGetLicenseExpressionExtensions.HasOnlyStandardIdentifiers(NuGetLicenseExpression expression)', validate parameter 'expression' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Licenses.NuGetLicenseExpressionExtensions.HasOnlyStandardIdentifiers(NuGet.Packaging.Licenses.NuGetLicenseExpression)~System.Boolean")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'bool NuGetLicenseExpressionExtensions.IsUnlicensed(NuGetLicense license)', validate parameter 'license' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Licenses.NuGetLicenseExpressionExtensions.IsUnlicensed(NuGet.Packaging.Licenses.NuGetLicense)~System.Boolean")]
[assembly: SuppressMessage("Build", "CA1307:The behavior of 'string.Equals(string)' could vary based on the current user's locale settings. Replace this call in 'NuGet.Packaging.Licenses.NuGetLicenseExpressionExtensions.IsUnlicensed(NuGet.Packaging.Licenses.NuGetLicense)' with a call to 'string.Equals(string, System.StringComparison)'.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Licenses.NuGetLicenseExpressionExtensions.IsUnlicensed(NuGet.Packaging.Licenses.NuGetLicense)~System.Boolean")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'bool NuGetLicenseExpressionExtensions.IsUnlicensed(NuGetLicenseExpression expression)', validate parameter 'expression' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Licenses.NuGetLicenseExpressionExtensions.IsUnlicensed(NuGet.Packaging.Licenses.NuGetLicenseExpression)~System.Boolean")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'void NuGetLicenseExpressionExtensions.OnEachLeafNode(NuGetLicenseExpression expression, Action<NuGetLicense> licenseProcessor, Action<NuGetLicenseException> exceptionProcessor)', validate parameter 'expression' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Licenses.NuGetLicenseExpressionExtensions.OnEachLeafNode(NuGet.Packaging.Licenses.NuGetLicenseExpression,System.Action{NuGet.Packaging.Licenses.NuGetLicense},System.Action{NuGet.Packaging.Licenses.NuGetLicenseException})")]
[assembly: SuppressMessage("Build", "CA1303:Method 'NuGetLicenseExpression NuGetLicenseExpressionParser.Parse(string expression)' passes a literal string as parameter 'message' of a call to 'NuGetLicenseExpressionParsingException.NuGetLicenseExpressionParsingException(string message)'. Retrieve the following string(s) from a resource table instead: \"Should not happen. File a bug with repro steps on NuGet/Home if seen.\".", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Licenses.NuGetLicenseExpressionParser.Parse(System.String)~NuGet.Packaging.Licenses.NuGetLicenseExpression")]
[assembly: SuppressMessage("Build", "CA1801:Parameter document of method CheckSchemaVersion is never used. Remove the parameter or use it in the method body.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Manifest.CheckSchemaVersion(System.Xml.Linq.XDocument)")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'void Manifest.Validate(Manifest manifest)', validate parameter 'manifest' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Manifest.Validate(NuGet.Packaging.Manifest)")]
[assembly: SuppressMessage("Build", "CA1801:Parameter document of method ValidateManifestSchema is never used. Remove the parameter or use it in the method body.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Manifest.ValidateManifestSchema(System.Xml.Linq.XDocument,System.String)")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'ManifestMetadata.ManifestMetadata(IPackageMetadata copy)', validate parameter 'copy' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.ManifestMetadata.#ctor(NuGet.Packaging.IPackageMetadata)")]
[assembly: SuppressMessage("Build", "CA1054:Change the type of parameter iconUrl of method ManifestMetadata.SetIconUrl(string) from string to System.Uri, or provide an overload to ManifestMetadata.SetIconUrl(string) that allows iconUrl to be passed as a System.Uri object.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.ManifestMetadata.SetIconUrl(System.String)")]
[assembly: SuppressMessage("Build", "CA1054:Change the type of parameter licenseUrl of method ManifestMetadata.SetLicenseUrl(string) from string to System.Uri, or provide an overload to ManifestMetadata.SetLicenseUrl(string) that allows licenseUrl to be passed as a System.Uri object.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.ManifestMetadata.SetLicenseUrl(System.String)")]
[assembly: SuppressMessage("Build", "CA1054:Change the type of parameter projectUrl of method ManifestMetadata.SetProjectUrl(string) from string to System.Uri, or provide an overload to ManifestMetadata.SetProjectUrl(string) that allows projectUrl to be passed as a System.Uri object.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.ManifestMetadata.SetProjectUrl(System.String)")]
[assembly: SuppressMessage("Build", "CA1307:The behavior of 'string.Equals(string)' could vary based on the current user's locale settings. Replace this call in 'NuGet.Packaging.ManifestReader.ReadMetadata(System.Xml.Linq.XElement)' with a call to 'string.Equals(string, System.StringComparison)'.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.ManifestReader.ReadMetadata(System.Xml.Linq.XElement)~NuGet.Packaging.ManifestMetadata")]
[assembly: SuppressMessage("Build", "CA1305:The behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings. Replace this call in 'ManifestReader.ReadMetadataValue(ManifestMetadata, XElement, HashSet<string>)' with a call to 'string.Format(IFormatProvider, string, params object[])'.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.ManifestReader.ReadMetadataValue(NuGet.Packaging.ManifestMetadata,System.Xml.Linq.XElement,System.Collections.Generic.HashSet{System.String})")]
[assembly: SuppressMessage("Build", "CA2200:Re-throwing caught exception changes stack information.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.ManifestReader.ReadMetadataValue(NuGet.Packaging.ManifestMetadata,System.Xml.Linq.XElement,System.Collections.Generic.HashSet{System.String})")]
[assembly: SuppressMessage("Build", "CA1806:ApplyUMaskToUnixPermissionsFromLibc calls PosixUMask but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.NuGetExtractionFileIO.ApplyUMaskToUnixPermissionsFromLibc")]
[assembly: SuppressMessage("Build", "CA1031:Modify 'ApplyUMaskToUnixPermissionsFromProcess' to catch a more specific allowed exception type, or rethrow the exception.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.NuGetExtractionFileIO.ApplyUMaskToUnixPermissionsFromProcess~System.Boolean")]
[assembly: SuppressMessage("Build", "CA2000:Call System.IDisposable.Dispose on object created by 'new SafeFileHandle((IntPtr)fd, ownsHandle: true)' before all references to it are out of scope.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.NuGetExtractionFileIO.DotnetCoreCreateFile(System.String)~System.IO.FileStream")]
[assembly: SuppressMessage("Build", "CA1303:Method 'FileStream NuGetExtractionFileIO.DotnetCoreCreateFile(string path)' passes a literal string as parameter 'message' of a call to 'InvalidOperationException.InvalidOperationException(string message)'. Retrieve the following string(s) from a resource table instead: \"libc creat failed, but File.Create did not\".", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.NuGetExtractionFileIO.DotnetCoreCreateFile(System.String)~System.IO.FileStream")]
[assembly: SuppressMessage("Build", "CA1806:MonoPosixCreateFile calls PosixChmod but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.NuGetExtractionFileIO.MonoPosixCreateFile(System.String)~System.IO.FileStream")]
[assembly: SuppressMessage("Build", "CA1307:The behavior of 'string.Equals(string)' could vary based on the current user's locale settings. Replace this call in 'NuGet.Packaging.NupkgMetadataFile.Equals(NuGet.Packaging.NupkgMetadataFile)' with a call to 'string.Equals(string, System.StringComparison)'.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.NupkgMetadataFile.Equals(NuGet.Packaging.NupkgMetadataFile)~System.Boolean")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'NupkgMetadataFile NupkgMetadataFileFormat.Read(TextReader reader, ILogger log, string path)', validate parameter 'log' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.NupkgMetadataFileFormat.Read(System.IO.TextReader,NuGet.Common.ILogger,System.String)~NuGet.Packaging.NupkgMetadataFile")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'void NupkgMetadataFileFormat.Write(TextWriter textWriter, NupkgMetadataFile hashFile)', validate parameter 'hashFile' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.NupkgMetadataFileFormat.Write(System.IO.TextWriter,NuGet.Packaging.NupkgMetadataFile)")]
[assembly: SuppressMessage("Build", "CA1801:Parameter frameworkProvider of method .ctor is never used. Remove the parameter or use it in the method body.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackageArchiveReader.#ctor(System.IO.Stream,NuGet.Frameworks.IFrameworkNameProvider,NuGet.Frameworks.IFrameworkCompatibilityProvider)")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'IEnumerable<string> PackageArchiveReader.CopyFiles(string destination, IEnumerable<string> packageFiles, ExtractPackageFileDelegate extractFile, ILogger logger, CancellationToken token)', validate parameter 'packageFiles' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackageArchiveReader.CopyFiles(System.String,System.Collections.Generic.IEnumerable{System.String},NuGet.Packaging.Core.ExtractPackageFileDelegate,NuGet.Common.ILogger,System.Threading.CancellationToken)~System.Collections.Generic.IEnumerable{System.String}")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'IEnumerable<ZipFilePair> PackageArchiveReader.EnumeratePackageEntries(IEnumerable<string> packageFiles, string packageDirectory)', validate parameter 'packageFiles' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackageArchiveReader.EnumeratePackageEntries(System.Collections.Generic.IEnumerable{System.String},System.String)~System.Collections.Generic.IEnumerable{NuGet.Packaging.ZipFilePair}")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'Stream PackageArchiveReader.GetStream(string path)', validate parameter 'path' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackageArchiveReader.GetStream(System.String)~System.IO.Stream")]
[assembly: SuppressMessage("Build", "CA1801:Parameter deterministic of method .ctor is never used. Remove the parameter or use it in the method body.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackageBuilder.#ctor(System.Boolean,System.Boolean)")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'void PackageBuilder.AddFiles(string basePath, string source, string destination, string exclude = null)', validate parameter 'source' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackageBuilder.AddFiles(System.String,System.String,System.String,System.String)")]
[assembly: SuppressMessage("Build", "CA1305:The behavior of 'Guid.ToString(string)' could vary based on the current user's locale settings. Replace this call in 'PackageBuilder.CalcPsmdcpName()' with a call to 'Guid.ToString(string, IFormatProvider)'.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackageBuilder.CalcPsmdcpName~System.String")]
[assembly: SuppressMessage("Build", "CA1822:Member CreatePackageFileEntry does not access instance data and can be marked as static (Shared in VisualBasic)", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackageBuilder.CreatePackageFileEntry(System.IO.Compression.ZipArchive,System.String,System.DateTimeOffset,System.IO.Compression.CompressionLevel)~System.IO.Compression.ZipArchiveEntry")]
[assembly: SuppressMessage("Build", "CA1822:Member GenerateRelationshipId does not access instance data and can be marked as static (Shared in VisualBasic)", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackageBuilder.GenerateRelationshipId(System.String)~System.String")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'void PackageBuilder.Populate(ManifestMetadata manifestMetadata)', validate parameter 'manifestMetadata' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackageBuilder.Populate(NuGet.Packaging.ManifestMetadata)")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'void PackageBuilder.PopulateFiles(string basePath, IEnumerable<ManifestFile> files)', validate parameter 'files' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackageBuilder.PopulateFiles(System.String,System.Collections.Generic.IEnumerable{NuGet.Packaging.ManifestFile})")]
[assembly: SuppressMessage("Build", "CA1827:Count() is used where Any() could be used instead to improve performance.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackageBuilder.ValidateIconFile(System.Collections.Generic.IEnumerable{NuGet.Packaging.IPackageFile},System.String)")]
[assembly: SuppressMessage("Build", "CA1801:Parameter signVerifyStartTime of method .ctor is never used. Remove the parameter or use it in the method body.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackageExtractionResult.#ctor(System.Boolean,System.TimeSpan,NuGet.Packaging.PackageSignType,System.Boolean,System.DateTimeOffset,System.DateTimeOffset)")]
[assembly: SuppressMessage("Build", "CA1308:In method '.ctor', replace the call to 'ToLowerInvariant' with 'ToUpperInvariant'.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackageExtractionTelemetryEvent.#ctor(NuGet.Packaging.PackageSaveMode,NuGet.Common.NuGetOperationStatus,NuGet.Packaging.ExtractionSource,NuGet.Packaging.Core.PackageIdentity)")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'PackageExtractionTelemetryEvent.PackageExtractionTelemetryEvent(PackageSaveMode packageSaveMode, NuGetOperationStatus status, ExtractionSource extractionSource, PackageIdentity packageId)', validate parameter 'packageId' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackageExtractionTelemetryEvent.#ctor(NuGet.Packaging.PackageSaveMode,NuGet.Common.NuGetOperationStatus,NuGet.Packaging.ExtractionSource,NuGet.Packaging.Core.PackageIdentity)")]
[assembly: SuppressMessage("Build", "CA1827:Count() is used where Any() could be used instead to improve performance.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackageExtractor.DeleteTargetAndTempPaths(System.String,System.String)")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'Task<IEnumerable<string>> PackageExtractor.ExtractPackageAsync(string source, PackageReaderBase packageReader, Stream packageStream, PackagePathResolver packagePathResolver, PackageExtractionContext packageExtractionContext, CancellationToken token, Guid parentId = default(Guid))', validate parameter 'packageReader' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackageExtractor.ExtractPackageAsync(System.String,NuGet.Packaging.PackageReaderBase,System.IO.Stream,NuGet.Packaging.PackagePathResolver,NuGet.Packaging.PackageExtractionContext,System.Threading.CancellationToken,System.Guid)~System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{System.String}}")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'Task<bool> PackageExtractor.InstallFromSourceAsync(PackageIdentity packageIdentity, IPackageDownloader packageDownloader, VersionFolderPathResolver versionFolderPathResolver, PackageExtractionContext packageExtractionContext, CancellationToken token, Guid parentId = default(Guid))', validate parameter 'versionFolderPathResolver' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackageExtractor.InstallFromSourceAsync(NuGet.Packaging.Core.PackageIdentity,NuGet.Packaging.IPackageDownloader,NuGet.Packaging.VersionFolderPathResolver,NuGet.Packaging.PackageExtractionContext,System.Threading.CancellationToken,System.Guid)~System.Threading.Tasks.Task{System.Boolean}")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'Task<bool> PackageExtractor.InstallFromSourceAsync(string source, PackageIdentity packageIdentity, Func<Stream, Task> copyToAsync, VersionFolderPathResolver versionFolderPathResolver, PackageExtractionContext packageExtractionContext, CancellationToken token, Guid parentId = default(Guid))', validate parameter 'versionFolderPathResolver' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackageExtractor.InstallFromSourceAsync(System.String,NuGet.Packaging.Core.PackageIdentity,System.Func{System.IO.Stream,System.Threading.Tasks.Task},NuGet.Packaging.VersionFolderPathResolver,NuGet.Packaging.PackageExtractionContext,System.Threading.CancellationToken,System.Guid)~System.Threading.Tasks.Task{System.Boolean}")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'string PackageFileExtractor.ExtractPackageFile(string source, string target, Stream stream)', validate parameter 'stream' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackageFileExtractor.ExtractPackageFile(System.String,System.String,System.IO.Stream)~System.String")]
[assembly: SuppressMessage("Build", "CA1307:The behavior of 'string.EndsWith(string)' could vary based on the current user's locale settings. Replace this call in 'NuGet.Packaging.PackageFileExtractor.GatherIntellisenseXmlFiles(System.Collections.Generic.IEnumerable<string>)' with a call to 'string.EndsWith(string, System.StringComparison)'.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackageFileExtractor.GatherIntellisenseXmlFiles(System.Collections.Generic.IEnumerable{System.String})~System.Collections.Generic.HashSet{System.String}")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'IEnumerable<string> PackageFolderReader.CopyFiles(string destination, IEnumerable<string> packageFiles, ExtractPackageFileDelegate extractFile, ILogger logger, CancellationToken token)', validate parameter 'packageFiles' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackageFolderReader.CopyFiles(System.String,System.Collections.Generic.IEnumerable{System.String},NuGet.Packaging.Core.ExtractPackageFileDelegate,NuGet.Common.ILogger,System.Threading.CancellationToken)~System.Collections.Generic.IEnumerable{System.String}")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'Task<IEnumerable<ZipFilePair>> PackageHelper.GetInstalledPackageFilesAsync(PackageArchiveReader packageReader, PackageIdentity packageIdentity, PackagePathResolver packagePathResolver, PackageSaveMode packageSaveMode, CancellationToken cancellationToken)', validate parameter 'packageReader' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackageHelper.GetInstalledPackageFilesAsync(NuGet.Packaging.PackageArchiveReader,NuGet.Packaging.Core.PackageIdentity,NuGet.Packaging.PackagePathResolver,NuGet.Packaging.PackageSaveMode,System.Threading.CancellationToken)~System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{NuGet.Packaging.ZipFilePair}}")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'Task<Tuple<string, IEnumerable<ZipFilePair>>> PackageHelper.GetInstalledSatelliteFilesAsync(PackageArchiveReader packageReader, PackagePathResolver packagePathResolver, PackageSaveMode packageSaveMode, CancellationToken cancellationToken)', validate parameter 'packageReader' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackageHelper.GetInstalledSatelliteFilesAsync(NuGet.Packaging.PackageArchiveReader,NuGet.Packaging.PackagePathResolver,NuGet.Packaging.PackageSaveMode,System.Threading.CancellationToken)~System.Threading.Tasks.Task{System.Tuple{System.String,System.Collections.Generic.IEnumerable{NuGet.Packaging.ZipFilePair}}}")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'Task<Tuple<string, IEnumerable<string>>> PackageHelper.GetSatelliteFilesAsync(PackageReaderBase packageReader, PackagePathResolver packagePathResolver, CancellationToken cancellationToken)', validate parameter 'packagePathResolver' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackageHelper.GetSatelliteFilesAsync(NuGet.Packaging.PackageReaderBase,NuGet.Packaging.PackagePathResolver,System.Threading.CancellationToken)~System.Threading.Tasks.Task{System.Tuple{System.String,System.Collections.Generic.IEnumerable{System.String}}}")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'bool PackageHelper.IsAssembly(string path)', validate parameter 'path' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackageHelper.IsAssembly(System.String)~System.Boolean")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'bool PackageHelper.IsNuspec(string path)', validate parameter 'path' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackageHelper.IsNuspec(System.String)~System.Boolean")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'bool PackageHelper.IsRoot(string path)', validate parameter 'path' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackageHelper.IsRoot(System.String)~System.Boolean")]
[assembly: SuppressMessage("Build", "CA1303:Method 'bool PackageIdValidator.IsValidPackageId(string packageId)' passes a literal string as parameter 'message' of a call to 'ArgumentException.ArgumentException(string message)'. Retrieve the following string(s) from a resource table instead: \"packageId\".", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackageIdValidator.IsValidPackageId(System.String)~System.Boolean")]
[assembly: SuppressMessage("Build", "CA2208:Method IsValidPackageId passes parameter name 'packageId' as the message argument to a ArgumentException constructor. Replace this argument with a descriptive message and pass the parameter name in the correct position.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackageIdValidator.IsValidPackageId(System.String)~System.Boolean")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'void PackageIdValidator.ValidatePackageId(string packageId)', validate parameter 'packageId' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackageIdValidator.ValidatePackageId(System.String)")]
[assembly: SuppressMessage("Build", "CA1507:Use nameof in place of string literal 'packagePathResolver'", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackagePathHelper.GetPackageLookupPaths(NuGet.Packaging.Core.PackageIdentity,NuGet.Packaging.PackagePathResolver)~System.Collections.Generic.IEnumerable{System.String}")]
[assembly: SuppressMessage("Build", "CA2208:Method GetPackageLookupPaths passes 'packageIdentity.Version' as the paramName argument to a ArgumentNullException constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackagePathHelper.GetPackageLookupPaths(NuGet.Packaging.Core.PackageIdentity,NuGet.Packaging.PackagePathResolver)~System.Collections.Generic.IEnumerable{System.String}")]
[assembly: SuppressMessage("Build", "CA1308:In method 'GetPackageLookupPaths', replace the call to 'ToLowerInvariant' with 'ToUpperInvariant'.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackagePathHelper.GetPackageLookupPaths(NuGet.Packaging.Core.PackageIdentity,NuGet.Packaging.PackagePathResolver)~System.Collections.Generic.IEnumerable{System.String}")]
[assembly: SuppressMessage("Build", "CA1305:The behavior of 'string.Format(string, object)' could vary based on the current user's locale settings. Replace this call in 'PackagePathResolver.PackagePathResolver(string, [bool])' with a call to 'string.Format(IFormatProvider, string, params object[])'.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackagePathResolver.#ctor(System.String,System.Boolean)")]
[assembly: SuppressMessage("Build", "CA1822:Member GetId does not access instance data and can be marked as static (Shared in VisualBasic)", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackagePathResolver.GetId(NuGet.Packaging.Core.PackageIdentity)~System.String")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'string PackagePathResolver.GetManifestFileName(PackageIdentity packageIdentity)', validate parameter 'packageIdentity' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackagePathResolver.GetManifestFileName(NuGet.Packaging.Core.PackageIdentity)~System.String")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'string PackagePathResolver.GetPackageDownloadMarkerFileName(PackageIdentity packageIdentity)', validate parameter 'packageIdentity' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackagePathResolver.GetPackageDownloadMarkerFileName(NuGet.Packaging.Core.PackageIdentity)~System.String")]
[assembly: SuppressMessage("Build", "CA1822:Member GetVersion does not access instance data and can be marked as static (Shared in VisualBasic)", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackagePathResolver.GetVersion(NuGet.Packaging.Core.PackageIdentity)~System.String")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'NuGetFramework PackageReaderBase.GetFrameworkFromPath(string path, bool allowSubFolders = false)', validate parameter 'path' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackageReaderBase.GetFrameworkFromPath(System.String,System.Boolean)~NuGet.Frameworks.NuGetFramework")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'bool PackageReaderBase.IsReferenceAssembly(string path)', validate parameter 'path' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackageReaderBase.IsReferenceAssembly(System.String)~System.Boolean")]
[assembly: SuppressMessage("Build", "CA1822:Member NormalizeDirectoryPath does not access instance data and can be marked as static (Shared in VisualBasic)", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackageReaderBase.NormalizeDirectoryPath(System.String)~System.String")]
[assembly: SuppressMessage("Build", "CA1305:The behavior of 'char.ToString()' could vary based on the current user's locale settings. Replace this call in 'PackageReaderBase.NormalizeDirectoryPath(string)' with a call to 'char.ToString(IFormatProvider)'.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackageReaderBase.NormalizeDirectoryPath(System.String)~System.String")]
[assembly: SuppressMessage("Build", "CA1307:The behavior of 'string.EndsWith(string)' could vary based on the current user's locale settings. Replace this call in 'NuGet.Packaging.PackageReaderBase.NormalizeDirectoryPath(string)' with a call to 'string.EndsWith(string, System.StringComparison)'.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackageReaderBase.NormalizeDirectoryPath(System.String)~System.String")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'string PackageReaderBase.NormalizeDirectoryPath(string path)', validate parameter 'path' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackageReaderBase.NormalizeDirectoryPath(System.String)~System.String")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'void PackageReaderBase.ValidatePackageEntries(string normalizedDestination, IEnumerable<string> packageFiles, PackageIdentity packageIdentity)', validate parameter 'packageFiles' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackageReaderBase.ValidatePackageEntries(System.String,System.Collections.Generic.IEnumerable{System.String},NuGet.Packaging.Core.PackageIdentity)")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'void PackageReaderBase.ValidatePackageEntry(string normalizedDestination, string normalizedFilePath, PackageIdentity packageIdentity)', validate parameter 'normalizedDestination' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackageReaderBase.ValidatePackageEntry(System.String,System.String,NuGet.Packaging.Core.PackageIdentity)")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'Task<IEnumerable<string>> PackageReaderExtensions.GetPackageFilesAsync(IAsyncPackageCoreReader packageReader, PackageSaveMode packageSaveMode, CancellationToken cancellationToken)', validate parameter 'packageReader' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackageReaderExtensions.GetPackageFilesAsync(NuGet.Packaging.Core.IAsyncPackageCoreReader,NuGet.Packaging.PackageSaveMode,System.Threading.CancellationToken)~System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{System.String}}")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'Task<IEnumerable<string>> PackageReaderExtensions.GetSatelliteFilesAsync(IAsyncPackageContentReader packageReader, string packageLanguage, CancellationToken cancellationToken)', validate parameter 'packageReader' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackageReaderExtensions.GetSatelliteFilesAsync(NuGet.Packaging.IAsyncPackageContentReader,System.String,System.Threading.CancellationToken)~System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{System.String}}")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'bool PackagesConfig.HasAttributeValue(XElement node, string attributeName, string targetValue, out XElement element)', validate parameter 'node' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackagesConfig.HasAttributeValue(System.Xml.Linq.XElement,System.String,System.String,System.Xml.Linq.XElement@)~System.Boolean")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'bool PackagesConfig.TryGetAttribute(XElement node, string name, out string value)', validate parameter 'node' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackagesConfig.TryGetAttribute(System.Xml.Linq.XElement,System.String,System.String@)~System.Boolean")]
[assembly: SuppressMessage("Build", "CA2208:Method .ctor passes parameter name 'stream' as the message argument to a ArgumentException constructor. Replace this argument with a descriptive message and pass the parameter name in the correct position.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackagesConfigWriter.#ctor(System.IO.Stream,System.Boolean,NuGet.Frameworks.IFrameworkNameProvider)")]
[assembly: SuppressMessage("Build", "CA1303:Method 'PackagesConfigWriter.PackagesConfigWriter(Stream stream, bool createNew, IFrameworkNameProvider frameworkMappings)' passes a literal string as parameter 'message' of a call to 'ArgumentException.ArgumentException(string message)'. Retrieve the following string(s) from a resource table instead: \"stream\".", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackagesConfigWriter.#ctor(System.IO.Stream,System.Boolean,NuGet.Frameworks.IFrameworkNameProvider)")]
[assembly: SuppressMessage("Build", "CA1303:Method 'PackagesConfigWriter.PackagesConfigWriter(string fullPath, bool createNew, IFrameworkNameProvider frameworkMappings)' passes a literal string as parameter 'message' of a call to 'ArgumentException.ArgumentException(string message)'. Retrieve the following string(s) from a resource table instead: \"fullPath\".", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackagesConfigWriter.#ctor(System.String,System.Boolean,NuGet.Frameworks.IFrameworkNameProvider)")]
[assembly: SuppressMessage("Build", "CA2208:Method .ctor passes parameter name 'fullPath' as the message argument to a ArgumentException constructor. Replace this argument with a descriptive message and pass the parameter name in the correct position.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackagesConfigWriter.#ctor(System.String,System.Boolean,NuGet.Frameworks.IFrameworkNameProvider)")]
[assembly: SuppressMessage("Build", "CA1063:Modify 'PackagesConfigWriter.Dispose' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackagesConfigWriter.Dispose")]
[assembly: SuppressMessage("Build", "CA1816:Change PackagesConfigWriter.Dispose() to call GC.SuppressFinalize(object). This will prevent derived types that introduce a finalizer from needing to re-implement 'IDisposable' to call it.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackagesConfigWriter.Dispose")]
[assembly: SuppressMessage("Build", "CA1822:Member FindMatchingPackageNode does not access instance data and can be marked as static (Shared in VisualBasic)", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackagesConfigWriter.FindMatchingPackageNode(NuGet.Packaging.PackageReference,System.Xml.Linq.XElement)~System.Xml.Linq.XElement")]
[assembly: SuppressMessage("Build", "CA1822:Member SortPackageNodes does not access instance data and can be marked as static (Shared in VisualBasic)", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PackagesConfigWriter.SortPackageNodes(System.Xml.Linq.XElement)")]
[assembly: SuppressMessage("Build", "CA1305:The behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings. Replace this call in 'ContentFolderInPackageReferenceProjectRule.Validate(PackageArchiveReader)' with a call to 'string.Format(IFormatProvider, string, params object[])'.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Rules.ContentFolderInPackageReferenceProjectRule.Validate(NuGet.Packaging.PackageArchiveReader)~System.Collections.Generic.IEnumerable{NuGet.Common.PackagingLogMessage}")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'IEnumerable<PackagingLogMessage> IconUrlDeprecationWarning.Validate(PackageArchiveReader builder)', validate parameter 'builder' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Rules.IconUrlDeprecationWarning.Validate(NuGet.Packaging.PackageArchiveReader)~System.Collections.Generic.IEnumerable{NuGet.Common.PackagingLogMessage}")]
[assembly: SuppressMessage("Build", "CA1305:The behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings. Replace this call in 'InstallScriptInPackageReferenceProjectRule.Validate(PackageArchiveReader)' with a call to 'string.Format(IFormatProvider, string, params object[])'.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Rules.InstallScriptInPackageReferenceProjectRule.Validate(NuGet.Packaging.PackageArchiveReader)~System.Collections.Generic.IEnumerable{NuGet.Common.PackagingLogMessage}")]
[assembly: SuppressMessage("Build", "CA1305:The behavior of 'StringBuilder.AppendFormat(string, object)' could vary based on the current user's locale settings. Replace this call in 'NoRefOrLibFolderInPackageRule.CreateDirectoriesMessage(string[])' with a call to 'StringBuilder.AppendFormat(IFormatProvider, string, object)'.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Rules.NoRefOrLibFolderInPackageRule.CreateDirectoriesMessage(System.String[])~System.String")]
[assembly: SuppressMessage("Build", "CA1822:Member GenerateWarningString does not access instance data and can be marked as static (Shared in VisualBasic)", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Rules.NoRefOrLibFolderInPackageRule.GenerateWarningString(System.String[])~System.ValueTuple{System.String,System.String}")]
[assembly: SuppressMessage("Build", "CA1305:The behavior of 'string.Format(string, object)' could vary based on the current user's locale settings. Replace this call in 'NoRefOrLibFolderInPackageRule.GenerateWarningString(string[])' with a call to 'string.Format(IFormatProvider, string, params object[])'.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Rules.NoRefOrLibFolderInPackageRule.GenerateWarningString(System.String[])~System.ValueTuple{System.String,System.String}")]
[assembly: SuppressMessage("Build", "CA1305:The behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings. Replace this call in 'NoRefOrLibFolderInPackageRule.Validate(IEnumerable<string>)' with a call to 'string.Format(IFormatProvider, string, params object[])'.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Rules.NoRefOrLibFolderInPackageRule.Validate(System.Collections.Generic.IEnumerable{System.String})~System.Collections.Generic.IEnumerable{NuGet.Common.PackagingLogMessage}")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'IEnumerable<PackagingLogMessage> PathTooLongRule.Validate(PackageArchiveReader builder)', validate parameter 'builder' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Rules.PathTooLongRule.Validate(NuGet.Packaging.PackageArchiveReader)~System.Collections.Generic.IEnumerable{NuGet.Common.PackagingLogMessage}")]
[assembly: SuppressMessage("Build", "CA1827:Count() is used where Any() could be used instead to improve performance.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Rules.ReferencesInNuspecMatchRefAssetsRule.Compare(System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IEnumerable{System.String}},System.Collections.Generic.IEnumerable{System.String})~System.Collections.Generic.IEnumerable{NuGet.Packaging.Rules.ReferencesInNuspecMatchRefAssetsRule.MissingReference}")]
[assembly: SuppressMessage("Build", "CA1307:The behavior of 'string.Equals(string)' could vary based on the current user's locale settings. Replace this call in 'NuGet.Packaging.Rules.ReferencesInNuspecMatchRefAssetsRule.Compare(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, System.Collections.Generic.IEnumerable<string>)' with a call to 'string.Equals(string, System.StringComparison)'.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Rules.ReferencesInNuspecMatchRefAssetsRule.Compare(System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IEnumerable{System.String}},System.Collections.Generic.IEnumerable{System.String})~System.Collections.Generic.IEnumerable{NuGet.Packaging.Rules.ReferencesInNuspecMatchRefAssetsRule.MissingReference}")]
[assembly: SuppressMessage("Build", "CA1827:Count() is used where Any() could be used instead to improve performance.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Rules.ReferencesInNuspecMatchRefAssetsRule.GenerateWarnings(System.Collections.Generic.IEnumerable{NuGet.Packaging.Rules.ReferencesInNuspecMatchRefAssetsRule.MissingReference})~System.Collections.Generic.IEnumerable{NuGet.Common.PackagingLogMessage}")]
[assembly: SuppressMessage("Build", "CA1305:The behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings. Replace this call in 'ReferencesInNuspecMatchRefAssetsRule.GenerateWarnings(IEnumerable<ReferencesInNuspecMatchRefAssetsRule.MissingReference>)' with a call to 'string.Format(IFormatProvider, string, params object[])'.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Rules.ReferencesInNuspecMatchRefAssetsRule.GenerateWarnings(System.Collections.Generic.IEnumerable{NuGet.Packaging.Rules.ReferencesInNuspecMatchRefAssetsRule.MissingReference})~System.Collections.Generic.IEnumerable{NuGet.Common.PackagingLogMessage}")]
[assembly: SuppressMessage("Build", "CA1307:The behavior of 'string.Equals(string)' could vary based on the current user's locale settings. Replace this call in 'NuGet.Packaging.Rules.ReferencesInNuspecMatchRefAssetsRule.GenerateWarnings(System.Collections.Generic.IEnumerable<NuGet.Packaging.Rules.ReferencesInNuspecMatchRefAssetsRule.MissingReference>)' with a call to 'string.Equals(string, System.StringComparison)'.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Rules.ReferencesInNuspecMatchRefAssetsRule.GenerateWarnings(System.Collections.Generic.IEnumerable{NuGet.Packaging.Rules.ReferencesInNuspecMatchRefAssetsRule.MissingReference})~System.Collections.Generic.IEnumerable{NuGet.Common.PackagingLogMessage}")]
[assembly: SuppressMessage("Build", "CA1822:Member GetAllKeys does not access instance data and can be marked as static (Shared in VisualBasic)", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Rules.ReferencesInNuspecMatchRefAssetsRule.GetAllKeys(System.Collections.Generic.IEnumerable{System.Linq.IGrouping{System.String,System.String}})~System.Collections.Generic.List{System.String}")]
[assembly: SuppressMessage("Build", "CA1307:The behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings. Replace this call in 'NuGet.Packaging.Rules.ReferencesInNuspecMatchRefAssetsRule.Validate(NuGet.Packaging.PackageArchiveReader)' with a call to 'string.StartsWith(string, System.StringComparison)'.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Rules.ReferencesInNuspecMatchRefAssetsRule.Validate(NuGet.Packaging.PackageArchiveReader)~System.Collections.Generic.IEnumerable{NuGet.Common.PackagingLogMessage}")]
[assembly: SuppressMessage("Build", "CA1307:The behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings. Replace this call in 'NuGet.Packaging.Rules.UpholdBuildConventionRule.GenerateWarnings(System.Collections.Generic.IEnumerable<NuGet.Packaging.Rules.UpholdBuildConventionRule.ConventionViolator>)' with a call to 'string.StartsWith(string, System.StringComparison)'.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Rules.UpholdBuildConventionRule.GenerateWarnings(System.Collections.Generic.IEnumerable{NuGet.Packaging.Rules.UpholdBuildConventionRule.ConventionViolator})~System.Collections.Generic.IEnumerable{NuGet.Common.PackagingLogMessage}")]
[assembly: SuppressMessage("Build", "CA1305:The behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings. Replace this call in 'UpholdBuildConventionRule.GenerateWarnings(IEnumerable<UpholdBuildConventionRule.ConventionViolator>)' with a call to 'string.Format(IFormatProvider, string, params object[])'.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Rules.UpholdBuildConventionRule.GenerateWarnings(System.Collections.Generic.IEnumerable{NuGet.Packaging.Rules.UpholdBuildConventionRule.ConventionViolator})~System.Collections.Generic.IEnumerable{NuGet.Common.PackagingLogMessage}")]
[assembly: SuppressMessage("Build", "CA1822:Member GetFolderName does not access instance data and can be marked as static (Shared in VisualBasic)", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Rules.UpholdBuildConventionRule.GetFolderName(System.String)~System.String")]
[assembly: SuppressMessage("Build", "CA1307:The behavior of 'string.EndsWith(string)' could vary based on the current user's locale settings. Replace this call in 'NuGet.Packaging.Rules.UpholdBuildConventionRule.IdentifyViolators(System.Collections.Generic.IEnumerable<string>, string)' with a call to 'string.EndsWith(string, System.StringComparison)'.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Rules.UpholdBuildConventionRule.IdentifyViolators(System.Collections.Generic.IEnumerable{System.String},System.String)~System.Collections.Generic.IEnumerable{NuGet.Packaging.Rules.UpholdBuildConventionRule.ConventionViolator}")]
[assembly: SuppressMessage("Build", "CA1827:Count() is used where Any() could be used instead to improve performance.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Rules.UpholdBuildConventionRule.IdentifyViolators(System.Collections.Generic.IEnumerable{System.String},System.String)~System.Collections.Generic.IEnumerable{NuGet.Packaging.Rules.UpholdBuildConventionRule.ConventionViolator}")]
[assembly: SuppressMessage("Build", "CA1307:The behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings. Replace this call in 'NuGet.Packaging.Rules.UpholdBuildConventionRule.Validate(NuGet.Packaging.PackageArchiveReader)' with a call to 'string.StartsWith(string, System.StringComparison)'.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Rules.UpholdBuildConventionRule.Validate(NuGet.Packaging.PackageArchiveReader)~System.Collections.Generic.IEnumerable{NuGet.Common.PackagingLogMessage}")]
[assembly: SuppressMessage("Build", "CA1825:Avoid unnecessary zero-length array allocations.  Use Array.Empty<byte>() instead.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Sha512HashFunction.GetHashBytes~System.Byte[]")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'Accuracy Accuracy.Read(byte[] bytes)', validate parameter 'bytes' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.Accuracy.Read(System.Byte[])~NuGet.Packaging.Signing.Accuracy")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'AlgorithmIdentifier AlgorithmIdentifier.Read(byte[] bytes)', validate parameter 'bytes' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.AlgorithmIdentifier.Read(System.Byte[])~NuGet.Packaging.Signing.AlgorithmIdentifier")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'Task<PackageVerificationResult> AllowListVerificationProvider.GetTrustResultAsync(ISignedPackageReader package, PrimarySignature signature, SignedPackageVerifierSettings settings, CancellationToken token)', validate parameter 'settings' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.AllowListVerificationProvider.GetTrustResultAsync(NuGet.Packaging.Signing.ISignedPackageReader,NuGet.Packaging.Signing.PrimarySignature,NuGet.Packaging.Signing.SignedPackageVerifierSettings,System.Threading.CancellationToken)~System.Threading.Tasks.Task{NuGet.Packaging.Signing.PackageVerificationResult}")]
[assembly: SuppressMessage("Build", "CA1822:Member IsSignatureAllowed does not access instance data and can be marked as static (Shared in VisualBasic)", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.AllowListVerificationProvider.IsSignatureAllowed(NuGet.Packaging.Signing.PrimarySignature,System.Collections.Generic.IReadOnlyCollection{NuGet.Packaging.Signing.VerificationAllowListEntry})~System.Boolean")]
[assembly: SuppressMessage("Build", "CA1801:Parameter package of method VerifyAllowList is never used. Remove the parameter or use it in the method body.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.AllowListVerificationProvider.VerifyAllowList(NuGet.Packaging.Signing.ISignedPackageReader,NuGet.Packaging.Signing.PrimarySignature,NuGet.Packaging.Signing.SignedPackageVerifierSettings)~NuGet.Packaging.Signing.PackageVerificationResult")]
[assembly: SuppressMessage("Build", "CA2208:Method GetSignatureTypeOid passes parameter name 'signatureType' as the message argument to a ArgumentException constructor. Replace this argument with a descriptive message and pass the parameter name in the correct position.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.AttributeUtility.GetSignatureTypeOid(NuGet.Packaging.Signing.SignatureType)~System.String")]
[assembly: SuppressMessage("Build", "CA1303:Method 'string AttributeUtility.GetSignatureTypeOid(SignatureType signatureType)' passes a literal string as parameter 'message' of a call to 'ArgumentException.ArgumentException(string message)'. Retrieve the following string(s) from a resource table instead: \"signatureType\".", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.AttributeUtility.GetSignatureTypeOid(NuGet.Packaging.Signing.SignatureType)~System.String")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'IReadOnlyList<byte[]> CertificateUtility.GetRawDataForCollection(X509Certificate2Collection certificates)', validate parameter 'certificates' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.CertificateUtility.GetRawDataForCollection(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)~System.Collections.Generic.IReadOnlyList{System.Byte[]}")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'bool CertificateUtility.HasExtendedKeyUsage(X509Certificate2 certificate, string ekuOid)', validate parameter 'certificate' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.CertificateUtility.HasExtendedKeyUsage(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String)~System.Boolean")]
[assembly: SuppressMessage("Build", "CA1307:The behavior of 'string.Equals(string, string)' could vary based on the current user's locale settings. Replace this call in 'NuGet.Packaging.Signing.CertificateUtility.HasExtendedKeyUsage(System.Security.Cryptography.X509Certificates.X509Certificate2, string)' with a call to 'string.Equals(string, string, System.StringComparison)'.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.CertificateUtility.HasExtendedKeyUsage(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String)~System.Boolean")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'bool CertificateUtility.IsCertificateValidityPeriodInTheFuture(X509Certificate2 certificate)', validate parameter 'certificate' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.CertificateUtility.IsCertificateValidityPeriodInTheFuture(System.Security.Cryptography.X509Certificates.X509Certificate2)~System.Boolean")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'bool CertificateUtility.IsDateInsideValidityPeriod(X509Certificate2 certificate, DateTimeOffset date)', validate parameter 'certificate' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.CertificateUtility.IsDateInsideValidityPeriod(System.Security.Cryptography.X509Certificates.X509Certificate2,System.DateTimeOffset)~System.Boolean")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'bool CertificateUtility.IsSignatureAlgorithmSupported(X509Certificate2 certificate)', validate parameter 'certificate' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.CertificateUtility.IsSignatureAlgorithmSupported(System.Security.Cryptography.X509Certificates.X509Certificate2)~System.Boolean")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'bool CertificateUtility.IsValidForPurposeFast(X509Certificate2 certificate, string ekuOid)', validate parameter 'certificate' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.CertificateUtility.IsValidForPurposeFast(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String)~System.Boolean")]
[assembly: SuppressMessage("Build", "CA1307:The behavior of 'string.Equals(string, string)' could vary based on the current user's locale settings. Replace this call in 'NuGet.Packaging.Signing.CertificateUtility.IsValidForPurposeFast(System.Security.Cryptography.X509Certificates.X509Certificate2, string)' with a call to 'string.Equals(string, string, System.StringComparison)'.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.CertificateUtility.IsValidForPurposeFast(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String)~System.Boolean")]
[assembly: SuppressMessage("Build", "CA1305:The behavior of 'string.Format(string, object)' could vary based on the current user's locale settings. Replace this call in 'CertificateUtility.X509Certificate2CollectionToString(X509Certificate2Collection, HashAlgorithmName)' with a call to 'string.Format(IFormatProvider, string, params object[])'.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.CertificateUtility.X509Certificate2CollectionToString(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,NuGet.Common.HashAlgorithmName)~System.String")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'string CertificateUtility.X509Certificate2CollectionToString(X509Certificate2Collection certCollection, HashAlgorithmName fingerprintAlgorithm)', validate parameter 'certCollection' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.CertificateUtility.X509Certificate2CollectionToString(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,NuGet.Common.HashAlgorithmName)~System.String")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'string CertificateUtility.X509Certificate2ToString(X509Certificate2 cert, HashAlgorithmName fingerprintAlgorithm)', validate parameter 'cert' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.CertificateUtility.X509Certificate2ToString(System.Security.Cryptography.X509Certificates.X509Certificate2,NuGet.Common.HashAlgorithmName)~System.String")]
[assembly: SuppressMessage("Build", "CA1305:The behavior of 'string.Format(string, object)' could vary based on the current user's locale settings. Replace this call in 'CertificateUtility.X509ChainToString(X509Chain, HashAlgorithmName)' with a call to 'string.Format(IFormatProvider, string, params object[])'.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.CertificateUtility.X509ChainToString(System.Security.Cryptography.X509Certificates.X509Chain,NuGet.Common.HashAlgorithmName)~System.String")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'string CertificateUtility.X509ChainToString(X509Chain chain, HashAlgorithmName fingerprintAlgorithm)', validate parameter 'chain' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.CertificateUtility.X509ChainToString(System.Security.Cryptography.X509Certificates.X509Chain,NuGet.Common.HashAlgorithmName)~System.String")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'CommitmentTypeIndication CommitmentTypeIndication.Read(byte[] bytes)', validate parameter 'bytes' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.CommitmentTypeIndication.Read(System.Byte[])~NuGet.Packaging.Signing.CommitmentTypeIndication")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'CommitmentTypeQualifier CommitmentTypeQualifier.Read(byte[] bytes)', validate parameter 'bytes' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.CommitmentTypeQualifier.Read(System.Byte[])~NuGet.Packaging.Signing.CommitmentTypeQualifier")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'uint Crc32.CalculateCrc(byte[] data)', validate parameter 'data' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.Crc32.CalculateCrc(System.Byte[])~System.UInt32")]
[assembly: SuppressMessage("Build", "CA1305:The behavior of 'byte.ToString(string)' could vary based on the current user's locale settings. Replace this call in 'DerSequenceReader.CheckTag(DerSequenceReader.DerTag, byte[], int)' with a call to 'byte.ToString(string, IFormatProvider)'.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.DerEncoding.DerSequenceReader.CheckTag(NuGet.Packaging.Signing.DerEncoding.DerSequenceReader.DerTag,System.Byte[],System.Int32)")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'EssCertId EssCertId.Read(byte[] bytes)', validate parameter 'bytes' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.EssCertId.Read(System.Byte[])~NuGet.Packaging.Signing.EssCertId")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'EssCertIdV2 EssCertIdV2.Read(byte[] bytes)', validate parameter 'bytes' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.EssCertIdV2.Read(System.Byte[])~NuGet.Packaging.Signing.EssCertIdV2")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'Extensions Extensions.Read(byte[] bytes)', validate parameter 'bytes' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.Extensions.Read(System.Byte[])~NuGet.Packaging.Signing.Extensions")]
[assembly: SuppressMessage("Build", "CA1801:Parameter extraFieldLength of method TryRead is never used. Remove the parameter or use it in the method body.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.ExtraField.TryRead(System.Byte[],System.UInt16,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IReadOnlyList{NuGet.Packaging.Signing.ExtraField}@)~System.Boolean")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'GeneralName GeneralName.Read(byte[] bytes)', validate parameter 'bytes' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.GeneralName.Read(System.Byte[])~NuGet.Packaging.Signing.GeneralName")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'Task<PackageVerificationResult> IntegrityVerificationProvider.GetTrustResultAsync(ISignedPackageReader package, PrimarySignature signature, SignedPackageVerifierSettings settings, CancellationToken token)', validate parameter 'settings' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.IntegrityVerificationProvider.GetTrustResultAsync(NuGet.Packaging.Signing.ISignedPackageReader,NuGet.Packaging.Signing.PrimarySignature,NuGet.Packaging.Signing.SignedPackageVerifierSettings,System.Threading.CancellationToken)~System.Threading.Tasks.Task{NuGet.Packaging.Signing.PackageVerificationResult}")]
[assembly: SuppressMessage("Build", "CA1031:Modify 'VerifyPackageIntegrityAsync' to catch a more specific allowed exception type, or rethrow the exception.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.IntegrityVerificationProvider.VerifyPackageIntegrityAsync(NuGet.Packaging.Signing.ISignedPackageReader,NuGet.Packaging.Signing.PrimarySignature,NuGet.Packaging.Signing.SignedPackageVerifierSettings)~System.Threading.Tasks.Task{NuGet.Packaging.Signing.PackageVerificationResult}")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'IssuerSerial IssuerSerial.Read(byte[] bytes)', validate parameter 'bytes' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.IssuerSerial.Read(System.Byte[])~NuGet.Packaging.Signing.IssuerSerial")]
[assembly: SuppressMessage("Build", "CA1816:Change KeyPairFileReader.Dispose() to call GC.SuppressFinalize(object). This will prevent derived types that introduce a finalizer from needing to re-implement 'IDisposable' to call it.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.KeyPairFileReader.Dispose")]
[assembly: SuppressMessage("Build", "CA1063:Modify 'KeyPairFileReader.Dispose' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.KeyPairFileReader.Dispose")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'string KeyPairFileUtility.GetValueOrThrow(Dictionary<string, string> values, string key)', validate parameter 'values' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.KeyPairFileUtility.GetValueOrThrow(System.Collections.Generic.Dictionary{System.String,System.String},System.String)~System.String")]
[assembly: SuppressMessage("Build", "CA1816:Change KeyPairFileWriter.Dispose() to call GC.SuppressFinalize(object). This will prevent derived types that introduce a finalizer from needing to re-implement 'IDisposable' to call it.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.KeyPairFileWriter.Dispose")]
[assembly: SuppressMessage("Build", "CA1063:Modify 'KeyPairFileWriter.Dispose' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.KeyPairFileWriter.Dispose")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'MessageImprint MessageImprint.Read(byte[] bytes)', validate parameter 'bytes' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.MessageImprint.Read(System.Byte[])~NuGet.Packaging.Signing.MessageImprint")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'NuGetPackageOwners NuGetPackageOwners.Read(byte[] bytes)', validate parameter 'bytes' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.NuGetPackageOwners.Read(System.Byte[])~NuGet.Packaging.Signing.NuGetPackageOwners")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'NuGetV3ServiceIndexUrl NuGetV3ServiceIndexUrl.Read(byte[] bytes)', validate parameter 'bytes' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.NuGetV3ServiceIndexUrl.Read(System.Byte[])~NuGet.Packaging.Signing.NuGetV3ServiceIndexUrl")]
[assembly: SuppressMessage("Build", "CA1801:Parameter settings of method IsValid is never used. Remove the parameter or use it in the method body.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.PackageSignatureVerifier.IsValid(System.Collections.Generic.IEnumerable{NuGet.Packaging.Signing.PackageVerificationResult},NuGet.Packaging.Signing.SignedPackageVerifierSettings)~System.Boolean")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'PolicyInformation PolicyInformation.Read(byte[] bytes)', validate parameter 'bytes' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.PolicyInformation.Read(System.Byte[])~NuGet.Packaging.Signing.PolicyInformation")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'PolicyQualifierInfo PolicyQualifierInfo.Read(byte[] bytes)', validate parameter 'bytes' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.PolicyQualifierInfo.Read(System.Byte[])~NuGet.Packaging.Signing.PolicyQualifierInfo")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'PrimarySignature PrimarySignatureFactory.CreateSignature(SignedCms signedCms)', validate parameter 'signedCms' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.PrimarySignatureFactory.CreateSignature(System.Security.Cryptography.Pkcs.SignedCms)~NuGet.Packaging.Signing.PrimarySignature")]
[assembly: SuppressMessage("Build", "CA2208:Call the ArgumentException constructor that contains a message and/or paramName parameter.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.ReadOnlyBufferedStream.Seek(System.Int64,System.IO.SeekOrigin)~System.Int64")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'Rfc3161TimestampProvider.Rfc3161TimestampProvider(Uri timeStampServerUrl)', validate parameter 'timeStampServerUrl' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.Rfc3161TimestampProvider.#ctor(System.Uri)")]
[assembly: SuppressMessage("Build", "CA1304:The behavior of 'string.ToUpper()' could vary based on the current user's locale settings. Replace this call in 'Rfc3161TimestampProvider.GetNameOrOidString(Oid)' with a call to 'string.ToUpper(CultureInfo)'.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.Rfc3161TimestampProvider.GetNameOrOidString(System.Security.Cryptography.Oid)~System.String")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'Task<PrimarySignature> Rfc3161TimestampProvider.TimestampSignatureAsync(PrimarySignature primarySignature, TimestampRequest request, ILogger logger, CancellationToken token)', validate parameter 'primarySignature' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.Rfc3161TimestampProvider.TimestampSignatureAsync(NuGet.Packaging.Signing.PrimarySignature,NuGet.Packaging.Signing.TimestampRequest,NuGet.Common.ILogger,System.Threading.CancellationToken)~System.Threading.Tasks.Task{NuGet.Packaging.Signing.PrimarySignature}")]
[assembly: SuppressMessage("Build", "CA1303:Method 'Rfc3161TimestampRequest.Rfc3161TimestampRequest(byte[] messageHash, HashAlgorithmName hashAlgorithm, Oid requestedPolicyId = null, byte[] nonce = null, bool requestSignerCertificates = false, X509ExtensionCollection extensions = null)' passes a literal string as parameter 'message' of a call to 'ArgumentException.ArgumentException(string message, string paramName)'. Retrieve the following string(s) from a resource table instead: \"Hash is not the correct size for the identified algorithm\".", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.Rfc3161TimestampRequest.#ctor(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.Oid,System.Byte[],System.Boolean,System.Security.Cryptography.X509Certificates.X509ExtensionCollection)")]
[assembly: SuppressMessage("Build", "CA1303:Method 'Rfc3161TimestampRequest.Rfc3161TimestampRequest(byte[] messageHash, Oid hashAlgorithmId, Oid requestedPolicyId = null, byte[] nonce = null, bool requestSignerCertificates = false, X509ExtensionCollection extensions = null)' passes a literal string as parameter 'message' of a call to 'ArgumentException.ArgumentException(string message, string paramName)'. Retrieve the following string(s) from a resource table instead: \"Nonce must be null or non-empty\".", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.Rfc3161TimestampRequest.#ctor(System.Byte[],System.Security.Cryptography.Oid,System.Security.Cryptography.Oid,System.Byte[],System.Boolean,System.Security.Cryptography.X509Certificates.X509ExtensionCollection)")]
[assembly: SuppressMessage("Build", "CA1303:Method 'Rfc3161TimestampToken Rfc3161TimestampRequest.SubmitRequest(Uri timestampUri, TimeSpan timeout)' passes a literal string as parameter 'message' of a call to 'ArgumentException.ArgumentException(string message, string paramName)'. Retrieve the following string(s) from a resource table instead: \"HTTP/HTTPS required\".", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.Rfc3161TimestampRequest.SubmitRequest(System.Uri,System.TimeSpan)~NuGet.Packaging.Signing.Rfc3161TimestampToken")]
[assembly: SuppressMessage("Build", "CA1305:The behavior of 'byte.ToString(string)' could vary based on the current user's locale settings. Replace this call in 'byte[].ByteArrayToHex()' with a call to 'byte.ToString(string, IFormatProvider)'.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.Rfc3161TimestampUtils.ByteArrayToHex(System.Byte[])~System.String")]
[assembly: SuppressMessage("Build", "CA1307:The behavior of 'string.Equals(string)' could vary based on the current user's locale settings. Replace this call in 'NuGet.Packaging.Signing.Rfc3161TimestampVerificationUtility.TryReadTSTInfoFromSignedCms(System.Security.Cryptography.Pkcs.SignedCms, out NuGet.Packaging.Signing.Rfc3161TimestampTokenInfo)' with a call to 'string.Equals(string, System.StringComparison)'.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.Rfc3161TimestampVerificationUtility.TryReadTSTInfoFromSignedCms(System.Security.Cryptography.Pkcs.SignedCms,NuGet.Packaging.Signing.Rfc3161TimestampTokenInfo@)~System.Boolean")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'Signature.Signature(SignerInfo signerInfo, SignatureType type)', validate parameter 'signerInfo' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.Signature.#ctor(System.Security.Cryptography.Pkcs.SignerInfo,NuGet.Packaging.Signing.SignatureType)")]
[assembly: SuppressMessage("Build", "CA1031:Modify 'Verify' to catch a more specific allowed exception type, or rethrow the exception.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.Signature.Verify(NuGet.Packaging.Signing.Timestamp,NuGet.Packaging.Signing.SignatureVerifySettings,NuGet.Common.HashAlgorithmName,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)~NuGet.Packaging.Signing.SignatureVerificationSummary")]
[assembly: SuppressMessage("Build", "CA1031:Modify 'IsUntrustedRootAllowed' to catch a more specific allowed exception type, or rethrow the exception.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.SignatureTrustAndValidityVerificationProvider.IsUntrustedRootAllowed(NuGet.Packaging.Signing.Signature)~System.Boolean")]
[assembly: SuppressMessage("Build", "CA1801:Parameter signatureCentralDirectoryHeader of method AssertSignatureEntryCommonHeaderFields is never used. Remove the parameter or use it in the method body.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.SignedPackageArchiveIOUtility.AssertSignatureEntryCommonHeaderFields(System.IO.BinaryReader,NuGet.Packaging.Signing.CentralDirectoryHeaderMetadata,System.String,System.String)")]
[assembly: SuppressMessage("Build", "CA1825:Avoid unnecessary zero-length array allocations.  Use Array.Empty<byte>() instead.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.SignedPackageArchiveUtility.GetPackageContentHash(System.IO.BinaryReader)~System.String")]
[assembly: SuppressMessage("Build", "CA1031:Modify 'IsSigned' to catch a more specific allowed exception type, or rethrow the exception.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.SignedPackageArchiveUtility.IsSigned(System.IO.BinaryReader)~System.Boolean")]
[assembly: SuppressMessage("Build", "CA1031:Modify 'VerifySignedPackageIntegrity' to catch a more specific allowed exception type, or rethrow the exception.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.SignedPackageArchiveUtility.VerifySignedPackageIntegrity(System.IO.BinaryReader,System.Security.Cryptography.HashAlgorithm,System.Byte[])~System.Boolean")]
[assembly: SuppressMessage("Build", "CA1825:Avoid unnecessary zero-length array allocations.  Use Array.Empty<byte>() instead.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.SignedPackageArchiveUtility.VerifySignedPackageIntegrity(System.IO.BinaryReader,System.Security.Cryptography.HashAlgorithm,System.Byte[])~System.Boolean")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'SigningCertificate SigningCertificate.Read(byte[] bytes)', validate parameter 'bytes' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.SigningCertificate.Read(System.Byte[])~NuGet.Packaging.Signing.SigningCertificate")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'SigningCertificateV2 SigningCertificateV2.Read(byte[] bytes)', validate parameter 'bytes' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.SigningCertificateV2.Read(System.Byte[])~NuGet.Packaging.Signing.SigningCertificateV2")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'Task SigningUtility.SignAsync(SigningOptions options, SignPackageRequest signRequest, CancellationToken token)', validate parameter 'options' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.SigningUtility.SignAsync(NuGet.Packaging.Signing.SigningOptions,NuGet.Packaging.Signing.SignPackageRequest,System.Threading.CancellationToken)~System.Threading.Tasks.Task")]
[assembly: SuppressMessage("Build", "CA1063:Modify 'SignPackageRequest.Dispose' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.SignPackageRequest.Dispose")]
[assembly: SuppressMessage("Build", "CA1305:The behavior of 'DateTime.ToString()' could vary based on the current user's locale settings. Replace this call in 'Timestamp.Verify(Signature, SignedPackageVerifierSettings, HashAlgorithmName, List<SignatureLog>)' with a call to 'DateTime.ToString(IFormatProvider)'.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.Timestamp.Verify(NuGet.Packaging.Signing.Signature,NuGet.Packaging.Signing.SignedPackageVerifierSettings,NuGet.Common.HashAlgorithmName,System.Collections.Generic.List{NuGet.Packaging.Signing.SignatureLog})~NuGet.Packaging.Signing.SignatureVerificationStatusFlags")]
[assembly: SuppressMessage("Build", "CA1031:Modify 'Remove' to catch a more specific allowed exception type, or rethrow the exception.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.TrustedSignersProvider.Remove(System.Collections.Generic.IReadOnlyList{NuGet.Configuration.TrustedSignerItem})")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'TstInfo TstInfo.Read(byte[] bytes)', validate parameter 'bytes' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.TstInfo.Read(System.Byte[])~NuGet.Packaging.Signing.TstInfo")]
[assembly: SuppressMessage("Build", "CA1031:Modify 'ValidateTimestamp' to catch a more specific allowed exception type, or rethrow the exception.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Signing.VerificationUtility.ValidateTimestamp(NuGet.Packaging.Signing.Timestamp,NuGet.Packaging.Signing.Signature,System.Boolean,System.Collections.Generic.List{NuGet.Packaging.Signing.SignatureLog},NuGet.Packaging.Signing.SigningSpecifications)~NuGet.Packaging.Signing.SignatureVerificationStatusFlags")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'string StreamExtensions.CopyToFile(Stream inputStream, string fileFullPath)', validate parameter 'inputStream' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.StreamExtensions.CopyToFile(System.IO.Stream,System.String)~System.String")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'string VersionFolderPathResolver.GetHashFileName(string packageId, NuGetVersion version)', validate parameter 'packageId' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.VersionFolderPathResolver.GetHashFileName(System.String,NuGet.Versioning.NuGetVersion)~System.String")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'string VersionFolderPathResolver.GetManifestFileName(string packageId, NuGetVersion version)', validate parameter 'packageId' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.VersionFolderPathResolver.GetManifestFileName(System.String,NuGet.Versioning.NuGetVersion)~System.String")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'string VersionFolderPathResolver.GetManifestFilePath(string packageId, NuGetVersion version)', validate parameter 'packageId' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.VersionFolderPathResolver.GetManifestFilePath(System.String,NuGet.Versioning.NuGetVersion)~System.String")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'string VersionFolderPathResolver.GetPackageDirectory(string packageId, NuGetVersion version)', validate parameter 'version' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.VersionFolderPathResolver.GetPackageDirectory(System.String,NuGet.Versioning.NuGetVersion)~System.String")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'string VersionFolderPathResolver.GetPackageDownloadMarkerFileName(string packageId)', validate parameter 'packageId' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.VersionFolderPathResolver.GetPackageDownloadMarkerFileName(System.String)~System.String")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'string VersionFolderPathResolver.GetPackageFileName(string packageId, NuGetVersion version)', validate parameter 'packageId' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.VersionFolderPathResolver.GetPackageFileName(System.String,NuGet.Versioning.NuGetVersion)~System.String")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'string VersionFolderPathResolver.GetVersionListDirectory(string packageId)', validate parameter 'packageId' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.VersionFolderPathResolver.GetVersionListDirectory(System.String)~System.String")]
[assembly: SuppressMessage("Build", "CA1308:In method 'Normalize', replace the call to 'ToLowerInvariant' with 'ToUpperInvariant'.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.VersionFolderPathResolver.Normalize(NuGet.Versioning.NuGetVersion)~System.String")]
[assembly: SuppressMessage("Build", "CA1308:In method 'Normalize', replace the call to 'ToLowerInvariant' with 'ToUpperInvariant'.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.VersionFolderPathResolver.Normalize(System.String)~System.String")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'IEnumerable<XElement> XElementExtensions.ElementsNoNamespace(XContainer container, string localName)', validate parameter 'container' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.XElementExtensions.ElementsNoNamespace(System.Xml.Linq.XContainer,System.String)~System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'XElement XElementExtensions.Except(XElement source, XElement target)', validate parameter 'source' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.XElementExtensions.Except(System.Xml.Linq.XElement,System.Xml.Linq.XElement)~System.Xml.Linq.XElement")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'string XElementExtensions.GetOptionalAttributeValue(XElement element, string localName, string namespaceName = null)', validate parameter 'element' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.XElementExtensions.GetOptionalAttributeValue(System.Xml.Linq.XElement,System.String,System.String)~System.String")]
[assembly: SuppressMessage("Build", "CA1308:In method 'GetXElementFromLicenseMetadata', replace the call to 'ToLowerInvariant' with 'ToUpperInvariant'.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.Xml.PackageMetadataXmlExtensions.GetXElementFromLicenseMetadata(System.Xml.Linq.XNamespace,NuGet.Packaging.LicenseMetadata)~System.Xml.Linq.XElement")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'IEnumerable<string> ZipArchiveExtensions.GetFiles(ZipArchive zipArchive)', validate parameter 'zipArchive' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.ZipArchiveExtensions.GetFiles(System.IO.Compression.ZipArchive)~System.Collections.Generic.IEnumerable{System.String}")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'ZipArchiveEntry ZipArchiveExtensions.LookupEntry(ZipArchive zipArchive, string path)', validate parameter 'zipArchive' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.ZipArchiveExtensions.LookupEntry(System.IO.Compression.ZipArchive,System.String)~System.IO.Compression.ZipArchiveEntry")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'string ZipArchiveExtensions.SaveAsFile(ZipArchiveEntry entry, string fileFullPath, ILogger logger)', validate parameter 'entry' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.ZipArchiveExtensions.SaveAsFile(System.IO.Compression.ZipArchiveEntry,System.String,NuGet.Common.ILogger)~System.String")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'void ZipArchiveExtensions.UpdateFileTimeFromEntry(ZipArchiveEntry entry, string fileFullPath, ILogger logger)', validate parameter 'entry' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.ZipArchiveExtensions.UpdateFileTimeFromEntry(System.IO.Compression.ZipArchiveEntry,System.String,NuGet.Common.ILogger)")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'RuntimeGraph JsonRuntimeFormat.ReadRuntimeGraph(JToken json)', validate parameter 'json' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.RuntimeModel.JsonRuntimeFormat.ReadRuntimeGraph(Newtonsoft.Json.Linq.JToken)~NuGet.RuntimeModel.RuntimeGraph")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'void JsonRuntimeFormat.WriteRuntimeGraph(IObjectWriter writer, RuntimeGraph runtimeGraph)', validate parameter 'writer' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.RuntimeModel.JsonRuntimeFormat.WriteRuntimeGraph(NuGet.RuntimeModel.IObjectWriter,NuGet.RuntimeModel.RuntimeGraph)")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'RuntimeDescription RuntimeDescription.Merge(RuntimeDescription left, RuntimeDescription right)', validate parameter 'right' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.RuntimeModel.RuntimeDescription.Merge(NuGet.RuntimeModel.RuntimeDescription,NuGet.RuntimeModel.RuntimeDescription)~NuGet.RuntimeModel.RuntimeDescription")]
[assembly: SuppressMessage("Build", "CA1303:Method 'RuntimeDescription RuntimeDescription.Merge(RuntimeDescription left, RuntimeDescription right)' passes a literal string as parameter 'message' of a call to 'InvalidOperationException.InvalidOperationException(string message)'. Retrieve the following string(s) from a resource table instead: \"TODO: Unable to merge runtimes, they do not have the same identifier\".", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.RuntimeModel.RuntimeDescription.Merge(NuGet.RuntimeModel.RuntimeDescription,NuGet.RuntimeModel.RuntimeDescription)~NuGet.RuntimeModel.RuntimeDescription")]
[assembly: SuppressMessage("Build", "CA1062:In externally visible method 'RuntimeGraph RuntimeGraph.Merge(RuntimeGraph left, RuntimeGraph right)', validate parameter 'right' is non-null before using it. If appropriate, throw an ArgumentNullException when the argument is null or add a Code Contract precondition asserting non-null argument.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.RuntimeModel.RuntimeGraph.Merge(NuGet.RuntimeModel.RuntimeGraph,NuGet.RuntimeModel.RuntimeGraph)~NuGet.RuntimeModel.RuntimeGraph")]
[assembly: SuppressMessage("Build", "CA2227:Change 'Entries' to be read-only by removing the property setter.", Justification = "<Pending>", Scope = "member", Target = "~P:NuGet.ContentModel.SelectionCriteria.Entries")]
[assembly: SuppressMessage("Build", "CA2227:Change 'Properties' to be read-only by removing the property setter.", Justification = "<Pending>", Scope = "member", Target = "~P:NuGet.ContentModel.SelectionCriteriaEntry.Properties")]
[assembly: SuppressMessage("Build", "CA1303:Method 'SelectionCriteriaEntryBuilder SelectionCriteriaEntryBuilder.this[string key, object value].get' passes a literal string as parameter 'message' of a call to 'Exception.Exception(string message)'. Retrieve the following string(s) from a resource table instead: \"Undefined property used for criteria\".", Justification = "<Pending>", Scope = "member", Target = "~P:NuGet.ContentModel.SelectionCriteriaEntryBuilder.Item(System.String,System.Object)")]
[assembly: SuppressMessage("Build", "CA1303:Method 'SelectionCriteriaEntryBuilder SelectionCriteriaEntryBuilder.this[string key, string value].get' passes a literal string as parameter 'message' of a call to 'Exception.Exception(string message)'. Retrieve the following string(s) from a resource table instead: \"Undefined value used for criteria\".", Justification = "<Pending>", Scope = "member", Target = "~P:NuGet.ContentModel.SelectionCriteriaEntryBuilder.Item(System.String,System.String)")]
[assembly: SuppressMessage("Build", "CA1056:Change the type of property IRepositoryCertificateInfo.ContentUrl from string to System.Uri.", Justification = "<Pending>", Scope = "member", Target = "~P:NuGet.Packaging.Core.IRepositoryCertificateInfo.ContentUrl")]
[assembly: SuppressMessage("Build", "CA1056:Change the type of property RepositoryMetadata.Url from string to System.Uri.", Justification = "<Pending>", Scope = "member", Target = "~P:NuGet.Packaging.Core.RepositoryMetadata.Url")]
[assembly: SuppressMessage("Build", "CA2227:Change 'PackageAssemblyReferences' to be read-only by removing the property setter.", Justification = "<Pending>", Scope = "member", Target = "~P:NuGet.Packaging.PackageBuilder.PackageAssemblyReferences")]
[assembly: SuppressMessage("Build", "CA2227:Change 'PackageTypes' to be read-only by removing the property setter.", Justification = "<Pending>", Scope = "member", Target = "~P:NuGet.Packaging.PackageBuilder.PackageTypes")]
[assembly: SuppressMessage("Build", "CA2227:Change 'TargetFrameworks' to be read-only by removing the property setter.", Justification = "<Pending>", Scope = "member", Target = "~P:NuGet.Packaging.PackageBuilder.TargetFrameworks")]
[assembly: SuppressMessage("Build", "CA1819:Properties should not return arrays", Justification = "<Pending>", Scope = "member", Target = "~P:NuGet.Packaging.PackagingConstants.Folders.Known")]
[assembly: SuppressMessage("Build", "CA1822:Member CompatMatchFoundWarningMessageFormat does not access instance data and can be marked as static (Shared in VisualBasic)", Justification = "<Pending>", Scope = "member", Target = "~P:NuGet.Packaging.Rules.DependenciesGroupsForEachTFMRule.CompatMatchFoundWarningMessageFormat")]
[assembly: SuppressMessage("Build", "CA1819:Properties should not return arrays", Justification = "<Pending>", Scope = "member", Target = "~P:NuGet.Packaging.Signing.CommitmentTypeQualifier.Qualifier")]
[assembly: SuppressMessage("Build", "CA1819:Properties should not return arrays", Justification = "<Pending>", Scope = "member", Target = "~P:NuGet.Packaging.Signing.EssCertId.CertificateHash")]
[assembly: SuppressMessage("Build", "CA1819:Properties should not return arrays", Justification = "<Pending>", Scope = "member", Target = "~P:NuGet.Packaging.Signing.EssCertIdV2.CertificateHash")]
[assembly: SuppressMessage("Build", "CA1819:Properties should not return arrays", Justification = "<Pending>", Scope = "member", Target = "~P:NuGet.Packaging.Signing.Extension.Value")]
[assembly: SuppressMessage("Build", "CA1819:Properties should not return arrays", Justification = "<Pending>", Scope = "member", Target = "~P:NuGet.Packaging.Signing.IssuerSerial.SerialNumber")]
[assembly: SuppressMessage("Build", "CA1819:Properties should not return arrays", Justification = "<Pending>", Scope = "member", Target = "~P:NuGet.Packaging.Signing.MessageImprint.HashedMessage")]
[assembly: SuppressMessage("Build", "CA1819:Properties should not return arrays", Justification = "<Pending>", Scope = "member", Target = "~P:NuGet.Packaging.Signing.PolicyQualifierInfo.Qualifier")]
[assembly: SuppressMessage("Build", "CA2227:Change 'CentralDirectoryHeaders' to be read-only by removing the property setter.", Justification = "<Pending>", Scope = "member", Target = "~P:NuGet.Packaging.Signing.SignedPackageArchiveMetadata.CentralDirectoryHeaders")]
[assembly: SuppressMessage("Build", "CA1819:Properties should not return arrays", Justification = "<Pending>", Scope = "member", Target = "~P:NuGet.Packaging.Signing.SigningSpecifications.AllowedHashAlgorithmOids")]
[assembly: SuppressMessage("Build", "CA1819:Properties should not return arrays", Justification = "<Pending>", Scope = "member", Target = "~P:NuGet.Packaging.Signing.SigningSpecifications.AllowedHashAlgorithms")]
[assembly: SuppressMessage("Build", "CA1819:Properties should not return arrays", Justification = "<Pending>", Scope = "member", Target = "~P:NuGet.Packaging.Signing.SigningSpecifications.AllowedSignatureAlgorithmOids")]
[assembly: SuppressMessage("Build", "CA1819:Properties should not return arrays", Justification = "<Pending>", Scope = "member", Target = "~P:NuGet.Packaging.Signing.SigningSpecifications.AllowedSignatureAlgorithms")]
[assembly: SuppressMessage("Build", "CA1819:Properties should not return arrays", Justification = "<Pending>", Scope = "member", Target = "~P:NuGet.Packaging.Signing.TimestampRequest.HashedMessage")]
[assembly: SuppressMessage("Build", "CA1819:Properties should not return arrays", Justification = "<Pending>", Scope = "member", Target = "~P:NuGet.Packaging.Signing.TstInfo.Nonce")]
[assembly: SuppressMessage("Build", "CA1819:Properties should not return arrays", Justification = "<Pending>", Scope = "member", Target = "~P:NuGet.Packaging.Signing.TstInfo.SerialNumber")]
[assembly: SuppressMessage("Build", "CA1819:Properties should not return arrays", Justification = "<Pending>", Scope = "member", Target = "~P:NuGet.Packaging.Signing.TstInfo.Tsa")]
[assembly: SuppressMessage("Build", "CA1012:Abstract type NuspecCoreReaderBase should not have constructors", Justification = "<Pending>", Scope = "type", Target = "~T:NuGet.Packaging.Core.NuspecCoreReaderBase")]
[assembly: SuppressMessage("Build", "CA2237:Add [Serializable] to PackagingException as this type implements ISerializable", Justification = "<Pending>", Scope = "type", Target = "~T:NuGet.Packaging.Core.PackagingException")]
[assembly: SuppressMessage("Build", "CA1052:Type 'NuGetLicenseData' is a static holder type but is neither static nor NotInheritable", Justification = "<Pending>", Scope = "type", Target = "~T:NuGet.Packaging.Licenses.NuGetLicenseData")]
[assembly: SuppressMessage("Build", "CA2237:Add [Serializable] to NuGetLicenseExpressionParsingException as this type implements ISerializable", Justification = "<Pending>", Scope = "type", Target = "~T:NuGet.Packaging.Licenses.NuGetLicenseExpressionParsingException")]
[assembly: SuppressMessage("Build", "CA1052:Type 'NupkgMetadataFileFormat' is a static holder type but is neither static nor NotInheritable", Justification = "<Pending>", Scope = "type", Target = "~T:NuGet.Packaging.NupkgMetadataFileFormat")]
[assembly: SuppressMessage("Build", "CA1012:Abstract type PackageReaderBase should not have constructors", Justification = "<Pending>", Scope = "type", Target = "~T:NuGet.Packaging.PackageReaderBase")]
[assembly: SuppressMessage("Build", "CA1063:Provide an overridable implementation of Dispose(bool) on 'PackagesConfigWriter' or mark the type as sealed. A call to Dispose(false) should only clean up native resources. A call to Dispose(true) should clean up both managed and native resources.", Justification = "<Pending>", Scope = "type", Target = "~T:NuGet.Packaging.PackagesConfigWriter")]
[assembly: SuppressMessage("Build", "CA1063:Provide an overridable implementation of Dispose(bool) on 'KeyPairFileReader' or mark the type as sealed. A call to Dispose(false) should only clean up native resources. A call to Dispose(true) should clean up both managed and native resources.", Justification = "<Pending>", Scope = "type", Target = "~T:NuGet.Packaging.Signing.KeyPairFileReader")]
[assembly: SuppressMessage("Build", "CA1063:Provide an overridable implementation of Dispose(bool) on 'KeyPairFileWriter' or mark the type as sealed. A call to Dispose(false) should only clean up native resources. A call to Dispose(true) should clean up both managed and native resources.", Justification = "<Pending>", Scope = "type", Target = "~T:NuGet.Packaging.Signing.KeyPairFileWriter")]
[assembly: SuppressMessage("Build", "CA1012:Abstract type PackageVerificationResult should not have constructors", Justification = "<Pending>", Scope = "type", Target = "~T:NuGet.Packaging.Signing.PackageVerificationResult")]
[assembly: SuppressMessage("Build", "CA1067:Type NuGet.Packaging.Signing.SignatureLog should override Equals because it implements IEquatable<T>", Justification = "<Pending>", Scope = "type", Target = "~T:NuGet.Packaging.Signing.SignatureLog")]
[assembly: SuppressMessage("Build", "CA1801:Parameter token of method SignAsync is never used. Remove the parameter or use it in the method body.", Justification = "<Pending>", Scope = "type", Target = "~T:NuGet.Packaging.Signing.SigningUtility")]
[assembly: SuppressMessage("Build", "CA1063:Provide an overridable implementation of Dispose(bool) on 'SignPackageRequest' or mark the type as sealed. A call to Dispose(false) should only clean up native resources. A call to Dispose(true) should clean up both managed and native resources.", Justification = "<Pending>", Scope = "type", Target = "~T:NuGet.Packaging.Signing.SignPackageRequest")]
[assembly: SuppressMessage("Build", "CA1012:Abstract type VerificationAllowListEntry should not have constructors", Justification = "<Pending>", Scope = "type", Target = "~T:NuGet.Packaging.Signing.VerificationAllowListEntry")]
[assembly: SuppressMessage("Build", "CA1067:Type NuGet.RuntimeModel.RuntimeGraph.RuntimeCompatKey should override Equals because it implements IEquatable<T>", Justification = "<Pending>", Scope = "type", Target = "~T:NuGet.RuntimeModel.RuntimeGraph.RuntimeCompatKey")]
[assembly: SuppressMessage("Build", "CA1067:Type NuGet.RuntimeModel.RuntimeGraph.RuntimeDependencyKey should override Equals because it implements IEquatable<T>", Justification = "<Pending>", Scope = "type", Target = "~T:NuGet.RuntimeModel.RuntimeGraph.RuntimeDependencyKey")]
[assembly: SuppressMessage("Build", "CA1307:The behavior of 'string.GetHashCode()' could vary based on the current user's locale settings. Replace this call in 'NuGet.ContentModel.ContentItemCollection.GroupComparer.GetHashCode(NuGet.ContentModel.ContentItem)' with a call to 'string.GetHashCode(System.StringComparison)'.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.ContentModel.ContentItemCollection.GroupComparer.GetHashCode(NuGet.ContentModel.ContentItem)~System.Int32")]
[assembly: SuppressMessage("Build", "CA1307:The behavior of 'string.GetHashCode()' could vary based on the current user's locale settings. Replace this call in 'NuGet.Packaging.FrameworkSpecificGroup.GetHashCode()' with a call to 'string.GetHashCode(System.StringComparison)'.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.FrameworkSpecificGroup.GetHashCode~System.Int32")]
[assembly: SuppressMessage("Build", "CA1307:The behavior of 'string.GetHashCode()' could vary based on the current user's locale settings. Replace this call in 'NuGet.Packaging.PhysicalPackageFile.GetHashCode()' with a call to 'string.GetHashCode(System.StringComparison)'.", Justification = "<Pending>", Scope = "member", Target = "~M:NuGet.Packaging.PhysicalPackageFile.GetHashCode~System.Int32")]
[assembly: SuppressMessage("ApiDesign", "RS0026:Do not add multiple public overloads with optional parameters", Justification = "API already shipped", Scope = "member", Target = "~M:NuGet.Packaging.PackageExtractor.ExtractPackageAsync(System.String,System.IO.Stream,NuGet.Packaging.PackagePathResolver,NuGet.Packaging.PackageExtractionContext,System.Threading.CancellationToken,System.Guid)~System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{System.String}}")]
[assembly: SuppressMessage("ApiDesign", "RS0026:Do not add multiple public overloads with optional parameters", Justification = "API already shipped", Scope = "member", Target = "~M:NuGet.Packaging.PackageExtractor.ExtractPackageAsync(System.String,NuGet.Packaging.PackageReaderBase,System.IO.Stream,NuGet.Packaging.PackagePathResolver,NuGet.Packaging.PackageExtractionContext,System.Threading.CancellationToken,System.Guid)~System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{System.String}}")]
[assembly: SuppressMessage("ApiDesign", "RS0026:Do not add multiple public overloads with optional parameters", Justification = "API already shipped", Scope = "member", Target = "~M:NuGet.Packaging.PackageExtractor.ExtractPackageAsync(System.String,NuGet.Packaging.PackageReaderBase,NuGet.Packaging.PackagePathResolver,NuGet.Packaging.PackageExtractionContext,System.Threading.CancellationToken,System.Guid)~System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{System.String}}")]
[assembly: SuppressMessage("ApiDesign", "RS0026:Do not add multiple public overloads with optional parameters", Justification = "API already shipped", Scope = "member", Target = "~M:NuGet.Packaging.PackageExtractor.InstallFromSourceAsync(System.String,NuGet.Packaging.Core.PackageIdentity,System.Func{System.IO.Stream,System.Threading.Tasks.Task},NuGet.Packaging.VersionFolderPathResolver,NuGet.Packaging.PackageExtractionContext,System.Threading.CancellationToken,System.Guid)~System.Threading.Tasks.Task{System.Boolean}")]
[assembly: SuppressMessage("ApiDesign", "RS0026:Do not add multiple public overloads with optional parameters", Justification = "API already shipped", Scope = "member", Target = "~M:NuGet.Packaging.PackageExtractor.InstallFromSourceAsync(NuGet.Packaging.Core.PackageIdentity,NuGet.Packaging.IPackageDownloader,NuGet.Packaging.VersionFolderPathResolver,NuGet.Packaging.PackageExtractionContext,System.Threading.CancellationToken,System.Guid)~System.Threading.Tasks.Task{System.Boolean}")]
[assembly: SuppressMessage("ApiDesign", "RS0027:Public API with optional parameter(s) should have the most parameters amongst its public overloads.", Justification = "API already shipped", Scope = "member", Target = "~M:NuGet.Packaging.PackageArchiveReader.#ctor(System.String,NuGet.Frameworks.IFrameworkNameProvider,NuGet.Frameworks.IFrameworkCompatibilityProvider)")]
