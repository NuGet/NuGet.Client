<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>$(NETFXTargetFramework)</TargetFramework>
    <Description>A functional (end-to-end) test suite for NuGet.CommandLine. Contains tests for every nuget.exe command.</Description>
  </PropertyGroup>

  <ItemGroup>
    <EmbeddedResource Include="compiler\resources\*" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="compiler\resources\pc.packages.lock.json" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\TestUtilities\Test.Utility\Test.Utility.csproj" />
    <ProjectReference Include="..\..\NuGet.Clients.Tests\NuGet.CommandLine.Test\NuGet.CommandLine.Test.csproj" />
    <ProjectReference Include="..\..\NuGet.Core.Tests\NuGet.Configuration.Test\NuGet.Configuration.Test.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Reference Include="System.IO.Compression" />
  </ItemGroup>

  <ItemGroup>
    <None Include="xunit.runner.json"
          CopyToOutputDirectory="PreserveNewest" />
  </ItemGroup>

  <Target Name="CopyFinalNuGetExeToOutputPath"
          AfterTargets="PrepareForRun"
          Inputs="$(ArtifactsDirectory)$(VsixOutputDirName)\NuGet.exe"
          Outputs="$(OutputPath)NuGet\NuGet.exe"
          Condition="'$(SkipILMergeOfNuGetExe)' != 'true'">
    <Copy SourceFiles="$(ArtifactsDirectory)$(VsixOutputDirName)\NuGet.exe"
          DestinationFiles="$(OutputPath)NuGet\NuGet.exe"
          SkipUnchangedFiles="$(SkipCopyUnchangedFiles)"
          OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)"
          Retries="$(CopyRetryCount)"
          RetryDelayMilliseconds="$(CopyRetryDelayMilliseconds)"
          UseHardlinksIfPossible="$(CreateHardLinksForCopyLocalIfPossible)"
          UseSymboliclinksIfPossible="$(CreateSymbolicLinksForCopyLocalIfPossible)">
      <Output TaskParameter="DestinationFiles"
              ItemName="FileWritesShareable" />
      <Output TaskParameter="CopiedFiles"
              ItemName="ReferencesCopiedInThisBuild" />
    </Copy>
  </Target>
</Project>
